name: Django CI Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  PYTHON_VERSION: "3.10"
  DB_NAME: test_db
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_HOST: localhost
  DB_PORT: 5432
  FRONTEND_URL: http://localhost:5173
  DJANGO_SETTINGS_MODULE: config.settings
  DJANGO_SECRET_KEY: "dummy-secret-key-for-ci"
  DEFAULT_FROM_EMAIL: noreply@localhost
  MONGO_HOST: localhost
  MONGO_PORT: 27017
  MONGO_DB_NAME: test_chat_db

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run Pylint
        run: |
          export PYTHONPATH=$(pwd)
          score=$(pylint --rcfile=backend/.pylintrc backend/ | grep "Your code has been rated at" | awk '{print $7}' | cut -d/ -f1)

      - name: Check code formatting with Black
        run: black --check backend/

  test:
    runs-on: ubuntu-latest
    needs: lint

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mongo:
        image: mongo:6
        ports:
          - 27017:27017

    env:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      REDIS_URL: redis://${DB_HOST}:6379
      MONGO_URL: mongodb://${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB_NAME}



    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run Django system checks
        run: python backend/manage.py check --deploy

      - name: Run migrations
        run: python backend/manage.py migrate --noinput

      - name: Collect static files
        run: python backend/manage.py collectstatic --noinput --clear
        env:
          DJANGO_SETTINGS_MODULE: ${{ env.DJANGO_SETTINGS_MODULE }}

      - name: Run tests with coverage
        run: |
          cd backend
          pytest --cov=. --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
