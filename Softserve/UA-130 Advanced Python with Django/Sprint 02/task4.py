# As input data, you have a string that consists of words that have duplicated characters at the end of it.

# All duplications may be in the next format:

# wordxxxx
# wordxyxyxy
# wordxyzxyzxyz
# , where x, xy or xyz repeated ending of the word

# Using re module write function pretty_message() that remove all duplications

# For example:

# –¢–µ—Å—Ç	Result
# data = "Thisssssssss isisisis echooooooo stringggg. Replaceaceaceace repeatedededed groupssss of symbolssss"
# print(pretty_message(data))
# This is echo string. Replace repeated groups of symbols
# data = "Another input data string"
# print(pretty_message(data))

# –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –æ–∫–æ–Ω—á–∞–Ω–∏–π —Å–ª–æ–≤ –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ**.  
# –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å **–≥—Ä—É–ø–ø—ã –∑–∞—Ö–≤–∞—Ç–∞ –∏ –æ–±—Ä–∞—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏**, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏ —É–±—Ä–∞—Ç—å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω—Ü–µ —Å–ª–æ–≤.  

### **–†–µ—à–µ–Ω–∏–µ –Ω–∞ Python**

import re

def pretty_message(text):
    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä—è—é—â–µ–≥–æ—Å—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–ª–æ–≤
    pattern = r'\b(\w*?)(\w{1,3})\2+\b'
    
    # –ó–∞–º–µ–Ω—è–µ–º –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å —Å–ª–æ–≤–∞
    cleaned_text = re.sub(pattern, r'\1\2', text)
    
    return cleaned_text


# –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã
data1 = "Thisssssssss isisisis echooooooo stringggg. Replaceaceaceace repeatedededed groupssss of symbolssss"
print(pretty_message(data1))  # "This is echo string. Replace repeated groups of symbols"

data2 = "Another input data string"
print(pretty_message(data2))  # "Another input data string" (–∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç)

# ### üîé **–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ?**
# ```regex
# \b(\w+?)(\1+)\b
# ```
# 1. **`\b`** ‚Üí –≥—Ä–∞–Ω–∏—Ü–∞ —Å–ª–æ–≤–∞ (—á—Ç–æ–±—ã –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–ª–æ–≤–∞ —Ü–µ–ª–∏–∫–æ–º).  
# 2. **`(\w+?)`** ‚Üí –ø–µ—Ä–≤–∞—è –≥—Ä—É–ø–ø–∞: –∏—â–µ—Ç **–æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å —Å–ª–æ–≤–∞** (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤, —á—Ç–æ–±—ã –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –∫–æ—Ä–µ–Ω—å).  
# 3. **`(\1+)`** ‚Üí –≤—Ç–æ—Ä–∞—è –≥—Ä—É–ø–ø–∞: –ø–æ–≤—Ç–æ—Ä—è–µ—Ç **–ø–µ—Ä–≤–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ** (`\1`) **–æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑**.  
# 4. **`\b`** ‚Üí –≥—Ä–∞–Ω–∏—Ü–∞ —Å–ª–æ–≤–∞ –≤ –∫–æ–Ω—Ü–µ.  
# 5. **`re.sub(pattern, r'\1', text)`** ‚Üí –∑–∞–º–µ–Ω—è–µ—Ç —Å–ª–æ–≤–æ —Å –ø–æ–≤—Ç–æ—Ä–æ–º –Ω–∞ –µ–≥–æ **–ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é —Ñ–æ—Ä–º—É** (`\1`).

# ---

# ### ‚úÖ **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?**
# - –ù–∞—Ö–æ–¥–∏—Ç **–ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–ª–æ–≤** (`ssss`, `isisis`, `aceaceace`, `edededed` –∏ —Ç. –¥.).
# - **–£–¥–∞–ª—è–µ—Ç –ø–æ–≤—Ç–æ—Ä—ã**, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –∏—Å—Ö–æ–¥–Ω—ã–µ –∫–æ—Ä–Ω–∏ —Å–ª–æ–≤.
# - –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç **–ª—é–±–æ–π —Ç–µ–∫—Å—Ç**, –≥–¥–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —ç—Ç–∞ –æ—à–∏–±–∫–∞.