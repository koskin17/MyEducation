# Create function find(file, key)

# This function parses json-file and returns all unique values of the key.

# 1.json:
# [{"name": "user_1‚Äù, "password": "pass_1‚Äù},
# {"name": "user_2‚Äù, "password": ["pass_1", "qwerty‚Äú]} ]

# find("1.json", "password") returns ["pass_1", "qwerty"]

# 2.json:
# [{"name": "user_1‚Äù, "credentials": {"username": "user_user‚Äù, "password": "1234qweQWE"}}, {"name": "user_2‚Äù, "password": ["pass_1 ", "qwerty "]}]

# find("2.json", "password") returns ["1234qweQWE", "pass_1", "qwerty"]

# 3.json:
# {"name": "user_1","credentials": {"username": "user_user","password": "1234qweQWE"}}

# find("3.json", "password") returns ["1234qweQWE"]

# –í–æ—Ç —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏:

import json

def find(file, key):
    """Function to find all unique values ‚Äã‚Äãof a key in a JSON file."""
    
    def extract_values(obj, key):
        """A recursive function to extract all values ‚Äã‚Äãof the key `key` from nested structures."""
        values = set()
        
        if isinstance(obj, dict):
            # If the object is a dictionary, check if the required key exists
            if key in obj:
                value = obj[key]
                if isinstance(value, list):
                    values.update(value)  # Add all the elements of the list
                else:
                    values.add(value)  # Add a single value
            
            # Recursively iterate through all nested dictionaries
            for v in obj.values():
                values.update(extract_values(v, key))
        
        elif isinstance(obj, list):
            # If the object is a list, iterate over the elements
            for item in obj:
                values.update(extract_values(item, key))
        
        return values

    # Reading the JSON file
    with open(file, "r", encoding="utf-8") as f:
        data = json.load(f)

    # print(list(extract_values(data, key)))
    # Extract unique key values
    return list(extract_values(data, key))

### **–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞**
#### **1. –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è json**
# ‚úî `import json` ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å `json`, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å JSON-—Ñ–∞–π–ª–∞–º–∏.

#### **2. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ `find(file, key)`**
# ‚úî `find(file, key)` ‚Äî –ø—Ä–∏–Ω–∏–º–∞–µ—Ç:
#     - `file` ‚Äî –∏–º—è JSON-—Ñ–∞–π–ª–∞.
#     - `key` ‚Äî –∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∏–∑–≤–ª–µ—á—å.

#### **3. –í–ª–æ–∂–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è `extract_values(obj, key)`**
# ‚úî –≠—Ç–∞ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã **–ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã** (—Å–ª–æ–≤–∞—Ä–∏, —Å–ø–∏—Å–∫–∏) –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ `key`.  
# ‚úî **–ü–æ—á–µ–º—É —Ä–µ–∫—É—Ä—Å–∏—è?** ‚Üí JSON –º–æ–∂–µ—Ç –±—ã—Ç—å **–≥–ª—É–±–æ–∫–æ –≤–ª–æ–∂–µ–Ω–Ω—ã–º** (`credentials`, `password` –≤–Ω—É—Ç—Ä–∏ `credentials` –∏ —Ç. –¥.), –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–µ—Ä–µ–±–æ—Ä–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.

##### üîπ **–ö–∞–∫ `extract_values()` —Ä–∞–±–æ—Ç–∞–µ—Ç?**
# 1Ô∏è‚É£ **–ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç ‚Äî `dict` (—Å–ª–æ–≤–∞—Ä—å)**  
#         - –ü—Ä–æ–≤–µ—Ä—è–µ–º, **–µ—Å—Ç—å –ª–∏ –Ω—É–∂–Ω—ã–π –∫–ª—é—á (`key`)** –≤ —Å–ª–æ–≤–∞—Ä–µ.
#         - –ï—Å–ª–∏ `key` —Å–æ–¥–µ—Ä–∂–∏—Ç **—Å–ø–∏—Å–æ–∫**, –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã (`values.update(value)`).
#         - –ï—Å–ª–∏ `key` —Å–æ–¥–µ—Ä–∂–∏—Ç **–æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ**, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ (`values.add(value)`).
#         - –ó–∞—Ç–µ–º **–ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –≤—Å–µ–º –∑–Ω–∞—á–µ–Ω–∏—è–º —Å–ª–æ–≤–∞—Ä—è** –∏ **—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º `extract_values()`**.

# 2Ô∏è‚É£ **–ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç ‚Äî `list` (—Å–ø–∏—Å–æ–∫)**  
#    - –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –∏ **—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º**, –µ—Å—Ç—å –ª–∏ –≤ –Ω–∏—Ö `key`.

# ‚úî **–ü–æ—á–µ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º `set()`?**  
# **–ß—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã!** –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ `password` –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –¥–≤–∞–∂–¥—ã, `set()` –æ—Å—Ç–∞–≤–∏—Ç —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.

#### **4. –ß—Ç–µ–Ω–∏–µ JSON-—Ñ–∞–π–ª–∞**
# with open(file, "r", encoding="utf-8") as f:
#     data = json.load(f)
#     ```
# ‚úî **–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª** –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è (`"r"`) –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º JSON-–¥–∞–Ω–Ω—ã–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `data`.

#### **5. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∫–ª—é—á–∞**
# return list(extract_values(data, key))

# ‚úî **–í—ã–∑—ã–≤–∞–µ–º `extract_values()`**, –ø–æ–ª—É—á–∞–µ–º **–º–Ω–æ–∂–µ—Å—Ç–≤–æ (`set`) –∑–Ω–∞—á–µ–Ω–∏–π**, –∑–∞—Ç–µ–º **–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ø–∏—Å–æ–∫ (`list`)** –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞.

### **–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã**
# üìå **1.json**
# find("1.json", "password")  # –í—ã–≤–æ–¥: ["pass_1", "qwerty"]

# üìå **2.json**
# find("2.json", "password")  # –í—ã–≤–æ–¥: ["1234qweQWE", "pass_1", "qwerty"]

# üìå **3.json**
# find("3.json", "password")  # –í—ã–≤–æ–¥: ["1234qweQWE"]

# ### **–ü–æ—á–µ–º—É —ç—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ?**
# ‚úÖ **–†–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –ª—é–±—ã—Ö JSON-—Å—Ç—Ä—É–∫—Ç—É—Ä** (—Å–ø–∏—Å–∫–∏, –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞—Ä–∏).  
# ‚úÖ **–£–¥–∞–ª—è–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã** ‚Üí `set()` —Ö—Ä–∞–Ω–∏—Ç —Ç–æ–ª—å–∫–æ **—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è**.  
# ‚úÖ **–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω–∏** (`credentials`, `password` –≤–Ω—É—Ç—Ä–∏ `credentials`).  
# ‚úÖ **–ì–∏–±–∫–æ–µ –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ** ‚Äî –º–æ–∂–Ω–æ –∏—Å–∫–∞—Ç—å **–ª—é–±–æ–π –∫–ª—é—á** (–Ω–µ —Ç–æ–ª—å–∫–æ `password`).

# 1.json:
# [{"name": "user_1", "password": "pass_1"}, {"name": "user_2", "password": ["pass_1", "qwerty"]}]
find(r"E:\My project\MyEducation\Softserve\UA-130 Advanced Python with Django\Task 06 Serialization\1.json", "password") #returns ["pass_1", "qwerty"]

# 2.json:
# [{"name": "user_1", "credentials": {"username": "user_user", "password": "1234qweQWE"}}, {"name": "user_2", "password": ["pass_1 ", "qwerty "]}]
find(r"E:\My project\MyEducation\Softserve\UA-130 Advanced Python with Django\Task 06 Serialization\2.json", "password") #returns ["1234qweQWE", "pass_1", "qwerty"]

# # 3.json:
# {"name": "user_1","credentials": {"username": "user_user","password": "1234qweQWE"}}
find(r"E:\My project\MyEducation\Softserve\UA-130 Advanced Python with Django\Task 06 Serialization\3.json", "password") #returns ["1234qweQWE"]