# –ï—Å—Ç—å –∑–∞–¥–∞—á–∞:
# Follow the link: https://classroom.github.com/a/1a2Fc0jK

# After the repository is created, clone it locally:

# git clone <your repository URL>
 
# Implement the following task in the university.py file:

#           You are given two JSON files:

# users.json ‚Äî contains information about users in the following format:
#                  [ { "id": 1, "name": "userName", "department_id": 1 }, ... ]
# departments.json ‚Äî contains information about departments in the following format:

# [ { "id": 1, "name": "departmentName" }, ... ]          
#           Create appropriate JSON Schemas to validate the structure of users.json and  departments.json.

#            Implement the functions:

# user_with_department(csv_file, user_json, department_json):
#                     This function should:

# Read data from the provided JSON files.

# Create a CSV file with the following format:

#           header line - name, department
#           next lines :  <userName>, <departmentName>
# If a user refers to a department_id that doesn't exist in departments.json, raise a DepartmentName exception.

# If the data does not match the schema, raise an InvalidInstanceError exception.
 
# validate_json(data, schema):
# which validates a JSON instance against a schema.

# Commit and push your solution to the GitHub repository.

# import json
# import jsonschema
# from jsonschema import validate
# import csv

# student_schema = {
#     #type schema here
#     }

# department_schema = {
#     #type schema here
#     }

# # type your code here

# –û–ë–™–Ø–°–ù–ï–ù–ò–ï Akademy GPT
## üìå –¶–µ–ª—å –∑–∞–¥–∞—á–∏:
# –¢—ã –¥–æ–ª–∂–µ–Ω:
# 1. ‚úÖ –°–æ–∑–¥–∞—Ç—å **JSON-—Å—Ö–µ–º—ã** –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ `users.json` –∏ `departments.json`.
# 2. ‚úÖ –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é `validate_json(data, schema)` –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å—Ö–µ–º–µ.
# 3. ‚úÖ –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é `user_with_department(csv_file, user_json, department_json)`, –∫–æ—Ç–æ—Ä–∞—è:
#    * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –∏–∑ JSON-—Ñ–∞–π–ª–æ–≤
#    * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏—Ö –ø–æ —Å—Ö–µ–º–∞–º
#    * –°–æ–∑–¥–∞—ë—Ç CSV-—Ñ–∞–π–ª —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏ `name, department`
#    * –ï—Å–ª–∏ `department_id` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞—Ö ‚Äî –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ `DepartmentName`
#    * –ï—Å–ª–∏ JSON –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π ‚Äî –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç `InvalidInstanceError`

## üî® –®–∞–≥ 1. –ù–∞–ø–∏—à–µ–º —Å—Ö–µ–º—ã `student_schema` –∏ `department_schema`
# student_schema = {
#     "type": "array",
#     "items": {
#         "type": "object",
#         "properties": {
#             "id": {"type": "integer"},
#             "name": {"type": "string"},
#             "department_id": {"type": "integer"}
#         },
#         "required": ["id", "name", "department_id"]
#     }
# }

# department_schema = {
#     "type": "array",
#     "items": {
#         "type": "object",
#         "properties": {
#             "id": {"type": "integer"},
#             "name": {"type": "string"}
#         },
#         "required": ["id", "name"]
#     }
# }

# # –≠—Ç–∏ —Å—Ö–µ–º—ã –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ:
# # * –¥–∞–Ω–Ω—ã–µ ‚Äî —ç—Ç–æ —Å–ø–∏—Å–æ–∫ (`"type": "array"`),
# # * –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç ‚Äî –æ–±—ä–µ–∫—Ç (`"type": "object"`),
# # * —É –æ–±—ä–µ–∫—Ç–∞ –µ—Å—Ç—å –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–∏–ø—ã.

# ## üß† –®–∞–≥ 2. –§—É–Ω–∫—Ü–∏—è `validate_json(data, schema)`
# class InvalidInstanceError(Exception):
#     pass

# def validate_json(data, schema):
#     try:
#         validate(instance=data, schema=schema) # —Ñ—É–Ω–∫—Ü–∏—è python, –∫–æ—Ç–æ—Ä–∞—è –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ö–µ–º–æ–π
#     except jsonschema.exceptions.ValidationError as e:
#         raise InvalidInstanceError(f"Invalid JSON structure: {e.message}")

# ## üí• –®–∞–≥ 3. –û—à–∏–±–∫–∞ `DepartmentName`
# class DepartmentName(Exception):
#     pass

# ## ‚úçÔ∏è –®–∞–≥ 4. –§—É–Ω–∫—Ü–∏—è `user_with_department(...)`
# def user_with_department(csv_file, user_json, department_json):
#     # 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
#     with open(user_json, encoding='utf-8') as f:
#         users = json.load(f)

#     with open(department_json, encoding='utf-8') as f:
#         departments = json.load(f)

#     # 2. –í–∞–ª–∏–¥–∞—Ü–∏—è
#     validate_json(users, student_schema)
#     validate_json(departments, department_schema)

#     # 3. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
#     department_dict = {dept['id']: dept['name'] for dept in departments}

#     # 4. –ì–æ—Ç–æ–≤–∏–º CSV-—Ñ–∞–π–ª
#     with open(csv_file, mode='w', newline='', encoding='utf-8') as csvfile:
#         writer = csv.writer(csvfile)
#         writer.writerow(['name', 'department'])  # –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–æ–π –≤ —Ñ–∞–π–ª –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏

#         for user in users:
#             dept_id = user['department_id']
#             if dept_id not in department_dict:
#                 raise DepartmentName(f"Department with ID {dept_id} not found.")
#             dept_name = department_dict[dept_id]
#             writer.writerow([user['name'], dept_name])

# ## üß™ –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã JSON:
# ### `users.json`
# [
#     { "id": 1, "name": "Alice", "department_id": 2 },
#     { "id": 2, "name": "Bob", "department_id": 3 }
# ]

# ### `departments.json`
# [
#     { "id": 2, "name": "Math" },
#     { "id": 3, "name": "Physics" }
# ]

## üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ `university.py` –≤ –∏—Ç–æ–≥–µ:
import json
import jsonschema
from jsonschema import validate
import csv
import os
from pathlib import Path


# JSON Schemas
student_schema = {
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "id": {"type": "integer"},
            "name": {"type": "string"},
            "department_id": {"type": "integer"}
        },
        "required": ["id", "name", "department_id"]
    }
}

department_schema = {
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "id": {"type": "integer"},
            "name": {"type": "string"}
        },
        "required": ["id", "name"]
    }
}

# Custom Exceptions
class InvalidInstanceError(Exception):
    pass

class DepartmentName(Exception):
    pass

# Validator
def validate_json(data, schema):
    try:
        validate(instance=data, schema=schema)
    except jsonschema.exceptions.ValidationError as e:
        raise InvalidInstanceError(f"Invalid JSON structure: {e.message}")

# Main function
def user_with_department(csv_file, user_json, department_json):
    
    with open(user_json, encoding='utf-8') as f:
        users = json.load(f)

    with open(department_json, encoding='utf-8') as f:
        departments = json.load(f)

    validate_json(users, student_schema)
    validate_json(departments, department_schema)

    department_dict = {dept['id']: dept['name'] for dept in departments}

    with open(csv_file, mode='w', newline='', encoding='utf-8') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(['name', 'department'])

        for user in users:
            dept_id = user['department_id']
            if dept_id not in department_dict:
                raise DepartmentName(f"Department with ID {dept_id} not found.")
            dept_name = department_dict[dept_id]
            writer.writerow([user['name'], dept_name])

## ‚úÖ –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:
# 1. üîÅ –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ `users.json` –∏ `departments.json` –ª–µ–∂–∞—Ç –≤ —Ç–≤–æ–µ–π –ø–∞–ø–∫–µ —Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º.
# 2. üß™ –ú–æ–∂–µ—à—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤—Ä—É—á–Ω—É—é:

script_path = Path(__file__).resolve()  # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
print(script_path)

user_with_department("out.csv", "users.json", "departments.json")

# 3. ‚úÖ –£–±–µ–¥–∏—Å—å, —á—Ç–æ `out.csv` —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏.
# 4. üíæ –ó–∞–∫–æ–º–º–∏—Ç—å –∏ –ø—É—à –Ω–∞ GitHub:






# –û–ë–™–Ø–°–ù–ï–ù–ò–ï –û–¢ COPILOT
# –ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥—ë–Ω –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤–º–µ—Å—Ç–µ —Å –ø—Ä–∏–º–µ—Ä–æ–º –∫–æ–¥–∞ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏ –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ. –ú—ã —Ä–µ–∞–ª–∏–∑—É–µ–º —Å–ª–µ–¥—É—é—â–∏–µ –º–æ–º–µ–Ω—Ç—ã:
# 1. **JSON-—Å—Ö–µ–º—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö**  
#    –ú—ã –¥–æ–ª–∂–Ω—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Ö–æ–¥–Ω—ã–µ JSON-—Ñ–∞–π–ª—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–∂–∏–¥–∞–µ–º–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ.
# 2. **–§—É–Ω–∫—Ü–∏—é `validate_json(data, schema)`**  
#    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ —Å—Ö–µ–º—É, –∞ –∑–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `jsonschema`. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç —Å—Ö–µ–º–µ, –º—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏ –≤—ã–¥–∞—ë–º (–∏–ª–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º) —Å–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ `InvalidInstanceError`.
# 3. **–§—É–Ω–∫—Ü–∏—é `user_with_department(csv_file, user_json, department_json)`**  
#    –í —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º—ã:
#    - –û—Ç–∫—Ä–æ–µ–º –∏ –∑–∞–≥—Ä—É–∑–∏–º JSON-—Ñ–∞–π–ª—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞–º–∏.
#    - –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç –Ω–∞—à–∏–º —Å—Ö–µ–º–∞–º, –≤—ã–∑–≤–∞–≤ `validate_json`.
#    - –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –∏–∑ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –ø–æ `id` –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –∏–º—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞.
#    - –ü—Ä–æ–π–¥—ë–º –ø–æ –∑–∞–ø–∏—Å—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ï—Å–ª–∏ –∫–∞–∫–æ–π-–ª–∏–±–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π `department_id` –≤ —Å–ª–æ–≤–∞—Ä–µ, –≤—ã–±—Ä–æ—Å–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ `DepartmentName`.
#    - –°–æ–∑–¥–∞–¥–∏–º CSV-—Ñ–∞–π–ª, –∫—É–¥–∞ –∑–∞–ø–∏—à–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–º—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞`.
# 4. **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π**  
#    –ù–∞–º –Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–≤–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è:
#    - `DepartmentName` ‚Äì –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∫–∞–∑–∞–Ω –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π `department_id`.
#    - `InvalidInstanceError` ‚Äì –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç —Å—Ö–µ–º–µ (—ç—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ `validate_json`).

# –ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥—ë–Ω –ø—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ `university.py` —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏:
# import json
# import jsonschema
# from jsonschema import validate
# import csv

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
class DepartmentName(Exception):
    """–í—ã–±—Ä–∞—Å—ã–≤–∞–µ–º, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∫–∞–∑–∞–Ω –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π department_id."""
    pass

class InvalidInstanceError(Exception):
    """–í—ã–±—Ä–∞—Å—ã–≤–∞–µ–º, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç JSON-—Å—Ö–µ–º–µ."""
    pass

# JSON-—Å—Ö–µ–º–∞ –¥–ª—è —Ñ–∞–π–ª–∞ users.json
# –û–∂–∏–¥–∞–µ—Ç—Å—è, —á—Ç–æ users.json ‚Äî —ç—Ç–æ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤, –≥–¥–µ –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –∏–º–µ–µ—Ç –ø–æ–ª—è:
# 'id' (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ), 'name' (—Å—Ç—Ä–æ–∫–∞), 'department_id' (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)
student_schema = {
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "id": {"type": "integer"},
            "name": {"type": "string"},
            "department_id": {"type": "integer"}
        },
        "required": ["id", "name", "department_id"]
    }
}

# JSON-—Å—Ö–µ–º–∞ –¥–ª—è —Ñ–∞–π–ª–∞ departments.json
# –û–∂–∏–¥–∞–µ—Ç—Å—è, —á—Ç–æ departments.json ‚Äî —ç—Ç–æ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤, –≥–¥–µ –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –∏–º–µ–µ—Ç –ø–æ–ª—è:
# 'id' (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ), 'name' (—Å—Ç—Ä–æ–∫–∞)
department_schema = {
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "id": {"type": "integer"},
            "name": {"type": "string"}
        },
        "required": ["id", "name"]
    }
}

# def validate_json(data, schema):
#     """
#     –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ JSON-–¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π —Å—Ö–µ–º–µ.
    
#     –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç —Å—Ö–µ–º–µ, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç InvalidInstanceError.
#     """
#     try:
#         validate(instance=data, schema=schema)
#     except jsonschema.exceptions.ValidationError as e:
#         raise InvalidInstanceError(f"–î–∞–Ω–Ω—ã–µ –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç —Å—Ö–µ–º–µ: {e}")

# def user_with_department(csv_file, user_json, department_json):
#     """
#     –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —á–∏—Ç–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –∏–∑ JSON-—Ñ–∞–π–ª–æ–≤,
#     –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Ö –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ö–µ–º–∞–º –∏ —Å–æ–∑–¥–∞—ë—Ç CSV-—Ñ–∞–π–ª, –≥–¥–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     —É–∫–∞–∑–∞–Ω–æ –µ–≥–æ –∏–º—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞.
    
#     –ï—Å–ª–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è department_id –≤ departments.json, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ DepartmentName.
#     –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Å—Ö–µ–º–µ, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è InvalidInstanceError.
#     """

#     # 1. –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–æ–≤
#     with open(user_json, 'r', encoding='utf-8') as f:
#         users = json.load(f)
        
#     with open(department_json, 'r', encoding='utf-8') as f:
#         departments = json.load(f)
    
#     # 2. –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ JSON-—Å—Ö–µ–º–∞–º
#     validate_json(users, student_schema)
#     validate_json(departments, department_schema)
    
#     # 3. –°–æ–∑–¥–∞—ë–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ –ø–æ id
#     dept_dict = {dept['id']: dept['name'] for dept in departments}
    
#     # 4. –°–æ–∑–¥–∞—ë–º CSV-—Ñ–∞–π–ª –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
#     with open(csv_file, 'w', newline='', encoding='utf-8') as csvfile:
#         writer = csv.writer(csvfile)
#         # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
#         writer.writerow(['name', 'department'])
        
#         # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#         for user in users:
#             dept_id = user.get('department_id')
#             # –ï—Å–ª–∏ department_id –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ª–æ–≤–∞—Ä–µ departments ‚Äì –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
#             if dept_id not in dept_dict:
#                 raise DepartmentName(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{user.get('name')}' —É–∫–∞–∑–∞–Ω –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π department_id: {dept_id}")
#             writer.writerow([user.get('name'), dept_dict[dept_id]])

# –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–π:
# user_with_department("output.csv", "users.json", "departments.json")

### –ü–æ—à–∞–≥–æ–≤–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ:
# 1. **JSON-—Å—Ö–µ–º—ã:**  
#    - –í `student_schema` –º—ã –æ–ø–∏—Å—ã–≤–∞–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º –æ–±—ä–µ–∫—Ç–æ–≤, –≥–¥–µ –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –∏–º–µ–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:
#      - `"id": {"type": "integer"}`
#      - `"name": {"type": "string"}`
#      - `"department_id": {"type": "integer"}`
#    - –í `department_schema` –∑–∞–¥–∞—ë–º, —á—Ç–æ –≤ –∫–∞–∂–¥–æ–º –æ–±—ä–µ–∫—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª—è:
#      - `"id": {"type": "integer"}`
#      - `"name": {"type": "string"}`

# 2. **–§—É–Ω–∫—Ü–∏—è `validate_json`:**  
#    - –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥ `validate` –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `jsonschema` –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π JSON –∑–∞–¥–∞–Ω–Ω–æ–π —Å—Ö–µ–º–µ.
#    - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –µ—ë –∏ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–≤–æ—ë –∏—Å–∫–ª—é—á–µ–Ω–∏–µ `InvalidInstanceError`.

# 3. **–§—É–Ω–∫—Ü–∏—è `user_with_department`:**  
#    - –°–Ω–∞—á–∞–ª–∞ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ —Ñ–∞–π–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é `json.load()`.
#    - –ó–∞—Ç–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è `validate_json`, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é, —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —Å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º.
#    - –°–æ–∑–¥–∞—ë—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å `dept_dict`, –≥–¥–µ –∫–ª—é—á ‚Äì —ç—Ç–æ `id` –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äì –µ–≥–æ –∏–º—è. –≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞.
#    - –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –∑–∞–ø–∏—Å–∏ CSV-—Ñ–∞–π–ª–∞:
#      - –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞-–∑–∞–≥–æ–ª–æ–≤–æ–∫.
#      - –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –µ–≥–æ `department_id` –≤ —Å–ª–æ–≤–∞—Ä–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äì –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è `DepartmentName` —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
#      - –ï—Å–ª–∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ, –≤ CSV –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∏–º—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞.
     
# 4. **–ö–æ–º–º–∏—Ç –∏ push:**  
#    - –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ä–µ—à–µ–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ, –Ω—É–∂–Ω–æ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏ –∑–∞–ø—É—à–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π.
#    - –ù–∞–ø—Ä–∏–º–µ—Ä:
#      ```bash
#      git add university.py
#      git commit -m "–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è user_with_department –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è JSON"
#      git push origin master  # –∏–ª–∏ main, –µ—Å–ª–∏ –≤–µ—Ç–∫–∞ main

# –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —Ç—ã —Å–æ–∑–¥–∞—ë—à—å —Ä–µ—à–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ:
# - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ö–æ–¥–Ω—ã–µ JSON-—Ñ–∞–π–ª—ã –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å –ø–æ–º–æ—â—å—é JSON-—Å—Ö–µ–º;
# - –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç —Å—Ö–µ–º–µ, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ `InvalidInstanceError`;
# - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ `DepartmentName`;
# - –£—Å–ø–µ—à–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç CSV-—Ñ–∞–π–ª, —Å–≤—è–∑—ã–≤–∞—é—â–∏–π –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏–º–µ–Ω–∞–º–∏ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤.
 