–°—É–ø–µ—Ä! ü§ù
–¢–æ–¥—ñ –¥–∞–≤–∞–π –∑—Ä–æ–±–∏–º–æ –≤—Å–µ –ø–æ–µ—Ç–∞–ø–Ω–æ –π **–¥—É–∂–µ –ø—Ä–æ—Å—Ç–æ**.

---

## ‚úÖ –ß–∞—Å—Ç–∏–Ω–∞ 1: –®–∞–±–ª–æ–Ω –∫–ª–∞—Å—É, —è–∫–∏–π **—Å–∞–º —Å–µ–±–µ –ª–æ–≥–≥—É—î**

---

### üì¶ –©–æ –º–∏ —Ö–æ—á–µ–º–æ:

* –ö–æ–∂–µ–Ω –∫–ª–∞—Å –º–∞—î **–≤–ª–∞—Å–Ω–∏–π –ª–æ–≥-—Ñ–∞–π–ª**, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: `UserManager.log`
* –£—Å—ñ –¥—ñ—ó –∫–ª–∞—Å—É –ª–æ–≥—É—é—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
* –õ–æ–≥-—Ñ–∞–π–ª —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è **–æ–¥—Ä–∞–∑—É –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ñ (`__init__`)**

---

### üß± –ö–æ–¥ —à–∞–±–ª–æ–Ω—É –∫–ª–∞—Å—É –∑ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–∏–º –ª–æ–≥—É–≤–∞–Ω–Ω—è–º:

```python
import logging

class UserManager:
    def __init__(self):
        # üîπ –Ü–º'—è –ª–æ–≥–≥–µ—Ä–∞ = —ñ–º'—è –∫–ª–∞—Å—É ("UserManager")
        self.logger = logging.getLogger(self.__class__.__name__)
        self.logger.setLevel(logging.DEBUG)

        # üîπ –Ü–º'—è –ª–æ–≥-—Ñ–∞–π–ª—É = UserManager.log
        handler = logging.FileHandler(f"{self.__class__.__name__}.log")
        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
        handler.setFormatter(formatter)

        # üîπ –©–æ–± –Ω–µ –¥—É–±–ª—é–≤–∞—Ç–∏ –∑–∞–ø–∏—Å–∏
        if not self.logger.handlers:
            self.logger.addHandler(handler)

        self.logger.info("–ö–ª–∞—Å UserManager —Å—Ç–≤–æ—Ä–µ–Ω–æ")

    def create_user(self, name):
        self.logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á '{name}' —Å—Ç–≤–æ—Ä–µ–Ω–∏–π!")

    def delete_user(self, name):
        self.logger.warning(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á '{name}' –≤–∏–¥–∞–ª–µ–Ω–∏–π!")
```

---

### üìå –©–æ –±—É–¥–µ –≤ `UserManager.log`:

```
2025-05-15 14:00:01 - UserManager - INFO - –ö–ª–∞—Å UserManager —Å—Ç–≤–æ—Ä–µ–Ω–æ
2025-05-15 14:00:01 - UserManager - INFO - –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á '–Ü–≤–∞–Ω' —Å—Ç–≤–æ—Ä–µ–Ω–∏–π!
2025-05-15 14:00:01 - UserManager - WARNING - –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á '–Ü–≤–∞–Ω' –≤–∏–¥–∞–ª–µ–Ω–∏–π!
```

---

### üß™ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:

```python
um = UserManager()
um.create_user("–Ü–≤–∞–Ω")
um.delete_user("–Ü–≤–∞–Ω")
```

---

## ‚úÖ –ß–∞—Å—Ç–∏–Ω–∞ 2: **–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –º–µ—Ç–æ–¥—ñ–≤ –∫–ª–∞—Å—É**

---

### üì¶ –©–æ –º–∏ —Ö–æ—á–µ–º–æ:

* –©–æ–± **—É—Å—ñ –º–µ—Ç–æ–¥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ª–æ–≥—É–≤–∞–ª–∏—Å—è** –ø—Ä–∏ –≤–∏–∫–ª–∏–∫—É
* –ë–µ–∑ —Ä—É—á–Ω–æ–≥–æ `self.logger.info(...)` —É –∫–æ–∂–Ω–æ–º—É –∑ –Ω–∏—Ö

---

### üé© –Ø–∫ —Ü–µ –∑—Ä–æ–±–∏—Ç–∏?

–ú–∏ —Å—Ç–≤–æ—Ä–∏–º–æ **–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä**, —è–∫–∏–π –±—É–¥–µ –æ–±–≥–æ—Ä—Ç–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ –π —Å–∞–º –ª–æ–≥—É–≤–∞—Ç–∏ —ó—Ö –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.

---

### üßô‚Äç‚ôÇÔ∏è –ö–æ–¥ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞:

```python
def log_method_calls(cls):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –∫–ª–∞—Å—É: –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ª–æ–≥—É—î –≤–∏–∫–ª–∏–∫–∏ —É—Å—ñ—Ö –π–æ–≥–æ –º–µ—Ç–æ–¥—ñ–≤.
    """
    import functools

    # –ü—Ä–æ—Ö–æ–¥–∏–º–æ –ø–æ –≤—Å—ñ—Ö –∞—Ç—Ä–∏–±—É—Ç–∞—Ö –∫–ª–∞—Å—É
    for attr_name, attr_value in cls.__dict__.items():
        if callable(attr_value) and not attr_name.startswith("__"):
            @functools.wraps(attr_value)
            def wrapper(self, *args, __method=attr_value, __name=attr_name, **kwargs):
                self.logger.info(f"–ú–µ—Ç–æ–¥ {__name} –≤–∏–∫–ª–∏–∫–∞–Ω–∏–π –∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏: {args}, {kwargs}")
                return __method(self, *args, **kwargs)
            setattr(cls, attr_name, wrapper)
    return cls
```

---

### üèó –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è:

```python
@log_method_calls
class ProductManager:
    def __init__(self):
        self.logger = logging.getLogger(self.__class__.__name__)
        self.logger.setLevel(logging.INFO)

        handler = logging.FileHandler(f"{self.__class__.__name__}.log")
        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
        handler.setFormatter(formatter)

        if not self.logger.handlers:
            self.logger.addHandler(handler)

        self.logger.info("–ö–ª–∞—Å ProductManager —Å—Ç–≤–æ—Ä–µ–Ω–æ")

    def add_product(self, product):
        print(f"–ü—Ä–æ–¥—É–∫—Ç '{product}' –¥–æ–¥–∞–Ω–æ")

    def remove_product(self, product):
        print(f"–ü—Ä–æ–¥—É–∫—Ç '{product}' –≤–∏–¥–∞–ª–µ–Ω–æ")
```

---

### üß™ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:

```python
pm = ProductManager()
pm.add_product("–ù–æ—É—Ç–±—É–∫")
pm.remove_product("–ù–æ—É—Ç–±—É–∫")
```

---

### üìÇ –£ `ProductManager.log` –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ:

```
2025-05-15 14:15:00 - ProductManager - INFO - –ö–ª–∞—Å ProductManager —Å—Ç–≤–æ—Ä–µ–Ω–æ
2025-05-15 14:15:01 - ProductManager - INFO - –ú–µ—Ç–æ–¥ add_product –≤–∏–∫–ª–∏–∫–∞–Ω–∏–π –∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏: ('–ù–æ—É—Ç–±—É–∫',), {}
2025-05-15 14:15:02 - ProductManager - INFO - –ú–µ—Ç–æ–¥ remove_product –≤–∏–∫–ª–∏–∫–∞–Ω–∏–π –∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏: ('–ù–æ—É—Ç–±—É–∫',), {}
```

---

## üß† –í–∏—Å–Ω–æ–≤–æ–∫:

| –ß–∞—Å—Ç–∏–Ω–∞           | –©–æ –¥–∞—î                             |
| ----------------- | ---------------------------------- |
| –ö–ª–∞—Å –∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è–º | –ö–æ–∂–µ–Ω –∫–ª–∞—Å –º–∞—î –ª–æ–≥–≥–µ—Ä —ñ –ª–æ–≥-—Ñ–∞–π–ª   |
| –î–µ–∫–æ—Ä–∞—Ç–æ—Ä         | –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ª–æ–≥—É—î –≤—Å—ñ –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É |
