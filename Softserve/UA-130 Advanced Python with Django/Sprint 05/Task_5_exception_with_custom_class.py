# Write  the function check_number_group(number) whose input parameter is a number. The function checks whether the  set number is more than number 10:

# in case the number is more than 10 the function should be displayed the corresponding message - "Number of your group input parameter of function is valid";
# in case the number is less than or equal to 10 the function should be raised the exception of your own class ToSmallNumberGroupError and displayed the corresponding message - "We obtain error: Number of your group can't be less than 10";
# in the case of incorrect data the function should be displayed the message - "You entered incorrect data. Please try again."


# Function example:
# check_number_group(number) (4)       #output:    "We obtain error: Number of your group can't be less than 10 "
# check_number_group(number) (59)    #output:     "Number of your group 59 is valid"
# check_number_group("25")                #output:    "Number of your group 25 is valid"
# check_number_group("abc")              #output:     "You entered incorrect data. Please try again."

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
class ToSmallNumberGroupError(Exception):
    pass

def check_number_group(number):
    try:
        # Convert the input to a number
        number = int(number)

        # Check if the number is greater than 10
        if number > 10:
            return f"Number of your group {number} is valid"
        else:
            return ToSmallNumberGroupError("We obtain error:Number of your group can't be less than 10")
    
    except ToSmallNumberGroupError as e:
        return e
    except ValueError:
        return "You entered incorrect data. Please try again."

# # –ü—Ä–∏–º–µ—Ä—ã –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏
check_number_group(4)       # Output: "We obtain error: Number of your group can't be less than 10"
check_number_group(59)      # Output: "Number of your group 59 is valid"
check_number_group("25")    # Output: "Number of your group 25 is valid"
check_number_group("abc")   # Output: "You entered incorrect data. Please try again."
print(check_number_group(4))       # Output: "We obtain error: Number of your group can't be less than 10"
print(check_number_group(59))      # Output: "Number of your group 59 is valid"
print(check_number_group("25"))    # Output: "Number of your group 25 is valid"
print(check_number_group("abc"))   # Output: "You entered incorrect data. Please try again."

# –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–¥–∞
# - –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è ToSmallNumberGroupError, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç Exception.
# - –ò—Å–ø–æ–ª—å–∑—É–µ–º try-except:
# - int(number): –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ö–æ–¥–Ω–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ —á–∏—Å–ª–æ. –ï—Å–ª–∏ –≤–≤–æ–¥ –Ω–µ —á–∏—Å–ª–æ, ValueError.
# - –ï—Å–ª–∏ number > 10: –ø–µ—á–∞—Ç–∞–µ–º "Number of your group ‚Ä¶ is valid".
# - –ï—Å–ª–∏ number <= 10: –≤—ã–∑—ã–≤–∞–µ–º ToSmallNumberGroupError —Å –Ω—É–∂–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
# - except ToSmallNumberGroupError as e: –ª–æ–≤–∏–º –∏ –≤—ã–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ.
# - except ValueError: –ª–æ–≤–∏–º –Ω–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ ("abc" –≤–º–µ—Å—Ç–æ —á–∏—Å–ª–∞).

# –í –ø–µ—Ä–≤–æ–º —Å–ª—É—á–∞–µ –∫–ª–∞—Å—Å ToSmallNumberGroupError –Ω–∞–ø–∏—Å–∞–Ω –∫–∞–∫ –∑–∞–≥–ª—É—à–∫–∞ –∏ —ç—Ç–æ –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ.
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å, –¥–∞–∂–µ –∑–∞–≥–ª—É—à–∫–∞, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ - —ç—Ç–æ best practices.
# –ü–æ **best practices** (–ª—É—á—à–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∞–º Python) —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π (`custom exceptions`) –Ω—É–∂–Ω–æ **–æ—Ñ–æ—Ä–º–ª—è—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ**, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å `pass`.

## üîπ –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å —Å–≤–æ–π –∫–ª–∞—Å—Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è
# class ToSmallNumberGroupError(Exception):
#     """Custom exception raised when the group number is less than or equal to 10."""

#     def __init__(self, message="Number of your group can't be less than 10"):
#         self.message = message
#         super().__init__(self.message)  # –ü–µ—Ä–µ–¥–∞—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–º—É –∫–ª–∞—Å—Å—É Exception

## üîç –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ —à–∞–≥–∞–º:
# `class ToSmallNumberGroupError(Exception):` - —Å–æ–∑–¥–∞—ë—Ç —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–π **—É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω –æ—Ç `Exception`** (–±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤ Python)
# `"""..."""` - –¥–æ–∫—Å—Ç—Ä–æ–∫–∞ ‚Äî –ø–æ–ª–µ–∑–Ω–æ –æ–ø–∏—Å–∞—Ç—å, **–≤ –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —ç—Ç–æ —Å–∫–ª—é—á–µ–Ω–∏–µ**.
# `def __init__(...)` - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞. –ü–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
# `self.message = message` - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –∞—Ç—Ä–∏–±—É—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# `super().__init__(self.message)` - –≤—ã–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π `__init__` –∏ –ø–µ—Ä–µ–¥–∞—ë–º —Ç—É–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–µ **–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–ª–æ –∫–∞–∫ –æ–±—ã—á–Ω–∞—è –æ—à–∏–±–∫–∞** (—Å —Ç–µ–∫—Å—Ç–æ–º, —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–æ–π –∏ —Ç.–¥.).

## –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# try:
#     raise ToSmallNumberGroupError()
# except ToSmallNumberGroupError as e:
#     print(f"We obtain error: {e}")

# üî∏ –í—ã–≤–æ–¥:
# We obtain error: Number of your group can't be less than 10
# –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –∏ —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ:
# raise ToSmallNumberGroupError("Custom message!")

## üí° –ó–∞—á–µ–º –ø–∏—Å–∞—Ç—å `__init__`, –µ—Å–ª–∏ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ `pass`?
# –ï—Å–ª–∏ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å `pass`, —Ç—ã –Ω–µ —Å–º–æ–∂–µ—à—å:
# * –ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ;
# * —É–¥–æ–±–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –æ—à–∏–±–∫—É –≤ –ª–æ–≥–∞—Ö, —Ç–µ—Å—Ç–∞—Ö –∏ –æ—Ç–ª–∞–¥–∫–µ;
# * —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º).

# üîπ –ü–æ—ç—Ç–æ–º—É **–≤ –±–æ–µ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö** –≤—Å–µ–≥–¥–∞ –æ—Ñ–æ—Ä–º–ª—è—é—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è **—Å `__init__` –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º**.

# –ö–æ–≥–¥–∞ —Ç—ã —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å **–æ–¥–∏–Ω –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–ª–∞—Å—Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∏–¥–æ–≤ –æ—à–∏–±–æ–∫**, —Ç–µ–±–µ –Ω—É–∂–Ω–æ:

## ‚úÖ **1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å**
# –¢—ã –≤—Å—ë –µ—â—ë –Ω–∞—Å–ª–µ–¥—É–µ—à—å –µ–≥–æ –æ—Ç `Exception` –∏–ª–∏ –æ—Ç –±–æ–ª–µ–µ —É–∑–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `ValueError`, `TypeError`), –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —É—Ç–æ—á–Ω–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç.
## ‚úÖ **2. –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä `code` –∏–ª–∏ `error_type` (–∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–¥–æ–±–Ω–æ–µ)**

# –ß—Ç–æ–±—ã —Ä–∞–∑–ª–∏—á–∞—Ç—å **—Ç–∏–ø—ã –æ—à–∏–±–æ–∫ –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞**, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: —Ç–∏–ø, –∫–æ–¥ –∏–ª–∏ –¥–∞–∂–µ —Å–ª–æ–≤–∞—Ä—å —Å –¥–µ—Ç–∞–ª—è–º–∏.

### üîß –ü—Ä–∏–º–µ—Ä: –æ–¥–∏–Ω –∫–ª–∞—Å—Å –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ—à–∏–±–æ–∫
# class GroupValidationError(Exception):
#     """Custom exception for group-related validation errors."""

#     def __init__(self, message, error_type=None):
#         self.message = message
#         self.error_type = error_type  # –ù–∞–ø—Ä–∏–º–µ—Ä, "TooSmall", "NotANumber"
#         super().__init__(self.message)

#     def __str__(self):
#         return f"[{self.error_type}] {self.message}" if self.error_type else self.message

### üìå –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
# –æ—à–∏–±–∫–∞ –∏–∑-–∑–∞ –º–∞–ª–æ–≥–æ —á–∏—Å–ª–∞
# raise GroupValidationError("Number is too small", error_type="TooSmall")

# –æ—à–∏–±–∫–∞ –∏–∑-–∑–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# raise GroupValidationError("Not a valid number", error_type="InvalidData")

### ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:
# try:
#     raise GroupValidationError("Invalid", error_type="BadFormat")
# except GroupValidationError as e:
#     if e.error_type == "TooSmall":
#         print("Handle too small group error")
#     elif e.error_type == "InvalidData":
#         print("Handle wrong input")
#     else:
#         print("Other group error:", e)

## üß† Best practices (–∏—Ç–æ–≥–∏):
# –ü—Ä–∞–≤–∏–ª–æ - –ù–∞—Å–ª–µ–¥—É–π –æ—Ç `Exception` –∏–ª–∏ –æ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø–æ–¥—Ç–∏–ø–∞ - –ß—ë—Ç–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å
# –ò—Å–ø–æ–ª—å–∑—É–π –ø–∞—Ä–∞–º–µ—Ç—Ä—ã `error_type`, `code`, `details` - –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç
# –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏ `__str__()` - –î–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
# –î–æ–±–∞–≤—å `docstring` - –î–ª—è –∞–≤—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
