# Create a class hierarchy to represent different types of cars. Your hierarchy should include a base class Car and two subclasses - ElectricCar and HybridElectricCar.

# Each class should have attributes:
# model (car model)
# year (manufacturing year)
# color (color)
# speed (initial speed)

# In the ElectricCar class, add the attribute:
# battery_capacity (battery capacity)

# In the HybridElectricCar class, add the attribute:
# fuel_consumption (fuel consumption)

# Create a method accelerate that increases the speed of the car.
# Implement the magic method to allow comparison of cars based on their speed.

# Create a class CarFleet that contains a list of Car objects. Add a method to add car and methods to sort this list by the speed of the cars.
### **–ü–µ—Ä–µ–≤–æ–¥ –∑–∞–¥–∞—á–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫**  

### **–ó–∞–¥–∞—á–∞**  
# –°–æ–∑–¥–∞–π—Ç–µ **–∏–µ—Ä–∞—Ä—Ö–∏—é –∫–ª–∞—Å—Å–æ–≤**, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â—É—é **—Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π**. –í–∫–ª—é—á–∏—Ç–µ **–±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å `Car`** –∏ –¥–≤–∞ –ø–æ–¥–∫–ª–∞—Å—Å–∞ ‚Äì `ElectricCar` –∏ `HybridElectricCar`.  

# ### **–ê—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤:**  
# - `model` ‚Äì –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è  
# - `year` ‚Äì –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞  
# - `color` ‚Äì —Ü–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è  
# - `speed` ‚Äì –Ω–∞—á–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å  

# ### **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã:**  
# ‚úî –í –∫–ª–∞—Å—Å–µ **`ElectricCar`**:  
#   - `battery_capacity` ‚Äì —ë–º–∫–æ—Å—Ç—å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞  

# ‚úî –í –∫–ª–∞—Å—Å–µ **`HybridElectricCar`**:  
#   - `fuel_consumption` ‚Äì —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞  

# ### **–ú–µ—Ç–æ–¥—ã:**  
# ‚úî **–ú–µ—Ç–æ–¥ `accelerate()`** ‚Äì —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è.  
# ‚úî **–ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –º–µ—Ç–æ–¥–∞** ‚Äì –ø–æ–∑–≤–æ–ª—è–µ—Ç **—Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏**.  
# ‚úî **–ö–ª–∞—Å—Å `CarFleet`** ‚Äì —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ `Car`.  
#   - **–ú–µ—Ç–æ–¥ `add_car()`** ‚Äì –¥–æ–±–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤ —Å–ø–∏—Å–æ–∫.  
#   - **–ú–µ—Ç–æ–¥ `sort_by_speed()`** ‚Äì —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏.  

# ---

# ## **–ö–æ–¥ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏**
class Car:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
    def __init__(self, model, year, color, speed=0):
        self.model = model
        self.year = year
        self.color = color
        self.speed = speed

    def accelerate(self, amount):
        """–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
        self.speed += amount
        print(f"{self.model} accelerates to {self.speed} km/h")

    def __lt__(self, other):
        """–ü–æ–∑–≤–æ–ª—è–µ—Ç —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏"""
        return self.speed < other.speed

    def __str__(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
        return f"{self.model} ({self.year}) - {self.color}, Speed: {self.speed} km/h"


class ElectricCar(Car):
    """–ö–ª–∞—Å—Å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
    def __init__(self, model, year, color, battery_capacity, speed=0):
        super().__init__(model, year, color, speed)
        self.battery_capacity = battery_capacity

    def __str__(self):
        return super().__str__() + f", Battery: {self.battery_capacity} kWh"


class HybridElectricCar(Car):
    """–ö–ª–∞—Å—Å –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
    def __init__(self, model, year, color, fuel_consumption, speed=0):
        super().__init__(model, year, color, speed)
        self.fuel_consumption = fuel_consumption

    def __str__(self):
        return super().__str__() + f", Fuel Consumption: {self.fuel_consumption} L/100km"


class CarFleet:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–ø–∞—Ä–∫–æ–º"""
    def __init__(self):
        self.cars = []

    def add_car(self, car):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤ –∞–≤—Ç–æ–ø–∞—Ä–∫"""
        self.cars.append(car)
        print(f"{car.model} added to the fleet.")

    def sort_by_speed(self):
        """–°–æ—Ä—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏"""
        self.cars.sort(reverse=True)  # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Å–∫–æ—Ä–æ—Å—Ç–∏
        print("Fleet sorted by speed.")

    def display_fleet(self):
        """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ –∞–≤—Ç–æ–ø–∞—Ä–∫–µ"""
        for car in self.cars:
            print(car)

# ## **üîé –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–¥–∞**
# ### **üöó `Car` ‚Äì –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å**
# ‚úî –°–æ–¥–µ—Ä–∂–∏—Ç `model`, `year`, `color`, `speed`.  
# ‚úî **–ú–µ—Ç–æ–¥ `accelerate(amount)`** —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç `speed`.  
# ‚úî **–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ `__lt__()`** –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ **–ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏** (`<`).  
# ‚úî `__str__()` ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–¥–æ–±–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞.

# ### **‚ö° `ElectricCar` ‚Äì –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç `Car`**
# ‚úî –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç **`battery_capacity`**.  
# ‚úî **–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ `__str__()`** ‚Üí –¥–æ–±–∞–≤–ª—è–µ—Ç —ë–º–∫–æ—Å—Ç—å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ –∫ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—é.

# ### **‚õΩ `HybridElectricCar` ‚Äì –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç `Car`**
# ‚úî –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç **`fuel_consumption`**.  
# ‚úî **–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ `__str__()`** ‚Üí –¥–æ–±–∞–≤–ª—è–µ—Ç —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞ –∫ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—é.

# ### **üöô `CarFleet` ‚Äì —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–ø–∞—Ä–∫–æ–º**
# ‚úî `cars` ‚Äì —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.  
# ‚úî `add_car(car)` ‚Äì –¥–æ–±–∞–≤–ª—è–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤ –∞–≤—Ç–æ–ø–∞—Ä–∫.  
# ‚úî `sort_by_speed()` ‚Äì —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ (–æ—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∫ –º–µ–¥–ª–µ–Ω–Ω–æ–º—É).  
# ‚úî `display_fleet()` ‚Äì –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∞—à–∏–Ω.

# ## **‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞**
# # –°–æ–∑–¥–∞—ë–º –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
car1 = Car("Toyota Corolla", 2015, "White", 80)
car2 = ElectricCar("Tesla Model S", 2022, "Red", 100, 120)
car3 = HybridElectricCar("Toyota Prius", 2020, "Blue", 4.5, 90)

# # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–∫–æ—Ä–µ–Ω–∏–µ
car1.accelerate(10)  # Toyota Corolla accelerates to 90 km/h
car2.accelerate(20)  # Tesla Model S accelerates to 140 km/h

# # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏
print(car1 < car2)  # True (Toyota Corolla –º–µ–¥–ª–µ–Ω–Ω–µ–µ, —á–µ–º Tesla Model S)

# # –°–æ–∑–¥–∞—ë–º –∞–≤—Ç–æ–ø–∞—Ä–∫
fleet = CarFleet()
fleet.add_car(car1)
fleet.add_car(car2)
fleet.add_car(car3)

# # –í—ã–≤–æ–¥–∏–º –∞–≤—Ç–æ–ø–∞—Ä–∫
fleet.display_fleet()

# # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏
fleet.sort_by_speed()
fleet.display_fleet()

# ### **üîé –û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥**
# Toyota Corolla accelerates to 90 km/h
# Tesla Model S accelerates to 140 km/h
# True
# Toyota Corolla added to the fleet.
# Tesla Model S added to the fleet.
# Toyota Prius added to the fleet.
# Toyota Corolla (2015) - White, Speed: 90 km/h
# Tesla Model S (2022) - Red, Speed: 140 km/h, Battery: 100 kWh
# Toyota Prius (2020) - Blue, Speed: 90 km/h, Fuel Consumption: 4.5 L/100km
# Fleet sorted by speed.
# Tesla Model S (2022) - Red, Speed: 140 km/h, Battery: 100 kWh
# Toyota Corolla (2015) - White, Speed: 90 km/h
# Toyota Prius (2020) - Blue, Speed: 90 km/h, Fuel Consumption: 4.5 L/100km