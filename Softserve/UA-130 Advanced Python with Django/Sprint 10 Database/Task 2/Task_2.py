# Given a database with (at least) two tables: customers and orders as shown below, write an SQL query that returns the customer name, city and amount for all orders between $100 and $3500 inclusive, grouped by name and ordered by city.

# result for example
# name                  city                  totalSum
# --------------------  --------------------  ---------------
# Graham Zusi           California            261
# Jozy Altidore         Kyiv                  2000.0
# Brad Guzan            London                270.65
# Julian Green          London                250.45
# Nick Rimando          New York              3210.86

# First 5 rows of "customers" table, ordered by id
# id      name             city          grade   salesperson_id
# ------  ---------------  ------------  ------  --------------
# 3001    Brad Guzan       London        100     5005
# 3002    Nick Rimando     New York      100     5001
# 3003    Jozy Altidore    Kyiv          200     5007
# 3004    Fabian Johns     Paris         300     5006
# 3005    Graham Zusi      California    200     5002 

# First 5 rows of "orders" table ordered by order_num
# order_num   amount     date        customer_id  saleperson_id
# ----------  ---------  ----------  -----------  -------------
# 70001       150.5      2022-10-05  3005         5002
# 70002       65.26      2022-10-05  3002         5001
# 70003       2480.4     2022-10-10  3009         5003
# 70004       110.5      2022-08-17  3005         5003
# 70005       2400.6     2022-07-27  3007         5001

# For example:
# –¢–µ—Å—Ç	-- Testing with original db
# 
# Result
# name                  city                  totalSum
# --------------------  --------------------  ---------------
# Geoff Cameron         Berlin                2590.9
# Graham Zusi           California            1099.0
# Brad Guzan            London                270.65
# Julian Green          London                250.45
# Brad Davis            New York              2400.6
# Nick Rimando          New York              3210.86
# Fabian Johns          Paris                 1983.43

# ## üîπ –¢–∞–±–ª–∏—Ü—ñ:
# 1. **customers**
#    * `id`, `name`, `city`, `grade`, `salesperson_id`
# 2. **orders**
#    * `order_num`, `amount`, `date`, `customer_id`, `saleperson_id`

# ## üéØ –ó–∞–≤–¥–∞–Ω–Ω—è:
# –ù–∞–ø–∏—Å–∞—Ç–∏ SQL-–∑–∞–ø–∏—Ç, —è–∫–∏–π:
# * –í–∏–±–∏—Ä–∞—î —ñ–º‚Äô—è –∫–ª—ñ—î–Ω—Ç–∞ (`name`), –º—ñ—Å—Ç–æ (`city`) —ñ **–∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É** –∑–∞–º–æ–≤–ª–µ–Ω—å (`totalSum`)
# * –í—Ä–∞—Ö–æ–≤—É—î **—Ç—ñ–ª—å–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Å—É–º–æ—é –≤—ñ–¥ \$100 –¥–æ \$3500 –≤–∫–ª—é—á–Ω–æ**
# * –ì—Ä—É–ø—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞ —ñ–º–µ–Ω–µ–º –∫–ª—ñ—î–Ω—Ç–∞
# * –°–æ—Ä—Ç—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞ –º—ñ—Å—Ç–æ–º (`city`)

# ### üî∏ –ö–†–û–ö 1: –ó'—î–¥–Ω—É—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ
# –ú–∏ —Ö–æ—á–µ–º–æ –ø–æ–≤‚Äô—è–∑–∞—Ç–∏ `customers` —ñ `orders`. –í–æ–Ω–∏ –∑–≤‚Äô—è–∑–∞–Ω—ñ —á–µ—Ä–µ–∑:
# * `customers.id` = `orders.customer_id`
# –û—Ç–∂–µ, –±—É–¥–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ `JOIN`.

# ### üî∏ –ö–†–û–ö 2: –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
# –ù–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Ä–∞—Ö—É–≤–∞—Ç–∏ **—Ç—ñ–ª—å–∫–∏ —Ç—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –¥–µ `amount` –º—ñ–∂ 100 —ñ 3500**:
# ```sql
# WHERE o.amount BETWEEN 100 AND 3500
# ```

# ### üî∏ –ö–†–û–ö 3: –ì—Ä—É–ø—É–≤–∞–Ω–Ω—è
# –ú–∏ –≥—Ä—É–ø—É—î–º–æ –ø–æ –∫–ª—ñ—î–Ω—Ç—É, —Ç–æ–º—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≥—Ä—É–ø—É–≤–∞—Ç–∏ –∑–∞ `name` —ñ, –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ, –ø–æ–∫–∞–∑–∞—Ç–∏ `SUM(o.amount)`.

# ### üî∏ –ö–†–û–ö 4: –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
# –ü—ñ—Å–ª—è –≥—Ä—É–ø—É–≤–∞–Ω–Ω—è, —Å–æ—Ä—Ç—É—î–º–æ –ø–æ `city` —É –ø–æ—Ä—è–¥–∫—É –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è.

# ## ‚úÖ –ü—ñ–¥—Å—É–º–∫–æ–≤–∏–π SQL-–∑–∞–ø–∏—Ç:
# ```sql
# SELECT 
#     customers.name,
#     customers.city,
#     SUM(orders.amount) AS totalSum
# FROM 
#     customers
# JOIN 
#     orders o ON customers.id = orders.customer_id
# WHERE 
#     orders.amount BETWEEN 100 AND 3500
# GROUP BY 
#     customers.name, customers.city
# ORDER BY 
#     customers.city ASC;

# ## üß† –ü—Ä–æ—Å—Ç–∏–º–∏ —Å–ª–æ–≤–∞–º–∏:
# * –ú–∏ –ø–æ—î–¥–Ω—É—î–º–æ –∫–ª—ñ—î–Ω—Ç—ñ–≤ —ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–æ `id`
# * –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —Ç—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –¥–µ —Å—É–º–∞ –≤—ñ–¥ \$100 –¥–æ \$3500
# * –ì—Ä—É–ø—É—î–º–æ –ø–æ –∫–ª—ñ—î–Ω—Ç—É, —â–æ–± –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å—É–º—É –≤—Å—ñ—Ö –π–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω—å —É —Ü—å–æ–º—É –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ
# * –í–∏–≤–æ–¥–∏–º–æ —ñ–º‚Äô—è –∫–ª—ñ—î–Ω—Ç–∞, –º—ñ—Å—Ç–æ —ñ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∑–∞–º–æ–≤–ª–µ–Ω—å
# * –Ü –Ω–∞—Ä–µ—à—Ç—ñ ‚Äî –≤–ø–æ—Ä—è–¥–∫–æ–≤—É—î–º–æ –∑–∞ –º—ñ—Å—Ç–æ–º

# ## üìå –†–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ –≤–∏–≥–ª—è–¥–∞—Ç–∏ –ø—Ä–∏–±–ª–∏–∑–Ω–æ —Ç–∞–∫:
# | name          | city       | totalSum |
# | ------------- | ---------- | -------- |
# | Brad Guzan    | London     | 270.65   |
# | Julian Green  | London     | 250.45   |
# | Nick Rimando  | New York   | 3210.86  |
# | Jozy Altidore | Kyiv       | 2000.00  |
# | Graham Zusi   | California | 261.00   |

# ## üß™ –ö–æ–¥ –¥–ª—è –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—ñ–≤ (–ø–æ–≤–Ω–∏–π –±–ª–æ–∫):
# -- SQL-–∑–∞–ø–∏—Ç –¥–ª—è –≤–∏–≤–æ–¥—É —ñ–º–µ–Ω—ñ, –º—ñ—Å—Ç–∞ —ñ –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å
SELECT 
    customers.name,
    customers.city,
    SUM(orders.amount) AS totalSum
FROM 
    customers
JOIN 
    orders ON customers.id = orders.customer_id
WHERE 
    orders.amount BETWEEN 100 AND 3500
GROUP BY 
    customers.name, customers.city
ORDER BY 
    customers.city;
