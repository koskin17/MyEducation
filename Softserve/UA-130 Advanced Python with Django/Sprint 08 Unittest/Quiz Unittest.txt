‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã:**  
**b.** With the use of mocks, we can set up the object, including setting parameters and return values on the function calls.  
**d.** With the use of mocks, we can verify that the methods we set up are being called during the execution of the tested cases.  

---

üìù **–ü–µ—Ä–µ–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞:**  
–ö–∞–∫–∏–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –º–æ–∫-–æ–±—ä–µ–∫—Ç–∞–º?  

---

üìå **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  

‚úî **–û—Ç–≤–µ—Ç "b" ‚Äî –≤–µ—Ä–Ω—ã–π**, –ø–æ—Ç–æ–º—É —á—Ç–æ **–º–æ–∫-–æ–±—ä–µ–∫—Ç—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç**, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–µ—Ç–æ–¥—ã –¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å. –í `unittest.mock` –≤ Python –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `.return_value` –∏ `.side_effect` –¥–ª—è —Ç–∞–∫–∏—Ö —Ü–µ–ª–µ–π.  

‚úî **–û—Ç–≤–µ—Ç "d" ‚Äî –≤–µ—Ä–Ω—ã–π**, –ø–æ—Ç–æ–º—É —á—Ç–æ **–º–æ–∫–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—ã–∑–æ–≤—ã –º–µ—Ç–æ–¥–æ–≤** –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤. –í Python –¥–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è `.assert_called_once()`, `.assert_called_with()` –∏ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–∑–æ–≤–æ–≤.  

‚ùå **–ü–æ—á–µ–º—É –ù–ï "a"?**  
–ú–æ–∫–∏ **–Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã –∏–º–∏—Ç–∞—Ü–∏–µ–π –æ–¥–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞**. –û–Ω–∏ –º–æ–≥—É—Ç —ç–º—É–ª–∏—Ä–æ–≤–∞—Ç—å **—Ü–µ–ª—ã–π –æ–±—ä–µ–∫—Ç** –∏–ª–∏ –µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ.  

‚ùå **–ü–æ—á–µ–º—É –ù–ï "c"?**  
–ú–æ–∫–∏ **–Ω–µ –∫–æ–ø–∏—Ä—É—é—Ç –∏ –Ω–µ –∫–ª–æ–Ω–∏—Ä—É—é—Ç** –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∏–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞. –û–Ω–∏ –ª–∏—à—å **–ø–æ–¥–º–µ–Ω—è—é—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ** –∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—ã–∑–æ–≤—ã –≤ —Ç–µ—Å—Ç–∞—Ö.  

---

üöÄ **–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ –≤—Å–µ–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏!** üí™üî•  
–¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! üòé


‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:**  
**b. Use @fixture decorator**  

---

üìù **–ü–µ—Ä–µ–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞:**  
–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –ª—é–±—ã—Ö —Ç–µ—Å—Ç–æ–≤ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ `pytest`?  

---

üìå **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  

‚úî **–û—Ç–≤–µ—Ç "b" ‚Äî –≤–µ—Ä–Ω—ã–π**, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ `pytest` –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è **`@pytest.fixture`**. –§–∏–∫—Å—Ç—É—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç **–∑–∞–¥–∞—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è**, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.  

–ü—Ä–∏–º–µ—Ä:  
```python
import pytest

@pytest.fixture(scope="session")
def setup_environment():
    print("\nSetting up environment before tests run")
    return {"db": "test_database"}
```
‚úÖ **–≠—Ç–∞ —Ñ–∏–∫—Å—Ç—É—Ä–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø–µ—Ä–µ–¥ –≤—Å–µ–º–∏ —Ç–µ—Å—Ç–∞–º–∏** (–∏–∑-–∑–∞ `scope="session"`).  

---

‚ùå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **"a" (Use @setup decorator)** ‚Üí **–¢–∞–∫–æ–≥–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ –≤ pytest –ù–ï–¢!**  
- **"c" (Create function with name "setup")** ‚Üí `pytest` **–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏**.  
- **"d" (Create function with name "set_up")** ‚Üí –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ, `pytest` **–Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç —Ç–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å–∞–º –ø–æ —Å–µ–±–µ**.  

---

üöÄ **–ü—Ä–∏—Å—ã–ª–∞–π —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å!**  
–¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! üòéüî•


‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã:**  
**a. unittest**  
**c. doctest**  
**d. pytest**  
**e. nose**  

---

üìù **–ü–µ—Ä–µ–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞:**  
–ö–∞–∫–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –º–æ–¥—É–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Python?  

---

üìå **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  

‚úî **"a. unittest"** ‚Üí **–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Python** –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤. –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ `xUnit` –∏ –≤–∫–ª—é—á–∞–µ—Ç `TestCase`, `assert`-–º–µ—Ç–æ–¥—ã –∏ `test runner`.  
‚úî **"c. doctest"** ‚Üí **–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Python –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏**. –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–∏—Å–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Ç–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è.  
‚úî **"d. pytest"** ‚Üí **–ü–æ–ø—É–ª—è—Ä–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**. –£–ø—Ä–æ—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∏–∫—Å—Ç—É—Ä—ã –∏ –º–æ—â–Ω—ã–µ –∞—Å—Å–µ—Ä—Ç-–º–µ—Ö–∞–Ω–∏–∑–º—ã.  
‚úî **"e. nose"** ‚Üí **–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è unittest**, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–µ–µ—Å—è —Ä–∞–Ω—å—à–µ, –Ω–æ —É–∂–µ **–Ω–µ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è**. –ú–Ω–æ–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ `nose` –ø–µ—Ä–µ—à–ª–∏ –≤ `pytest`.  

‚ùå **–ü–æ—á–µ–º—É –ù–ï "b. JUnit"?**  
JUnit ‚Äî —ç—Ç–æ **–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Java**, –∞ –Ω–µ –≤ Python.  

---

üöÄ **–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ –≤—Å–µ–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏!** üí™üî•  
–¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! üòé


‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:**  
**c. at the developer side**  

---

üìù **–ü–µ—Ä–µ–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞:**  
–ú–æ–¥—É–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –≤–∏–¥ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...  

---

üìå **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  

‚úî **–û—Ç–≤–µ—Ç "c" ‚Äî –≤–µ—Ä–Ω—ã–π**, –ø–æ—Ç–æ–º—É —á—Ç–æ **–º–æ–¥—É–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (unit testing) –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º** –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏–π –≤ –∫–æ–¥–µ. –û–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è **–¥–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∫–∞–∂–¥—ã–π –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.  

‚ùå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **"a. at the time of integration testing"** ‚Üí –ú–æ–¥—É–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è **–¥–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**, –∞ –Ω–µ –≤–æ –≤—Ä–µ–º—è –Ω–µ–≥–æ.  
- **"b. by QC engineer"** ‚Üí –û–±—ã—á–Ω–æ `QA/QC-–∏–Ω–∂–µ–Ω–µ—Ä—ã` —Ç–µ—Å—Ç–∏—Ä—É—é—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ **–Ω–∞ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ** (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ –∏–ª–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ), –Ω–æ **–º–æ–¥—É–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø–∏—à—É—Ç —Å–∞–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏**.  
- **"d. after the system is completed"** ‚Üí Unit-—Ç–µ—Å—Ç—ã **–ø–∏—à—É—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏**, –∞ –Ω–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã.  

---

üöÄ **–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ –≤—Å–µ–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏!** üí™üî•  
–¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! üòé


‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:**  
**a. A suite**  

---

üìù **–ü–µ—Ä–µ–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞:**  
–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –º–æ–¥—É–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤?  

---

üìå **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  

‚úî **"a. A suite" ‚Äî –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç**, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ **–º–æ–¥—É–ª—å–Ω–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏** –Ω–∞–±–æ—Ä —Ç–µ—Å—Ç–æ–≤ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è **Test Suite**.  
Test Suite –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç **–Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç-–∫–µ–π—Å–æ–≤**, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Ä–∞–∑–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã.  

–ü—Ä–∏–º–µ—Ä –≤ `unittest`:  
```python
import unittest

class MyTests(unittest.TestCase):
    def test_example(self):
        self.assertEqual(2 + 2, 4)

# –°–æ–∑–¥–∞–Ω–∏–µ test suite
suite = unittest.TestSuite()
suite.addTest(MyTests('test_example'))
```
‚úÖ **–≠—Ç–æ—Ç "suite" –≤–∫–ª—é—á–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤–º–µ—Å—Ç–µ.**  

‚ùå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **"b. A case"** ‚Üí **"Test Case"** ‚Äî —ç—Ç–æ **–æ—Ç–¥–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç**, –Ω–æ –ù–ï –∫–æ–ª–ª–µ–∫—Ü–∏—è —Ç–µ—Å—Ç–æ–≤.  
- **"c. An Assertion set"** ‚Üí Assertions ‚Äî —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ (`assertEqual`, `assertTrue` –∏ –¥—Ä.), –Ω–æ –æ–Ω–∏ –ù–ï –æ–±—ä–µ–¥–∏–Ω—è—é—Ç —Ç–µ—Å—Ç—ã –≤ –Ω–∞–±–æ—Ä.  
- **"d. An array"** ‚Üí –ú–∞—Å—Å–∏–≤ (array) ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –ù–ï —Ç–µ—Ä–º–∏–Ω –∏–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.  
- **"e. A collection"** ‚Üí –û–±—â–∏–π —Ç–µ—Ä–º–∏–Ω, –Ω–æ –ù–ï —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Ç–µ—Å—Ç–æ–≤.  

---

üöÄ **–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ –≤—Å–µ–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏!** üí™üî•  
–¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! üòé


‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–π:**  

1Ô∏è‚É£ **`.assertIsNone(actual)`** ‚Üí –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, **—Ä–∞–≤–Ω–æ –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ `None`**.  
üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
self.assertIsNone(value)  # –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ—Ç, –µ—Å–ª–∏ value == None
```

2Ô∏è‚É£ **`.assertEqual(expected, actual)`** ‚Üí –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, **—Ä–∞–≤–Ω—ã –ª–∏ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è**.  
üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
self.assertEqual(2 + 2, 4)  # –£—Å–ø–µ—à–Ω–æ, –µ—Å–ª–∏ 2 + 2 == 4
```

3Ô∏è‚É£ **`.assertRaises(exc, fun, args, *kwds)`** ‚Üí –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, **–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ**.  
üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
with self.assertRaises(ValueError):
    int("abc")  # –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –≤—ã–∑–≤–∞—Ç—å ValueError
```

4Ô∏è‚É£ **`.assertAlmostEqual(expected, actual, delta)`** ‚Üí –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, **—Ä–∞–≤–Ω—ã –ª–∏ –¥–≤–∞ —á–∏—Å–ª–∞ —Å —É—á–µ—Ç–æ–º –¥–æ–ø—É—Å—Ç–∏–º–æ–π –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ (`delta`)**.  
üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
self.assertAlmostEqual(3.1415, 3.14, delta=0.01)  # –£—Å–ø–µ—à–Ω–æ, –µ—Å–ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ <= 0.01
```

---

üîπ **–ü–µ—Ä–µ–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞:**  
–°–æ–æ—Ç–Ω–µ—Å–∏—Ç–µ –º–µ—Ç–æ–¥—ã –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.  

üöÄ **–ü—Ä–∏—Å—ã–ª–∞–π —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è!** üí™üî•  
–¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! üòé


‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:**  
**c. name must be starts from word `test_`**  

---

üìù **–ü–µ—Ä–µ–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞:**  
–ö–∞–∫ –º–æ–∂–Ω–æ –ø–æ–º–µ—Ç–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –º–µ—Ç–æ–¥ –∫–∞–∫ —Ç–µ—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –±–∏–±–ª–∏–æ—Ç–µ–∫—É `pytest`?  

---

üìå **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  

‚úî **"c. name must be starts from word `test_`" ‚Äî –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç**, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ `pytest` —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ **–¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å `test_`**, —á—Ç–æ–±—ã –∏—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–∞—Ä—É–∂–∏–ª `pytest`.  

–ü—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–∞:  
```python
import pytest

def test_sum():
    assert 2 + 2 == 4
```
‚úÖ **`pytest` –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥—ë—Ç –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç —Ç–µ—Å—Ç `test_sum()`**, –ø–æ—Ç–æ–º—É —á—Ç–æ –µ–≥–æ –∏–º—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å `test_`.  

‚ùå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **"a. None above"** ‚Üí –ù–µ –≤–µ—Ä–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç "c" —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º.  
- **"b. decorator @test"** ‚Üí **–í `pytest` –Ω–µ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ `@test`**.  
- **"d. name must be finish word `_test`"** ‚Üí –û—à–∏–±–∫–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ `pytest` **–Ω–µ —Ç—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã –∏–º—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–ª–æ—Å—å –Ω–∞ `_test`**.  

---

üöÄ **–ü—Ä–∏—Å—ã–ª–∞–π —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ –≤—Å–µ–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏!** üí™üî•  
–¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! üòé


‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã:**  
**a. class**  
**b. session**  
**d. function**  
**e. module**  

---

üìù **–ü–µ—Ä–µ–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞:**  
–í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ (`scope`) –¥–ª—è `@pytest.fixture`.  

---

üìå **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  

‚úî **"a. class"** ‚Üí **–§–∏–∫—Å—Ç—É—Ä–∞ —Å–æ–∑–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞** —Ç–µ—Å—Ç–æ–≤.  
‚úî **"b. session"** ‚Üí **–§–∏–∫—Å—Ç—É—Ä–∞ —Å–æ–∑–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –∑–∞ –≤—Å—é —Ç–µ—Å—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é** –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–µ—Å—Ç–∞—Ö.  
‚úî **"d. function"** ‚Üí **–§–∏–∫—Å—Ç—É—Ä–∞ —Å–æ–∑–¥–∞—ë—Ç—Å—è –∑–∞–Ω–æ–≤–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞** (–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é).  
‚úî **"e. module"** ‚Üí **–§–∏–∫—Å—Ç—É—Ä–∞ —Å–æ–∑–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è**, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –≤—Å–µ—Ö —Ç–µ—Å—Ç–∞—Ö —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è.  

üîπ **–ü—Ä–∏–º–µ—Ä —Ñ–∏–∫—Å—Ç—É—Ä—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –æ–±–ª–∞—Å—Ç—è–º–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏:**  
```python
import pytest

@pytest.fixture(scope="function")  # –°–æ–∑–¥–∞—ë—Ç—Å—è –∑–∞–Ω–æ–≤–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
def sample_data():
    return {"value": 42}

@pytest.fixture(scope="session")  # –°–æ–∑–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –∑–∞ –≤—Å—é —Å–µ—Å—Å–∏—é
def global_config():
    return {"db_url": "localhost"}
```
üöÄ **–§–∏–∫—Å—Ç—É—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ—Å—É—Ä—Å–∞–º–∏ –∏ —Ä–∞–∑–¥–µ–ª—è—Ç—å –∫–æ–¥ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏!**  

‚ùå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **"c. package"** ‚Üí **–í `pytest` –Ω–µ—Ç —É—Ä–æ–≤–Ω—è `package` –¥–ª—è —Ñ–∏–∫—Å—Ç—É—Ä**.  
- **"f. method"** ‚Üí **–§–∏–∫—Å—Ç—É—Ä—ã –Ω–µ –∏–º–µ—é—Ç —É—Ä–æ–≤–Ω—è `method`**, —Ç–æ–ª—å–∫–æ `function` (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –º–µ—Ç–æ–¥–∞—Ö).  

---

üî• **–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ –≤—Å–µ–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏!** üí™  
–¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! üòé


‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã:**  
**a. ... is created to test the behavior of a real object.**  
**d. ... is a simulation of a real object.**  
**e. ... act just as real objects but in a controlled way.**  

---

üìù **–ü–µ—Ä–µ–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞:**  
–ú–æ–∫-–æ–±—ä–µ–∫—Ç...  

---

üìå **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  

‚úî **"a. ... is created to test the behavior of a real object."** ‚Üí –í–µ—Ä–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–æ–∫-–æ–±—ä–µ–∫—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è **–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤** –≤ —Ç–µ—Å—Ç–∞—Ö. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –º–æ–¥—É–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.  

‚úî **"d. ... is a simulation of a real object."** ‚Üí –ú–æ–∫–∏ **–∏–º–∏—Ç–∏—Ä—É—é—Ç** —Ä–µ–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç, –Ω–æ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –µ–≥–æ —Ç–æ—á–Ω–æ–π –∫–æ–ø–∏–µ–π. –û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –±–µ–∑ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, API –∏ –¥—Ä—É–≥–∏–º–∏ —Å–ª–æ–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏.  

‚úî **"e. ... act just as real objects but in a controlled way."** ‚Üí –í–µ—Ä–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–æ–∫-–æ–±—ä–µ–∫—Ç—ã **–≤–µ–¥—É—Ç —Å–µ–±—è –∫–∞–∫ —Ä–µ–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã**, –Ω–æ —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Ç–µ—Å—Ç–∞–º–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å, –∫–∞–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å (`return_value`).  

‚ùå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **"b. ... is created in order to prevent the application from errors."** ‚Üí –ú–æ–∫–∏ **–Ω–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—Ç –æ—à–∏–±–∫–∏** –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, –∞ –ø–æ–º–æ–≥–∞—é—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –æ—à–∏–±–∫–∏.  
- **"c. ... is the virtual database relation."** ‚Üí –û—à–∏–±–∫–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–æ–∫–∏ **–Ω–µ —è–≤–ª—è—é—Ç—Å—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º–∏ –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö**. –û–Ω–∏ –∑–∞–º–µ–Ω—è—é—Ç –æ–±—ä–µ–∫—Ç—ã, –Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.  

---

üöÄ **–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ –≤—Å–µ–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏!** üí™üî•  
–¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! üòé


‚úÖ **–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:**  
**d. After all test methods in a class**  

---

üìù **–ü–µ—Ä–µ–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞:**  
–ö–æ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è `tearDownClass` –≤ `unittest`?  

---

üìå **–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  

‚úî **"d. After all test methods in a class" ‚Äî –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç**, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–µ—Ç–æ–¥ `tearDownClass(cls)` –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è **–ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ `TestCase`**.  
üìå **–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤**, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã.  

üîπ **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è `tearDownClass`:**  
```python
import unittest

class MyTests(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        print("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–¥ –≤—Å–µ–º–∏ —Ç–µ—Å—Ç–∞–º–∏")

    def test_example(self):
        print("–¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è")

    @classmethod
    def tearDownClass(cls):
        print("–û—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤")

if __name__ == "__main__":
    unittest.main()
```
üîπ **–í—ã–≤–æ–¥:**  
```
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–¥ –≤—Å–µ–º–∏ —Ç–µ—Å—Ç–∞–º–∏
–¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
–û—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
```
‚úÖ **–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã, –∞ `tearDownClass` –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ!**  

‚ùå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **"a. After all tests in a module"** ‚Üí –ù–µ–≤–µ—Ä–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ `tearDownClass` **—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ –∫–ª–∞—Å—Å–∞**, –∞ –Ω–µ –≤—Å–µ–≥–æ –º–æ–¥—É–ª—è.  
- **"b. Before any test method"** ‚Üí –ù–µ–≤–µ—Ä–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ **–¥–æ —Ç–µ—Å—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è `setUpClass`, –∞ –Ω–µ `tearDownClass`**.  
- **"c. After any test method"** ‚Üí –û—à–∏–±–∫–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ `tearDownClass` **–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –û–î–ò–ù —Ä–∞–∑ –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤, –∞ –Ω–µ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞**.  
- **"e. Before all tests method in a class"** ‚Üí –ù–µ–≤–µ—Ä–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ **–¥–æ —Ç–µ—Å—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è `setUpClass`, –∞ `tearDownClass` –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ü–û–°–õ–ï –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤**.  

---

üöÄ **–ü—Ä–∏—Å—ã–ª–∞–π —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ –≤—Å–µ–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏!** üí™üî•  
–¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! üòé
