–ö–æ–Ω–µ—á–Ω–æ! –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º —ç—Ç–∏ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –Ω–∞ –ø–æ–Ω—è—Ç–Ω–æ–º —è–∑—ã–∫–µ. üöÄ  

1Ô∏è‚É£ **"–ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏—è, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –ø–æ–≤–µ–¥–µ–Ω–∏—è–º–∏"**  
   ‚Üí **–ü–∞—Ç—Ç–µ—Ä–Ω "–°–æ—Å—Ç–æ—è–Ω–∏–µ" (State Pattern)**  
   ‚úî –≠—Ç–æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç—É –º–µ–Ω—è—Ç—å —Å–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.  
   üìå **–ü—Ä–∏–º–µ—Ä:** –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç "–°–≤–µ—Ç–æ—Ñ–æ—Ä". –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è (`–∫—Ä–∞—Å–Ω—ã–π`, `–∂—ë–ª—Ç—ã–π`, `–∑–µ–ª—ë–Ω—ã–π`) –æ–Ω –≤–µ–¥—ë—Ç —Å–µ–±—è –ø–æ-—Ä–∞–∑–Ω–æ–º—É.  

2Ô∏è‚É£ **"–û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –µ–º—É –Ω–æ–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ"**  
   ‚Üí **–ü–∞—Ç—Ç–µ—Ä–Ω "–î–µ–∫–æ—Ä–∞—Ç–æ—Ä" (Decorator Pattern)**  
   ‚úî –≠—Ç–æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –æ–±—ä–µ–∫—Ç—É –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–µ –∏–∑–º–µ–Ω—è—è –µ–≥–æ –∫–æ–¥.  
   üìå **–ü—Ä–∏–º–µ—Ä:** –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –±–∞–∑–æ–≤—ã–π `–ö–æ—Ñ–µ`, –∏ —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å `–º–æ–ª–æ–∫–æ`, `—Å–∏—Ä–æ–ø` –∏–ª–∏ `—à–æ–∫–æ–ª–∞–¥`, –∏–∑–º–µ–Ω—è—è –µ–≥–æ –≤–∫—É—Å **–±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞**.  

3Ô∏è‚É£ **"–ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ö–æ–¥–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é –æ–±—ä–µ–∫—Ç–æ–≤ –±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –µ—ë —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏"**  
   ‚Üí **–ü–∞—Ç—Ç–µ—Ä–Ω "–ò—Ç–µ—Ä–∞—Ç–æ—Ä" (Iterator Pattern)**  
   ‚úî –≠—Ç–æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ **–±–µ–∑ –∑–Ω–∞–Ω–∏—è –µ—ë –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞**.  
   üìå **–ü—Ä–∏–º–µ—Ä:** –¢—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ (`list`), —Å–ª–æ–≤–∞—Ä—è (`dict`) –∏–ª–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ (`set`) –≤ Python –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–∞–∑–±–∏—Ä–∞—Ç—å, **–∫–∞–∫ –æ–Ω–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è**.  

–ü–∞—Ç—Ç–µ—Ä–Ω **Decorator** –ø–æ–∑–≤–æ–ª—è–µ—Ç **–¥–æ–±–∞–≤–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç—É –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏** –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ–≥–æ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞. –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ **–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é**, –ø–æ—Å–∫–æ–ª—å–∫—É –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞—Å—à–∏—Ä—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–¥–∫–ª–∞—Å—Å–æ–≤.  

üìå **–ü—Ä–∏–º–µ—Ä –≤ Python:**  
```python
def uppercase_decorator(func):
    def wrapper():
        return func().upper()
    return wrapper

@uppercase_decorator
def greet():
    return "hello, world"

print(greet())  # –í—ã–≤–æ–¥: HELLO, WORLD
```
‚úî **–§—É–Ω–∫—Ü–∏—è `greet()` –±—ã–ª–∞ "–æ–±–µ—Ä–Ω—É—Ç–∞" –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–º–µ–Ω–∏–ª –µ—ë –ø–æ–≤–µ–¥–µ–Ω–∏–µ.**  

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **Composite** ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –æ–±—ä–µ–∫—Ç–æ–≤.  
- **Adapter** ‚Üí –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–¥–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –≤ –¥—Ä—É–≥–æ–π.  
- **Chain of Responsibility** ‚Üí —Å–æ–∑–¥–∞—ë—Ç —Ü–µ–ø–æ—á–∫—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–ø—Ä–æ—Å–∞.   

1Ô∏è‚É£ **Encapsulates interchangeable behaviors and uses delegation to decide which one to use** ‚Üí **Strategy Pattern**  
‚úî –≠—Ç–æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç **–∑–∞–º–µ–Ω—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏**, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class PaymentStrategy:
    def pay(self, amount):
        pass

class CreditCardPayment(PaymentStrategy):
    def pay(self, amount):
        print(f"–û–ø–ª–∞—Ç–∞ {amount} –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ–π.")

class PayPalPayment(PaymentStrategy):
    def pay(self, amount):
        print(f"–û–ø–ª–∞—Ç–∞ {amount} —á–µ—Ä–µ–∑ PayPal.")

def process_payment(strategy, amount):
    strategy.pay(amount)

process_payment(CreditCardPayment(), 100)  # –û–ø–ª–∞—Ç–∞ 100 –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ–π
process_payment(PayPalPayment(), 200)  # –û–ø–ª–∞—Ç–∞ 200 —á–µ—Ä–µ–∑ PayPal
```
‚úî **–ú—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –æ–ø–ª–∞—Ç—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞!**  

---

2Ô∏è‚É£ **Simplifies the interface of a set of classes** ‚Üí **Facade Pattern**  
‚úî –≠—Ç–æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω **—Å–∫—Ä—ã–≤–∞–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã**, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–µ–π.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class SubsystemA:
    def operation_a(self):
        return "A: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ A"

class SubsystemB:
    def operation_b(self):
        return "B: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ B"

class Facade:
    def __init__(self):
        self.a = SubsystemA()
        self.b = SubsystemB()

    def operation(self):
        return f"{self.a.operation_a()} –∏ {self.b.operation_b()}"

facade = Facade()
print(facade.operation())  # A: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ A –∏ B: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ B
```
‚úî **–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å —Å–∏—Å—Ç–µ–º–æ–π —á–µ—Ä–µ–∑ –æ–¥–∏–Ω —É–¥–æ–±–Ω—ã–π –∫–ª–∞—Å—Å, –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–∂–¥—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º –≤—Ä—É—á–Ω—É—é!**  

---

3Ô∏è‚É£ **Wraps an object to control access to it** ‚Üí **Proxy Pattern**  
‚úî –≠—Ç–æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω **—Å–æ–∑–¥–∞—ë—Ç –ø—Ä–æ–∫—Å–∏-–æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É**.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class RealImage:
    def display(self):
        print("–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")

class ProxyImage:
    def __init__(self):
        self.real_image = None

    def display(self):
        if self.real_image is None:
            self.real_image = RealImage()
        self.real_image.display()

image = ProxyImage()
image.display()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
image.display()  # –¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º (–±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏)
```
‚úî **–ü—Ä–æ–∫—Å–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ–º –æ–±—ä–µ–∫—Ç–∞ –∏ –µ–≥–æ –¥–æ—Å—Ç—É–ø–æ–º!**

‚úî **–í—Å–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–µ—Ä–Ω—ã** –∏ –æ–ø–∏—Å—ã–≤–∞—é—Ç –∫–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ **Design Patterns** (–ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è):  

üîπ **a.** –ü–∞—Ç—Ç–µ—Ä–Ω—ã ‚Äî —ç—Ç–æ **–≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è** —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –û–Ω–∏ –ø–æ–º–æ–≥–∞—é—Ç –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –∏ —É–ª—É—á—à–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–¥–∞.  

üîπ **b.** –û–Ω–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç **–ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏**, –∫–æ—Ç–æ—Ä—ã–º–∏ –ø–æ–ª—å–∑—É—é—Ç—Å—è –æ–ø—ã—Ç–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ **–æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ (–û–û–ü)**.  

üîπ **d.** –ú–Ω–æ–≥–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã **—Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏—Å—å –≥–æ–¥–∞–º–∏** –Ω–∞ –æ—Å–Ω–æ–≤–µ **–ø—Ä–æ–± –∏ –æ—à–∏–±–æ–∫** –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤. –ò—Ö —ç–≤–æ–ª—é—Ü–∏—è –±—ã–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º **—Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ–ø—ã—Ç–∞**, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.  

‚úî **–ü–æ—ç—Ç–æ–º—É –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚Äì "All of the above" (–í—Å–µ –≤—ã—à–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–µ—Ä–Ω—ã)!**

1Ô∏è‚É£ **Wraps an object and provides a different interface to it** ‚Üí **Adapter Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–ê–¥–∞–ø—Ç–µ—Ä" (Adapter)** –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **–Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å** –æ–±—ä–µ–∫—Ç–∞, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–≤ –µ–≥–æ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.  
üìå **–ü—Ä–∏–º–µ—Ä:** –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Å—Ç–∞—Ä—ã–π API, –∞ —Ç–≤–æ—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç ‚Äî –∞–¥–∞–ø—Ç–µ—Ä –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤—ã–∑–æ–≤—ã, —á—Ç–æ–±—ã –≤—Å—ë —Ä–∞–±–æ—Ç–∞–ª–æ.  

---

2Ô∏è‚É£ **Subclasses decide which concrete classes to create** ‚Üí **Factory Method**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–§–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥" (Factory Method)** –ø–æ–∑–≤–æ–ª—è–µ—Ç **–ø–æ–¥–∫–ª–∞—Å—Å–∞–º —Ä–µ—à–∞—Ç—å, –∫–∞–∫–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å**.  
üìå **–ü—Ä–∏–º–µ—Ä:** –¢—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–±—Ä–∏–∫—É –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (`Word`, `PDF`, `TXT`), –Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–∞–º–∞ —Ä–µ—à–∞–µ—Ç, –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ —Å–æ–∑–¥–∞—Ç—å.  

---

3Ô∏è‚É£ **Allows objects to be notified when state changes** ‚Üí **Observer Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å" (Observer)** –ø–æ–∑–≤–æ–ª—è–µ—Ç **–æ–±—ä–µ–∫—Ç–∞–º –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞**.  
üìå **–ü—Ä–∏–º–µ—Ä:** –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –≥–¥–µ **–ø–æ–¥–ø–∏—Å—á–∏–∫–∏** –ø–æ–ª—É—á–∞—é—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å.  

**–ü–∞—Ç—Ç–µ—Ä–Ω "–ü—Ä–æ—Ç–æ—Ç–∏–ø" (Prototype)** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ **—Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–ø–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤** –±–µ–∑ –∑–∞—Ç—Ä–∞—Ç –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Å –Ω—É–ª—è. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç –∫–ª–æ–Ω–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —É—Å–∫–æ—Ä—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å.  

üìå **–ü—Ä–∏–º–µ—Ä –≤ Python:**  
```python
import copy

class Prototype:
    def __init__(self, value):
        self.value = value

    def clone(self):
        return copy.deepcopy(self)  # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ—á–Ω–æ–π –∫–æ–ø–∏–∏ –æ–±—ä–µ–∫—Ç–∞

obj1 = Prototype(42)
obj2 = obj1.clone()

print(obj1.value, obj2.value)  # –í—ã–≤–æ–¥: 42 42
print(obj1 is obj2)  # –í—ã–≤–æ–¥: False (–æ–±—ä–µ–∫—Ç—ã —Ä–∞–∑–Ω—ã–µ, –Ω–æ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ)
```
‚úî **–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å–æ–∑–¥–∞—ë—Ç –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞, –Ω–µ —Å–æ–∑–¥–∞–≤–∞—è –µ–≥–æ —Å –Ω—É–ª—è.**  

---

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **Builder Pattern** ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ—ç—Ç–∞–ø–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.  
- **Bridge Pattern** ‚Üí —Ä–∞–∑–¥–µ–ª—è–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—é –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –≥–∏–±–∫–æ–π.  
- **Filter Pattern** ‚Üí –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º.  

1Ô∏è‚É£ **Subclasses decide how to implement steps in an algorithm** ‚Üí **Template Method Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–®–∞–±–ª–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥" (Template Method)** –ø–æ–∑–≤–æ–ª—è–µ—Ç **–∑–∞–¥–∞–≤–∞—Ç—å –æ–±—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º**, –∞ –ø–æ–¥–∫–ª–∞—Å—Å—ã –º–æ–≥—É—Ç **–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —à–∞–≥–∏**.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class AbstractRecipe:
    def cook(self):
        self.prepare_ingredients()
        self.cook_dish()
        self.serve()

    def prepare_ingredients(self):
        raise NotImplementedError

    def cook_dish(self):
        raise NotImplementedError

    def serve(self):
        print("–ë–ª—é–¥–æ –ø–æ–¥–∞–Ω–æ!")

class PastaRecipe(AbstractRecipe):
    def prepare_ingredients(self):
        print("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–∞–∫–∞—Ä–æ–Ω –∏ —Å–æ—É—Å–∞")

    def cook_dish(self):
        print("–í–∞—Ä–∫–∞ –º–∞–∫–∞—Ä–æ–Ω –∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ —Å–æ—É—Å–∞")

pasta = PastaRecipe()
pasta.cook()
```
‚úî **–ö–ª–∞—Å—Å `AbstractRecipe` –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º, –Ω–æ –µ–≥–æ —à–∞–≥–∏ (`prepare_ingredients`, `cook_dish`) –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –≤ –ø–æ–¥–∫–ª–∞—Å—Å–µ!**  

---

2Ô∏è‚É£ **Clients treat collections of objects and individual objects uniformly** ‚Üí **Composite Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–ö–æ–º–ø–æ–Ω–æ–≤—â–∏–∫" (Composite)** –ø–æ–∑–≤–æ–ª—è–µ—Ç **—Ä–∞–±–æ—Ç–∞—Ç—å —Å –≥—Ä—É–ø–ø–∞–º–∏ –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–∞–∫ –∂–µ, –∫–∞–∫ —Å –æ–¥–∏–Ω–æ—á–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏**.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class Employee:
    def __init__(self, name):
        self.name = name

    def show_details(self):
        print(self.name)

class Department:
    def __init__(self):
        self.members = []

    def add_member(self, employee):
        self.members.append(employee)

    def show_details(self):
        for member in self.members:
            member.show_details()

dev1 = Employee("Alice")
dev2 = Employee("Bob")

development = Department()
development.add_member(dev1)
development.add_member(dev2)

development.show_details()
```
‚úî **–ú—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º `Department` —Ç–∞–∫ –∂–µ, –∫–∞–∫ `Employee`!**  

---

3Ô∏è‚É£ **Ensures one and only one object is created** ‚Üí **Singleton Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–û–¥–∏–Ω–æ—á–∫–∞" (Singleton)** –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ **–µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞**.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class Singleton:
    _instance = None

    def __new__(cls):
        if cls._instance is None:
            cls._instance = super().__new__(cls)
        return cls._instance

s1 = Singleton()
s2 = Singleton()

print(s1 is s2)  # True - –æ–±—ä–µ–∫—Ç—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ!
```
‚úî **–í–æ –≤—Å–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç!**  

**–ü–∞—Ç—Ç–µ—Ä–Ω "–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å" (Observer Pattern)** —Å–æ–∑–¥–∞—ë—Ç **–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å "–æ–¥–∏–Ω –∫–æ –º–Ω–æ–≥–∏–º"** –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏. –ö–æ–≥–¥–∞ **–æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –∏–∑–º–µ–Ω—è–µ—Ç—Å—è**, –≤—Å–µ –µ–≥–æ **–ø–æ–¥–ø–∏—Å—á–∏–∫–∏** –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞—é—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è.  

üìå **–ü—Ä–∏–º–µ—Ä –≤ Python:**  
```python
class Observer:
    def update(self, message):
        print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message}")

class Subject:
    def __init__(self):
        self.observers = []

    def subscribe(self, observer):
        self.observers.append(observer)

    def notify(self, message):
        for observer in self.observers:
            observer.update(message)

# –°–æ–∑–¥–∞—ë–º –∏–∑–¥–∞—Ç–µ–ª—è –∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
news = Subject()
user1 = Observer()
user2 = Observer()

news.subscribe(user1)
news.subscribe(user2)

# –ò–∑–¥–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
news.notify("–ù–æ–≤—ã–π –≤—ã–ø—É—Å–∫ –∂—É—Ä–Ω–∞–ª–∞!")  
# –í—ã–≤–æ–¥:
# –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: –ù–æ–≤—ã–π –≤—ã–ø—É—Å–∫ –∂—É—Ä–Ω–∞–ª–∞!
# –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: –ù–æ–≤—ã–π –≤—ã–ø—É—Å–∫ –∂—É—Ä–Ω–∞–ª–∞!
```
‚úî **–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ —Å—Ä–∞–∑—É —É–∑–Ω–∞—é—Ç, –∫–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ!**  

---

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **Event Notification** ‚Üí –ø—Ä–æ—Å—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –µ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –Ω–æ —ç—Ç–æ –ù–ï –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω.  
- **Chain of Responsibility** ‚Üí –ø–µ—Ä–µ–¥–∞—ë—Ç –∑–∞–ø—Ä–æ—Å –ø–æ —Ü–µ–ø–æ—á–∫–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –Ω–æ **–Ω–µ —É–≤–µ–¥–æ–º–ª—è–µ—Ç —Å—Ä–∞–∑—É –≤—Å–µ—Ö**.  
- **Mediator** ‚Üí —É–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—â–µ–Ω–∏–µ–º –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏, –Ω–æ **–Ω–µ —Å–æ–∑–¥–∞—ë—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å "–æ–¥–∏–Ω –∫–æ –º–Ω–æ–≥–∏–º"**.  

1Ô∏è‚É£ **Allows a client to create families of objects without specifying their concrete classes** ‚Üí **Abstract Factory Pattern**  
‚úî **–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è —Ñ–∞–±—Ä–∏–∫–∞** –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å **—Å–µ–º–µ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤**, –Ω–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –∏—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º –∏ —É–¥–æ–±–Ω—ã–º –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class Button:
    def render(self):
        pass

class WindowsButton(Button):
    def render(self):
        return "–ö–Ω–æ–ø–∫–∞ Windows"

class MacOSButton(Button):
    def render(self):
        return "–ö–Ω–æ–ø–∫–∞ MacOS"

class ButtonFactory:
    @staticmethod
    def create_button(os_type):
        if os_type == "windows":
            return WindowsButton()
        elif os_type == "mac":
            return MacOSButton()
        else:
            raise ValueError("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –û–°!")

button = ButtonFactory.create_button("windows")
print(button.render())  # –í—ã–≤–æ–¥: –ö–Ω–æ–ø–∫–∞ Windows
```
‚úî **–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –û–°, –Ω–æ –Ω–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç—Å—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏!**  

---

2Ô∏è‚É£ **Decouples an abstraction from its implementation so they can vary independently** ‚Üí **Bridge Pattern**  
‚úî **–ú–æ—Å—Ç (Bridge)** —Ä–∞–∑–¥–µ–ª—è–µ—Ç **–∞–±—Å—Ç—Ä–∞–∫—Ü–∏—é –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é**, –ø–æ–∑–≤–æ–ª—è—è –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class DrawingAPI:
    def draw_circle(self, x, y, radius):
        pass

class OpenGL(DrawingAPI):
    def draw_circle(self, x, y, radius):
        return f"–†–∏—Å—É–µ–º –∫—Ä—É–≥ —á–µ—Ä–µ–∑ OpenGL: ({x}, {y}, {radius})"

class DirectX(DrawingAPI):
    def draw_circle(self, x, y, radius):
        return f"–†–∏—Å—É–µ–º –∫—Ä—É–≥ —á–µ—Ä–µ–∑ DirectX: ({x}, {y}, {radius})"

class Circle:
    def __init__(self, x, y, radius, drawing_api):
        self.x, self.y, self.radius, self.drawing_api = x, y, radius, drawing_api

    def draw(self):
        return self.drawing_api.draw_circle(self.x, self.y, self.radius)

circle1 = Circle(10, 20, 5, OpenGL())
circle2 = Circle(30, 40, 10, DirectX())

print(circle1.draw())  # –í—ã–≤–æ–¥: –†–∏—Å—É–µ–º –∫—Ä—É–≥ —á–µ—Ä–µ–∑ OpenGL: (10, 20, 5)
print(circle2.draw())  # –í—ã–≤–æ–¥: –†–∏—Å—É–µ–º –∫—Ä—É–≥ —á–µ—Ä–µ–∑ DirectX: (30, 40, 10)
```
‚úî **–ö–ª–∞—Å—Å `Circle` –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏—è, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–≥–æ –≥–∏–±–∫–∏–º!**  

---

3Ô∏è‚É£ **Encapsulates a request as an object** ‚Üí **Command Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–ö–æ–º–∞–Ω–¥–∞" (Command)** **–∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å** –≤ –æ–±—ä–µ–∫—Ç, –ø–æ–∑–≤–æ–ª—è—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –µ–≥–æ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class Command:
    def execute(self):
        pass

class LightOnCommand(Command):
    def execute(self):
        return "–°–≤–µ—Ç –≤–∫–ª—é—á—ë–Ω!"

class LightOffCommand(Command):
    def execute(self):
        return "–°–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω!"

class RemoteControl:
    def __init__(self):
        self.command = None

    def set_command(self, command):
        self.command = command

    def press_button(self):
        return self.command.execute()

remote = RemoteControl()
remote.set_command(LightOnCommand())
print(remote.press_button())  # –í—ã–≤–æ–¥: –°–≤–µ—Ç –≤–∫–ª—é—á—ë–Ω!

remote.set_command(LightOffCommand())
print(remote.press_button())  # –í—ã–≤–æ–¥: –°–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω!
```
‚úî **–ö–æ–º–∞–Ω–¥—ã –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É—é—Ç –ª–æ–≥–∏–∫—É, –ø–æ–∑–≤–æ–ª—è—è —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ!**  

**–ü–∞—Ç—Ç–µ—Ä–Ω "–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä" (Interpreter Pattern)** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è **—Ä–∞–∑–±–æ—Ä–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏ —è–∑—ã–∫–∞ –∏–ª–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π**. –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç **—Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ —è–∑—ã–∫–∏** –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö.  

üìå **–ü—Ä–∏–º–µ—Ä: –ø—Ä–æ—Å—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏—è**  
```python
class Expression:
    def interpret(self):
        pass

class Number(Expression):
    def __init__(self, value):
        self.value = value

    def interpret(self):
        return self.value

class Addition(Expression):
    def __init__(self, left, right):
        self.left = left
        self.right = right

    def interpret(self):
        return self.left.interpret() + self.right.interpret()

# –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è "3 + 5"
expr = Addition(Number(3), Number(5))
print(expr.interpret())  # –í—ã–≤–æ–¥: 8
```
‚úî **–≠—Ç–æ—Ç –∫–æ–¥ —Å–æ–∑–¥–∞—ë—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç –∏—Ö!**  

---

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **Proxy Pattern** ‚Üí —É–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø–æ–º –∫ –æ–±—ä–µ–∫—Ç—É, –Ω–æ –ù–ï –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥—Ä–∞–º–º–∞—Ç–∏–∫—É.  
- **Chain of Responsibility Pattern** ‚Üí –ø–µ—Ä–µ–¥–∞—ë—Ç –∑–∞–ø—Ä–æ—Å –ø–æ —Ü–µ–ø–æ—á–∫–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –Ω–æ –ù–ï —Ä–∞–∑–±–∏—Ä–∞–µ—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏—è.  
- **Command Pattern** ‚Üí –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –æ–±—ä–µ–∫—Ç, –Ω–æ –ù–ï –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —è–∑—ã–∫.  

1Ô∏è‚É£ **Gives more than one object a chance to handle a request** ‚Üí **Chain of Responsibility Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–¶–µ–ø–æ—á–∫–∞ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π" (Chain of Responsibility)** –ø–µ—Ä–µ–¥–∞—ë—Ç –∑–∞–ø—Ä–æ—Å **–ø–æ —Ü–µ–ø–æ—á–∫–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤**, –ø–æ–∫–∞ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –µ–≥–æ.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class Handler:
    def __init__(self, next_handler=None):
        self.next_handler = next_handler

    def handle(self, request):
        if self.next_handler:
            return self.next_handler.handle(request)
        return f"–ó–∞–ø—Ä–æ—Å {request} –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω"

class ConcreteHandlerA(Handler):
    def handle(self, request):
        if request == "A":
            return "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ A"
        return super().handle(request)

class ConcreteHandlerB(Handler):
    def handle(self, request):
        if request == "B":
            return "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ B"
        return super().handle(request)

handler_chain = ConcreteHandlerA(ConcreteHandlerB())
print(handler_chain.handle("B"))  # –í—ã–≤–æ–¥: –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ B
print(handler_chain.handle("C"))  # –í—ã–≤–æ–¥: –ó–∞–ø—Ä–æ—Å C –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
```
‚úî **–ó–∞–ø—Ä–æ—Å –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –ø–æ–∫–∞ –æ–¥–∏–Ω –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç –¥–µ–π—Å—Ç–≤–∏–µ!**  

---

2Ô∏è‚É£ **Use one instance of a class to provide many virtual instances** ‚Üí **Flyweight Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–õ–µ–≥–∫–æ–≤–µ—Å" (Flyweight)** —É–º–µ–Ω—å—à–∞–µ—Ç –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏, **—Ä–∞–∑–¥–µ–ª—è—è –æ–±—ä–µ–∫—Ç—ã –º–µ–∂–¥—É —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏**, –∞ –Ω–µ —Å–æ–∑–¥–∞–≤–∞—è –∏—Ö –∑–∞–Ω–æ–≤–æ.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class FlyweightFactory:
    _instances = {}

    @staticmethod
    def get_instance(key):
        if key not in FlyweightFactory._instances:
            FlyweightFactory._instances[key] = f"–≠–∫–∑–µ–º–ø–ª—è—Ä {key}"
        return FlyweightFactory._instances[key]

obj1 = FlyweightFactory.get_instance("A")
obj2 = FlyweightFactory.get_instance("A")

print(obj1 is obj2)  # True - –æ–±–∞ –æ–±—ä–µ–∫—Ç–∞ —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä!
```
‚úî **–≠–∫–∑–µ–º–ø–ª—è—Ä—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è, –∞ –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –∑–∞–Ω–æ–≤–æ!**  

---

3Ô∏è‚É£ **Allows constructing in steps** ‚Üí **Builder Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–°—Ç—Ä–æ–∏—Ç–µ–ª—å" (Builder)** —Å–æ–∑–¥–∞—ë—Ç —Å–ª–æ–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã **–ø–æ—ç—Ç–∞–ø–Ω–æ**, —É–ª—É—á—à–∞—è –≥–∏–±–∫–æ—Å—Ç—å.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class BurgerBuilder:
    def __init__(self):
        self.ingredients = []

    def add_cheese(self):
        self.ingredients.append("–°—ã—Ä")
        return self

    def add_lettuce(self):
        self.ingredients.append("–°–∞–ª–∞—Ç")
        return self

    def build(self):
        return f"–ë—É—Ä–≥–µ—Ä —Å: {', '.join(self.ingredients)}"

burger = BurgerBuilder().add_cheese().add_lettuce().build()
print(burger)  # –í—ã–≤–æ–¥: –ë—É—Ä–≥–µ—Ä —Å: –°—ã—Ä, –°–∞–ª–∞—Ç
```
‚úî **–ú—ã –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —à–∞–≥ –∑–∞ —à–∞–≥–æ–º, –∞ –ø–æ—Ç–æ–º —Å–æ–∑–¥–∞—ë–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç!**  

**–ü–∞—Ç—Ç–µ—Ä–Ω "–§–∞–±—Ä–∏–∫–∞" (Factory Pattern)** —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç—ã **–±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –ª–æ–≥–∏–∫–∏ –∏—Ö —Å–æ–∑–¥–∞–Ω–∏—è**. –í–º–µ—Å—Ç–æ —è–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è `new`, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ **—Ñ–∞–±—Ä–∏—á–Ω–æ–º—É –º–µ—Ç–æ–¥—É**, –∫–æ—Ç–æ—Ä—ã–π —Å–∞–º —Ä–µ—à–∞–µ—Ç, –∫–∞–∫–æ–π –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞—Ç—å, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ —á–µ—Ä–µ–∑ –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.  

üìå **–ü—Ä–∏–º–µ—Ä –≤ Python:**  
```python
class Dog:
    def speak(self):
        return "–ì–∞–≤!"

class Cat:
    def speak(self):
        return "–ú—è—É!"

class AnimalFactory:
    @staticmethod
    def create_animal(animal_type):
        if animal_type == "dog":
            return Dog()
        elif animal_type == "cat":
            return Cat()
        else:
            raise ValueError("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ!")

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–±—Ä–∏–∫—É:
animal = AnimalFactory.create_animal("dog")
print(animal.speak())  # –í—ã–≤–æ–¥: –ì–∞–≤!
```
‚úî **–ú—ã –Ω–µ –∑–Ω–∞–µ–º, –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ –∫–ª–∞—Å—Å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω, –Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç —á–µ—Ä–µ–∑ –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å!**  

---

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **Transfer Object Pattern** ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å–ª–æ–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏, –∞ –ù–ï –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤.  
- **Abstract Factory Pattern** ‚Üí —Å–æ–∑–¥–∞—ë—Ç **—Å–µ–º–µ–π—Å—Ç–≤–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤**, –Ω–æ –ù–ï –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –ª–æ–≥–∏–∫–æ–π —Å–æ–∑–¥–∞–Ω–∏—è **–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ** –æ–±—ä–µ–∫—Ç–∞.  
- **Singleton Pattern** ‚Üí —Å–æ–∑–¥–∞—ë—Ç **–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä** –æ–±—ä–µ–∫—Ç–∞, –Ω–æ –ù–ï —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.  

1Ô∏è‚É£ **Encapsulates how a set of objects interact** ‚Üí **Mediator Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–ü–æ—Å—Ä–µ–¥–Ω–∏–∫" (Mediator)** —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º –æ–±—ä–µ–∫—Ç–æ–≤, —á—Ç–æ–±—ã –æ–Ω–∏ **–Ω–µ –æ–±—â–∞–ª–∏—Å—å –Ω–∞–ø—Ä—è–º—É—é**. –≠—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –º–µ–∂–¥—É –∫–ª–∞—Å—Å–∞–º–∏ –∏ —É–ø—Ä–æ—â–∞–µ—Ç –∫–æ–¥.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class ChatRoom:
    def show_message(self, user, message):
        print(f"[{user}]: {message}")

class User:
    def __init__(self, name, chatroom):
        self.name = name
        self.chatroom = chatroom

    def send_message(self, message):
        self.chatroom.show_message(self.name, message)

room = ChatRoom()
user1 = User("Alice", room)
user2 = User("Bob", room)

user1.send_message("–ü—Ä–∏–≤–µ—Ç, –ë–æ–±!")  # [Alice]: –ü—Ä–∏–≤–µ—Ç, –ë–æ–±!
user2.send_message("–ü—Ä–∏–≤–µ—Ç, –ê–ª–∏—Å–∞!")  # [Bob]: –ü—Ä–∏–≤–µ—Ç, –ê–ª–∏—Å–∞!
```
‚úî **–í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ `ChatRoom`, –∞ –Ω–µ –Ω–∞–ø—Ä—è–º—É—é –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!**  

---

2Ô∏è‚É£ **Provides the ability to restore an object to its previous state** ‚Üí **Memento Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–•—Ä–∞–Ω–∏—Ç–µ–ª—å" (Memento)** –ø–æ–∑–≤–æ–ª—è–µ—Ç **—Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞** –∏ **–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏**.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class Memento:
    def __init__(self, state):
        self.state = state

class Editor:
    def __init__(self):
        self.state = ""
    
    def write(self, text):
        self.state += text
    
    def save(self):
        return Memento(self.state)
    
    def restore(self, memento):
        self.state = memento.state

editor = Editor()
editor.write("Hello, ")
memento = editor.save()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è

editor.write("world!")
print(editor.state)  # Hello, world!

editor.restore(memento)  # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
print(editor.state)  # Hello,
```
‚úî **–ú—ã –º–æ–∂–µ–º –æ—Ç–∫–∞—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é!**  

---

3Ô∏è‚É£ **Evaluates sentences in a language** ‚Üí **Interpreter Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä" (Interpreter)** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è **—Ä–∞–∑–±–æ—Ä–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã—Ä–∞–∂–µ–Ω–∏–π –≤ —è–∑—ã–∫–µ**.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class Expression:
    def interpret(self):
        pass

class Number(Expression):
    def __init__(self, value):
        self.value = value

    def interpret(self):
        return self.value

class Addition(Expression):
    def __init__(self, left, right):
        self.left = left
        self.right = right

    def interpret(self):
        return self.left.interpret() + self.right.interpret()

expr = Addition(Number(3), Number(5))
print(expr.interpret())  # –í—ã–≤–æ–¥: 8
```
‚úî **–≠—Ç–æ—Ç –∫–æ–¥ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Å–ª—è–µ—Ç –µ–≥–æ!**  

**–ü–∞—Ç—Ç–µ—Ä–Ω "–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å" (Observer Pattern)** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ **–Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–æ–ª–∂–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞**.  

üìå **–ü—Ä–∏–º–µ—Ä –≤ Python:**  
```python
class Observer:
    def update(self, message):
        print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message}")

class Subject:
    def __init__(self):
        self.observers = []

    def subscribe(self, observer):
        self.observers.append(observer)

    def notify(self, message):
        for observer in self.observers:
            observer.update(message)

# –°–æ–∑–¥–∞—ë–º –∏–∑–¥–∞—Ç–µ–ª—è –∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
news = Subject()
user1 = Observer()
user2 = Observer()

news.subscribe(user1)
news.subscribe(user2)

# –ò–∑–¥–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
news.notify("–ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!")  
# –í—ã–≤–æ–¥:
# –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: –ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!
# –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: –ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!
```
‚úî **–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–∑–Ω–∞—é—Ç –æ —Å–æ–±—ã—Ç–∏–∏!**  

---

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **a. "This pattern is used to restore state of an object to a previous state."** ‚Üí –≠—Ç–æ **Memento Pattern**, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞.  
- **b. "This pattern is used to get a way to access the elements of a collection object in sequential manner without any need to know its underlying representation."** ‚Üí –≠—Ç–æ **Iterator Pattern**, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –æ–±—Ö–æ–¥–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –±–µ–∑ –∑–Ω–∞–Ω–∏—è –∏—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.  
- **d. "This pattern is used to reduce communication complexity between multiple objects or classes."** ‚Üí –≠—Ç–æ **Mediator Pattern**, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –æ–±—â–∞–ª–∏—Å—å –Ω–∞–ø—Ä—è–º—É—é.  

1Ô∏è‚É£ **Allows the definition of new operations on objects without changing their structures** ‚Üí **Visitor Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å" (Visitor)** –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∫ –æ–±—ä–µ–∫—Ç–∞–º **–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä—ã**.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class Element:
    def accept(self, visitor):
        visitor.visit(self)

class ConcreteElementA(Element):
    pass

class ConcreteElementB(Element):
    pass

class Visitor:
    def visit(self, element):
        if isinstance(element, ConcreteElementA):
            print("–û–±—Ä–∞–±–æ—Ç–∫–∞ ConcreteElementA")
        elif isinstance(element, ConcreteElementB):
            print("–û–±—Ä–∞–±–æ—Ç–∫–∞ ConcreteElementB")

elements = [ConcreteElementA(), ConcreteElementB()]
visitor = Visitor()

for element in elements:
    element.accept(visitor)
```
‚úî **–ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã `ConcreteElementA` –∏ `ConcreteElementB`, –Ω–æ –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Å—Ç–∞—ë—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω–æ–π!**  

---

2Ô∏è‚É£ **Create objects from prototypical existing instances** ‚Üí **Prototype Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–ü—Ä–æ—Ç–æ—Ç–∏–ø" (Prototype)** –ø–æ–∑–≤–æ–ª—è–µ—Ç **—Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã –ø—É—Ç–µ–º –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö**.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
import copy

class Prototype:
    def __init__(self, value):
        self.value = value

    def clone(self):
        return copy.deepcopy(self)

obj1 = Prototype(42)
obj2 = obj1.clone()

print(obj1.value, obj2.value)  # –í—ã–≤–æ–¥: 42 42
print(obj1 is obj2)  # False (–æ–±—ä–µ–∫—Ç—ã —Ä–∞–∑–Ω—ã–µ, –Ω–æ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ)
```
‚úî **–ú—ã —Å–æ–∑–¥–∞—ë–º –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞, –∞ –Ω–µ –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å –Ω—É–ª—è!**  

---

3Ô∏è‚É£ **Provides the ability to restore an object to its previous state** ‚Üí **Memento Pattern**  
‚úî **–ü–∞—Ç—Ç–µ—Ä–Ω "–•—Ä–∞–Ω–∏—Ç–µ–ª—å" (Memento)** —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –µ–≥–æ **–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ –±—É–¥—É—â–µ–º**.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class Memento:
    def __init__(self, state):
        self.state = state

class Editor:
    def __init__(self):
        self.state = ""

    def write(self, text):
        self.state += text

    def save(self):
        return Memento(self.state)

    def restore(self, memento):
        self.state = memento.state

editor = Editor()
editor.write("Hello, ")
memento = editor.save()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è

editor.write("world!")
print(editor.state)  # –í—ã–≤–æ–¥: Hello, world!

editor.restore(memento)  # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
print(editor.state)  # –í—ã–≤–æ–¥: Hello,
```
‚úî **–ú–æ–∂–Ω–æ –æ—Ç–∫–∞—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é!**  

**–ü–∞—Ç—Ç–µ—Ä–Ω "–ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å" (Visitor Pattern)** –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å **–Ω–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∫ –æ–±—ä–µ–∫—Ç–∞–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä—ã**. –í–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –º–µ–Ω—è—Ç—å —Å–∞–º –∫–ª–∞—Å—Å, –º—ã –ø–µ—Ä–µ–¥–∞—ë–º –µ–º—É "–ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è", –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, **–∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±—ä–µ–∫—Ç**.  

üìå **–ü—Ä–∏–º–µ—Ä –≤ Python:**  
```python
class Element:
    def accept(self, visitor):
        visitor.visit(self)

class ConcreteElementA(Element):
    pass

class ConcreteElementB(Element):
    pass

class Visitor:
    def visit(self, element):
        if isinstance(element, ConcreteElementA):
            print("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ConcreteElementA")
        elif isinstance(element, ConcreteElementB):
            print("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ConcreteElementB")

elements = [ConcreteElementA(), ConcreteElementB()]
visitor = Visitor()

for element in elements:
    element.accept(visitor)
```
‚úî **–ö–ª–∞—Å—Å `Visitor` –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å `ConcreteElementA` –∏ `ConcreteElementB`, –Ω–æ —Å–∞–º–∏ –∫–ª–∞—Å—Å—ã –æ—Å—Ç–∞—é—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º–∏!**  

---

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **a. "Decouple presentation tier and business tier from visitor."** ‚Üí –≠—Ç–æ —Å–∫–æ—Ä–µ–µ –∫–∞—Å–∞–µ—Ç—Å—è **MVC (Model-View-Controller)**, –∞ –Ω–µ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ Visitor.  
- **b. "Used in visitors EJB persistence mechanism."** ‚Üí –≠—Ç–æ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ **Enterprise JavaBeans (EJB)**, –Ω–æ Visitor Pattern –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —à–∏—Ä–µ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –º–µ—Ö–∞–Ω–∏–∑–º–µ Java.  
- **d. "Separates unauthorized users from application's concerns."** ‚Üí –≠—Ç–æ –±–æ–ª—å—à–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ **Proxy Pattern**, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø–æ–º –∫ –æ–±—ä–µ–∫—Ç—É.  

**–ü–æ—Ä–æ–∂–¥–∞—é—â–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã (Creational Patterns)** —É–ø—Ä–∞–≤–ª—è—é—Ç —Å–æ–∑–¥–∞–Ω–∏–µ–º –æ–±—ä–µ–∫—Ç–æ–≤, **—Å–∫—Ä—ã–≤–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å** –∏—Ö –∏–Ω—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏—è. –í–º–µ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è `new`, –æ–Ω–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç **–≥–∏–±–∫–∏–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã** –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –±–æ–ª–µ–µ —á–∏—Å—Ç—ã–º –∏ —É–¥–æ–±–Ω—ã–º –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è.  

üìå **–ü—Ä–∏–º–µ—Ä—ã –ø–æ—Ä–æ–∂–¥–∞—é—â–∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤:**  
- **Factory Method** ‚Üí –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–∫–ª–∞—Å—Å–∞–º —Ä–µ—à–∞—Ç—å, –∫–∞–∫–æ–π –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å.  
- **Abstract Factory** ‚Üí —Å–æ–∑–¥–∞—ë—Ç —Å–µ–º–µ–π—Å—Ç–≤–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.  
- **Builder** ‚Üí —Å–æ–∑–¥–∞—ë—Ç —Å–ª–æ–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –ø–æ—à–∞–≥–æ–≤–æ.  
- **Prototype** ‚Üí —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç—ã –ø—É—Ç—ë–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.  
- **Singleton** ‚Üí –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞.  

---

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **a. "Concern class and object composition..."** ‚Üí –≠—Ç–æ **–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã (Structural Patterns)**, —Ç–∞–∫–∏–µ –∫–∞–∫ **Composite** –∏–ª–∏ **Decorator**.  
- **b. "Concerned with communication between objects..."** ‚Üí –≠—Ç–æ **–ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã (Behavioral Patterns)**, –Ω–∞–ø—Ä–∏–º–µ—Ä **Observer** –∏–ª–∏ **Mediator**.  
- **d. "Concerned with presentation tier..."** ‚Üí –≠—Ç–æ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ **–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º –∫–æ–Ω—Ü–µ–ø—Ü–∏—è–º**, —Ç–∞–∫–∏–º –∫–∞–∫ **MVC (Model-View-Controller)**, –Ω–æ –Ω–µ –∫ –ø–æ—Ä–æ–∂–¥–∞—é—â–∏–º –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º.  

**–ü–∞—Ç—Ç–µ—Ä–Ω "–ú–æ—Å—Ç" (Bridge Pattern)** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ **—Ä–∞–∑–¥–µ–ª–∏—Ç—å –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—é –∏ –µ—ë —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é**, —á—Ç–æ–±—ã –æ–Ω–∏ –º–æ–≥–ª–∏ **–∏–∑–º–µ–Ω—è—Ç—å—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ**. –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ **–≤—ã–±–∏—Ä–∞—Ç—å—Å—è –∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å—Å—è –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã**.  

üìå **–ü—Ä–∏–º–µ—Ä –≤ Python:**  
```python
class DrawingAPI:
    def draw_circle(self, x, y, radius):
        pass

class OpenGL(DrawingAPI):
    def draw_circle(self, x, y, radius):
        return f"–†–∏—Å—É–µ–º –∫—Ä—É–≥ —á–µ—Ä–µ–∑ OpenGL: ({x}, {y}, {radius})"

class DirectX(DrawingAPI):
    def draw_circle(self, x, y, radius):
        return f"–†–∏—Å—É–µ–º –∫—Ä—É–≥ —á–µ—Ä–µ–∑ DirectX: ({x}, {y}, {radius})"

class Circle:
    def __init__(self, x, y, radius, drawing_api):
        self.x, self.y, self.radius, self.drawing_api = x, y, radius, drawing_api

    def draw(self):
        return self.drawing_api.draw_circle(self.x, self.y, self.radius)

circle1 = Circle(10, 20, 5, OpenGL())
circle2 = Circle(30, 40, 10, DirectX())

print(circle1.draw())  # –í—ã–≤–æ–¥: –†–∏—Å—É–µ–º –∫—Ä—É–≥ —á–µ—Ä–µ–∑ OpenGL: (10, 20, 5)
print(circle2.draw())  # –í—ã–≤–æ–¥: –†–∏—Å—É–µ–º –∫—Ä—É–≥ —á–µ—Ä–µ–∑ DirectX: (30, 40, 10)
```
‚úî **–ö–ª–∞—Å—Å `Circle` –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏—è, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–≥–æ –≥–∏–±–∫–∏–º!**  

---

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **Strategy** ‚Üí –ú–µ–Ω—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞, –Ω–æ –ù–ï –æ—Ç–¥–µ–ª—è–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—é –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.  
- **Template Method** ‚Üí –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —à–∞–≥–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞, –Ω–æ –ù–ï —É–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å—é –º–µ–∂–¥—É –∫–ª–∞—Å—Å–∞–º–∏.  
- **Abstract Factory** ‚Üí –°–æ–∑–¥–∞—ë—Ç **—Å–µ–º–µ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤**, –Ω–æ –ù–ï –æ—Ç–¥–µ–ª—è–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –æ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏.  

**–ü–∞—Ç—Ç–µ—Ä–Ω "–°—Ç—Ä–æ–∏—Ç–µ–ª—å" (Builder Pattern)** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ **—Å–æ–∑–¥–∞—Ç—å —Å–ª–æ–∂–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø–æ—ç—Ç–∞–ø–Ω–æ**, –∞ —Ç–∞–∫–∂–µ **–ø–æ–∑–≤–æ–ª–∏—Ç—å —Ä–∞–∑–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è** —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞. –û–Ω —É–¥–æ–±–µ–Ω, –µ—Å–ª–∏ –æ–±—ä–µ–∫—Ç **–∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π**, –∏ –º—ã —Ö–æ—Ç–∏–º –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤.  

üìå **–ü—Ä–∏–º–µ—Ä:**  
```python
class BurgerBuilder:
    def __init__(self):
        self.ingredients = []

    def add_cheese(self):
        self.ingredients.append("–°—ã—Ä")
        return self

    def add_lettuce(self):
        self.ingredients.append("–°–∞–ª–∞—Ç")
        return self

    def build(self):
        return f"–ë—É—Ä–≥–µ—Ä —Å: {', '.join(self.ingredients)}"

burger1 = BurgerBuilder().add_cheese().add_lettuce().build()
burger2 = BurgerBuilder().add_cheese().build()

print(burger1)  # –í—ã–≤–æ–¥: –ë—É—Ä–≥–µ—Ä —Å: –°—ã—Ä, –°–∞–ª–∞—Ç
print(burger2)  # –í—ã–≤–æ–¥: –ë—É—Ä–≥–µ—Ä —Å: –°—ã—Ä
```
‚úî **–ú—ã —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –ø–æ—ç—Ç–∞–ø–Ω–æ, –¥–æ–±–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã!**  

---

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **Singleton** ‚Üí —Å–æ–∑–¥–∞—ë—Ç **–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä** –æ–±—ä–µ–∫—Ç–∞, –Ω–æ –ù–ï —É–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–º –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è.  
- **Composite** ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –æ–±—ä–µ–∫—Ç–æ–≤.  
- **Decorator** ‚Üí –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç—É, –Ω–æ –ù–ï —É–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ–º.  

**–ü–∞—Ç—Ç–µ—Ä–Ω "–•—Ä–∞–Ω–∏—Ç–µ–ª—å" (Memento Pattern)** –ø–æ–∑–≤–æ–ª—è–µ—Ç **—Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞** –∏ **–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –µ–≥–æ**, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è –¥–µ—Ç–∞–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏. –≠—Ç–æ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã **–Ω–µ –Ω–∞—Ä—É—à–∞—Ç—å –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—é** –æ–±—ä–µ–∫—Ç–∞, —Ç. –µ. –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø –∫ –µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –¥–∞–Ω–Ω—ã–º –Ω–∞–ø—Ä—è–º—É—é.  

üìå **–ü—Ä–∏–º–µ—Ä –≤ Python:**  
```python
class Memento:
    def __init__(self, state):
        self.state = state

class Editor:
    def __init__(self):
        self.state = ""

    def write(self, text):
        self.state += text

    def save(self):
        return Memento(self.state)

    def restore(self, memento):
        self.state = memento.state

editor = Editor()
editor.write("Hello, ")
memento = editor.save()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è

editor.write("world!")
print(editor.state)  # –í—ã–≤–æ–¥: Hello, world!

editor.restore(memento)  # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
print(editor.state)  # –í—ã–≤–æ–¥: Hello,
```
‚úî **–ú—ã –º–æ–∂–µ–º –æ—Ç–∫–∞—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é!**  

---

üìå **–ü–æ—á–µ–º—É –ù–ï –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?**  
- **Command** ‚Üí –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤ –æ–±—ä–µ–∫—Ç, –Ω–æ –ù–ï –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è.  
- **State** ‚Üí —É–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –æ–±—ä–µ–∫—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –Ω–æ –ù–ï –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ.  
- **Observer** ‚Üí —Å–æ–∑–¥–∞—ë—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å "–æ–¥–∏–Ω –∫–æ –º–Ω–æ–≥–∏–º", —É–≤–µ–¥–æ–º–ª—è—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö, –Ω–æ –ù–ï –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è.  

