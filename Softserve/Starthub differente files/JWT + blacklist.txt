## üîß –¶–µ–ª—å

–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å logout —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º **JWT** + **blacklist**, —á—Ç–æ–±—ã —Ç–æ–∫–µ–Ω —Ç–µ—Ä—è–ª —Å–∏–ª—É –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞.
---
## ‚úÖ –≠—Ç–∞–ø—ã —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
---
### üîπ 1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
```bash
pip install djangorestframework-simplejwt
```
---
### üîπ 2. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ blacklist –≤ `settings.py`

```python
INSTALLED_APPS = [
    ...
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
]
```
---
### üîπ 3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å JWT-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ `settings.py`
```python
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}
```
---
### üîπ 4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã SimpleJWT (–≤ `settings.py`)
```python
from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),  # –∏–ª–∏ 15-30 –º–∏–Ω
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
}
```
'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5):
–ß—Ç–æ —ç—Ç–æ? –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ access-—Ç–æ–∫–µ–Ω–∞. –≠—Ç–æ —Ç–æ—Ç —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ API.
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç? –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç, —á—Ç–æ access-—Ç–æ–∫–µ–Ω –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –≤—Å–µ–≥–æ 5 –º–∏–Ω—É—Ç. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω "–∏—Å–ø–æ—Ä—Ç–∏—Ç—Å—è", –∏ –≤—ã –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API. –≠—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: –µ—Å–ª–∏ –µ–≥–æ —É–∫—Ä–∞–¥—É—Ç, —É –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞ –±—É–¥–µ—Ç –æ—á–µ–Ω—å –º–∞–ª–æ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã –∏–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è.

'REFRESH_TOKEN_LIFETIME': timedelta(days=1):
–ß—Ç–æ —ç—Ç–æ? –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ refresh-—Ç–æ–∫–µ–Ω–∞. –≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ access-—Ç–æ–∫–µ–Ω–∞.
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç? –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç, —á—Ç–æ refresh-—Ç–æ–∫–µ–Ω –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 1 –¥–µ–Ω—å. –û–Ω –≤—ã–¥–∞—ë—Ç—Å—è —Ä–µ–∂–µ –∏ –∏–º–µ–µ—Ç –±–æ–ª—å—à–∏–π —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è. –û–Ω –º–µ–Ω–µ–µ –æ–ø–∞—Å–µ–Ω, —á–µ–º access-—Ç–æ–∫–µ–Ω, —Ç–∞–∫ –∫–∞–∫ —Å–∞–º –ø–æ —Å–µ–±–µ –Ω–µ –¥–∞—ë—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ API, –Ω–æ –µ–≥–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω—É–∂–Ω–æ –±–µ—Ä–µ—á—å.

'ROTATE_REFRESH_TOKENS': False:
–ß—Ç–æ —ç—Ç–æ? –ü–æ–≤–æ—Ä–æ—Ç refresh-—Ç–æ–∫–µ–Ω–æ–≤.
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç? –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ False (–∫–∞–∫ –∑–¥–µ—Å—å) refresh-—Ç–æ–∫–µ–Ω –æ—Å—Ç–∞—ë—Ç—Å—è —Ç–µ–º –∂–µ –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ —Å—Ä–æ–∫–∞. –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ True –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ refresh-—Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ access-—Ç–æ–∫–µ–Ω–∞, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –∏ –Ω–æ–≤—ã–π refresh-—Ç–æ–∫–µ–Ω. –≠—Ç–æ –ø–æ–≤—ã—à–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, —Ç–∞–∫ –∫–∞–∫ –∫–∞–∂–¥—ã–π —Ç–æ–∫–µ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.

'BLACKLIST_AFTER_ROTATION': True:
–ß—Ç–æ —ç—Ç–æ? –≠—Ç–æ –Ω–∞–ø—Ä—è–º—É—é —Å–≤—è–∑–∞–Ω–æ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –ø—É–Ω–∫—Ç–æ–º.
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç? –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ True (–∫–∞–∫ –∑–¥–µ—Å—å) —Å—Ç–∞—Ä—ã–π refresh-—Ç–æ–∫–µ–Ω –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ "—á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫" (token_blacklist), –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–æ–≤—ã–π. –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —Å—Ç–∞—Ä—ã–π —Ç–æ–∫–µ–Ω –±–æ–ª—å—à–µ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. –í–∞–∂–Ω–æ: —ç—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ 'ROTATE_REFRESH_TOKENS' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ True.

'AUTH_HEADER_TYPES': ('Bearer',):
–ß—Ç–æ —ç—Ç–æ? –¢–∏–ø –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ HTTP-–∑–∞–ø—Ä–æ—Å–∞.
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç? –£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ access-—Ç–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º Bearer. –ù–∞–ø—Ä–∏–º–µ—Ä: Authorization: Bearer <–≤–∞—à-—Ç–æ–∫–µ–Ω>. –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∏ –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞.

'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',):
–ß—Ç–æ —ç—Ç–æ? –ö–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤.
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç? –ì–æ–≤–æ—Ä–∏—Ç Simple JWT, —á—Ç–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è access-—Ç–æ–∫–µ–Ω–æ–≤ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–ª–∞—Å—Å AccessToken. –≠—Ç–æ –±–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞, –∫–æ—Ç–æ—Ä—É—é –æ–±—ã—á–Ω–æ –Ω–µ –º–µ–Ω—è—é—Ç.

---

### üîπ 5. –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤

```bash
python manage.py migrate
```

---

### üîπ 6. –î–æ–±–∞–≤–∏—Ç—å –≤ `urls.py` —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã JWT

–í —Ñ–∞–π–ª–µ `config/urls.py`:

```python
from django.urls import path, include
from rest_framework_simplejwt.views import (
    TokenObtainPairView,
    TokenRefreshView,
)

urlpatterns = [
    ...
    path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),
    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),
    path('api/', include('users.urls')),  # –µ—Å–ª–∏ —Ç—ã –≤—ã–Ω–µ—Å–µ—à—å —Å–≤–æ–∏ URL'—ã
]
```

---

### üîπ 7. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å logout —Å blacklist

–°–æ–∑–¥–∞–π –≤ `users/views.py` –Ω–æ–≤—ã–π View:

```python
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.permissions import IsAuthenticated
from rest_framework import status
from rest_framework_simplejwt.tokens import RefreshToken
from rest_framework_simplejwt.token_blacklist.models import BlacklistedToken, OutstandingToken

class LogoutView(APIView):
    permission_classes = [IsAuthenticated]

    def post(self, request):
        try:
            refresh_token = request.data["refresh"]
            token = RefreshToken(refresh_token)
            token.blacklist()
            return Response({"detail": "Logout successful."}, status=status.HTTP_205_RESET_CONTENT)
        except Exception as e:
            return Response({"error": str(e)}, status=status.HTTP_400_BAD_REQUEST)
```

---

### üîπ 8. –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç logout

–í `users/urls.py` (—Å–æ–∑–¥–∞–π, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç):

```python
from django.urls import path
from .views import LogoutView

urlpatterns = [
    path('logout/', LogoutView.as_view(), name='logout'),
]
```

---

### üîπ 9. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å logout —á–µ—Ä–µ–∑ Postman

1. –ü–æ–ª—É—á–∏ `access` –∏ `refresh` —á–µ—Ä–µ–∑:

   * `POST –Ω–∞ http://localhost:8000/api/auth/token/`
   * –¢–µ–ª–æ:

     ```json
     {
       "email": "test@email.com",
       "password": "test123456"
     }
     ```

2. –û—Ç–ø—Ä–∞–≤—å `POST` –Ω–∞ `http://localhost:8000/api/logout/`:

   * –í headers:

     ```
     Authorization: Bearer <access_token>
     ```
   * –í —Ç–µ–ª–µ:

     ```json
     {
       "refresh": "<refresh_token>"
     }
     ```

–ï—Å–ª–∏ –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî –ø–æ–ª—É—á–∏—à—å:

```json
{
  "detail": "Logout successful."
}
```

–ï—Å–ª–∏ –ø–æ–ø—Ä–æ–±—É–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å refresh ‚Äî –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ `Token is blacklisted`.

---

## üì¶ –ü–æ–ª–Ω—ã–π –∫–æ–¥

### üîπ `settings.py` (—Ñ—Ä–∞–≥–º–µ–Ω—Ç)

```python
INSTALLED_APPS = [
    ...
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
}
```

---

### üîπ `config/urls.py`

```python
from django.contrib import admin
from django.urls import path, include
from rest_framework_simplejwt.views import (
    TokenObtainPairView,
    TokenRefreshView,
)

urlpatterns = [
    path('admin/', admin.site.urls),
    path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),
    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),
    path('api/', include('users.urls')),
]
```

---

### üîπ `users/urls.py`

```python
from django.urls import path
from .views import LogoutView

urlpatterns = [
    path('logout/', LogoutView.as_view(), name='logout'),
]
```

---

### üîπ `users/views.py`

```python
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.permissions import IsAuthenticated
from rest_framework import status
from rest_framework_simplejwt.tokens import RefreshToken

class LogoutView(APIView):
    permission_classes = [IsAuthenticated]

    def post(self, request):
        try:
            refresh_token = request.data["refresh"]
            token = RefreshToken(refresh_token)
            token.blacklist()
            return Response({"detail": "Logout successful."}, status=status.HTTP_205_RESET_CONTENT)
        except Exception as e:
            return Response({"error": str(e)}, status=status.HTTP_400_BAD_REQUEST)
```

---

## ‚úÖ –ì–æ—Ç–æ–≤–æ!

–¢—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞–ª:

* JWT-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —Å `access` –∏ `refresh`
* –ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ (blacklist) —Ç–æ–∫–µ–Ω–æ–≤
* –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π `logout`

–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å!

–°–µ–π—á–∞—Å –æ–±—ä—è—Å–Ω—é, **–≥–¥–µ –∏ –∫–∞–∫ SimpleJWT —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–æ–∫–µ–Ω—ã –≤ –ë–î** –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç **blacklist**, –æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ —Ç–æ, —á—Ç–æ –º—ã –ø–æ–¥–∫–ª—é—á–∏–ª–∏ `rest_framework_simplejwt.token_blacklist`.

---

## üóÇ –ì–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –ë–î?

–ö–æ–≥–¥–∞ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å `RefreshToken()` –∏ –≤—ã–∑—ã–≤–∞–µ—à—å –º–µ—Ç–æ–¥ `.blacklist()`, —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ **—Ç–∞–±–ª–∏—Ü—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö**, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º `token_blacklist`.

### üß± –ö–∞–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞—ë—Ç SimpleJWT:

–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã:

```bash
python manage.py migrate
```

–≤ –±–∞–∑–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã:

1. **`outstandingtoken`** ‚Äì –∑–¥–µ—Å—å —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è **–≤—Å–µ –≤—ã–¥–∞–Ω–Ω—ã–µ refresh-—Ç–æ–∫–µ–Ω—ã**.
2. **`blacklistedtoken`** ‚Äì –∑–¥–µ—Å—å —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è **–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ refresh-—Ç–æ–∫–µ–Ω—ã**.

---

## üîÑ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?

### ‚úÖ 1. –í—ã–¥–∞—á–∞ refresh —Ç–æ–∫–µ–Ω–∞ (`/api/token/`)

–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–æ–≥–∏–Ω–∏—Ç—Å—è, SimpleJWT:

* —Å–æ–∑–¥–∞—ë—Ç refresh-—Ç–æ–∫–µ–Ω (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
* —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ —Ç–∞–±–ª–∏—Ü—É `outstandingtoken` (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ `token_blacklist`)

```python
# –≠—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∞–º SimpleJWT –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ç–æ–∫–µ–Ω–∞
```

### ‚ùå 2. Logout (`POST /api/logout/`)

–ö–æ–≥–¥–∞ —Ç—ã –≤—ã–∑—ã–≤–∞–µ—à—å `token.blacklist()` –≤ –∫–æ–¥–µ:

```python
token = RefreshToken(refresh_token)
token.blacklist()
```

–û–Ω:

* –∏—â–µ—Ç —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –≤ `OutstandingToken`
* —Å–æ–∑–¥–∞—ë—Ç —Å–≤—è–∑–∞–Ω–Ω—ã–π `BlacklistedToken`

–¢–µ–ø–µ—Ä—å —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω —Å—á–∏—Ç–∞–µ—Ç—Å—è **–Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º**.

---

## üì¶ –ì–¥–µ –∏–º–µ–Ω–Ω–æ –≤ –∫–æ–¥–µ –≤—Å—ë —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è?

–í–Ω—É—Ç—Ä–∏ SimpleJWT:

```python
# –ø—Ä–∏ –≤—ã–∑–æ–≤–µ .blacklist()
from rest_framework_simplejwt.token_blacklist.models import BlacklistedToken

def blacklist(self):
    if not settings.SIMPLE_JWT['BLACKLIST_AFTER_ROTATION']:
        raise TokenError(_('Blacklisting is not enabled'))

    BlacklistedToken.objects.create(token=self)
```

---

## üîê –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞?

–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç `refresh` –∏–ª–∏ `access`:

* JWT-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å—å
* –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
* –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω ‚Äî **refresh**, –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Ç–∞–∫–∂–µ:

  * –µ—Å—Ç—å –ª–∏ –æ–Ω –≤ `OutstandingToken`
  * **–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –æ–Ω –≤ `BlacklistedToken`**

–ï—Å–ª–∏ –æ–Ω –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ ‚Äî –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞: `Token is blacklisted`.

---

## üìå –ò—Ç–æ–≥–æ

| –¢–∞–±–ª–∏—Ü–∞            | –°–æ–¥–µ—Ä–∂–∏—Ç                                              |
| ------------------ | ----------------------------------------------------- |
| `outstandingtoken` | –í—Å–µ –≤—ã–¥–∞–Ω–Ω—ã–µ refresh —Ç–æ–∫–µ–Ω—ã                           |
| `blacklistedtoken` | –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ refresh —Ç–æ–∫–µ–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ logout) |

---

### –•–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ –≤ –ë–î?

–í—ã–ø–æ–ª–Ω–∏ –≤ Django shell:

```bash
python manage.py shell
```

```python
from rest_framework_simplejwt.token_blacklist.models import OutstandingToken, BlacklistedToken

# –í—Å–µ –≤—ã–¥–∞–Ω–Ω—ã–µ refresh —Ç–æ–∫–µ–Ω—ã:
OutstandingToken.objects.all()

# –í—Å–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ:
BlacklistedToken.objects.all()
```

---

–•–æ—á–µ—à—å ‚Äî –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å, –∫–∞–∫ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∏ —Ç–æ–∫–µ–Ω—ã —á–µ—Ä–µ–∑ Django Admin.
