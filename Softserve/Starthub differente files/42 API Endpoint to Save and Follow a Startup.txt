#42 [Save Follow] API Endpoint to Save/Follow a Startup

Description:
Develop an API endpoint that allows investors to save or follow startups. This endpoint should handle POST requests where the investor can pass the startup‚Äôs ID to save.

Technical Steps:

Create a new endpoint in your Django views (e.g., POST /api/startups/{startup_id}/save).
In the view, check if the startup exists and if the investor has already saved it.
If not already saved, create a new InvestorStartup instance.
Return a success response indicating the startup has been successfully saved.

–û—Ç–ª–∏—á–Ω–æ–µ —É—Ç–æ—á–Ω–µ–Ω–∏–µ üëç
–¢—ã –∞–±—Å–æ–ª—é—Ç–Ω–æ –ø—Ä–∞–≤ ‚Äî –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –ø—Ä–æ **‚Äú—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–º‚Äù** –º–∞–ª–æ –ø–æ–º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ `views.py`.
–ß—Ç–æ–±—ã —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–ª–æ, –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å **–º–æ–¥–µ–ª—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞**, **—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä**, –∏ –∏–Ω–æ–≥–¥–∞ **urls** (–µ—Å–ª–∏ —Ö–æ—Ç–∏–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç ¬´–º–æ–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã¬ª).

–Ø —Å–æ–±–µ—Ä—É —Ç–µ–±–µ –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ **–≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π** (—Ñ–∞–π–ª—ã –∏ –∫–æ–¥), —á—Ç–æ–±—ã –ø–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è —É —Ç–µ–±—è –≤—Å—ë —Ä–∞–±–æ—Ç–∞–ª–æ ¬´–∏–∑ –∫–æ—Ä–æ–±–∫–∏¬ª.

---

# üîß –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ —Ñ–∞–π–ª–∞–º

---

## 1. `backend/profiles/models.py`

–î–æ–±–∞–≤–ª—è–µ–º —Å–≤—è–∑—å ManyToMany –¥–ª—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.

```python
from django.db import models
from django.conf import settings
from projects.models import StartupProject  # üëà –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞

class InvestorProfile(models.Model):
    user = models.OneToOneField(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    company_name = models.CharField(max_length=255)

    # üëá –ù–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
    saved_projects = models.ManyToManyField(
        StartupProject,
        related_name="saved_by_investors",
        blank=True
    )

    def __str__(self):
        return self.company_name
```

---

## 2. `backend/projects/serializers.py`

–¢–≤–æ–π —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä **ProjectSerializer** –º–µ–Ω—è—Ç—å –Ω–µ –Ω–∞–¥–æ, –æ–Ω —É–∂–µ –ø–æ–¥—Ö–æ–¥–∏—Ç ‚úÖ
–ù–æ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å **–µ—â—ë –æ–¥–∏–Ω —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä** ‚Äî —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —É –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞.

```python
from rest_framework import serializers
from .models import StartupProject

class ProjectSerializer(serializers.ModelSerializer):
    status = serializers.CharField(source="status.status", read_only=True)
    startup_name = serializers.CharField(source="startup.company_name", read_only=True)
    investor_name = serializers.CharField(
        source="investor.company_name", read_only=True, default=None
    )

    class Meta:
        model = StartupProject
        fields = [
            "id",
            "subject",
            "idea",
            "description",
            "website",
            "investment_needed",
            "views_count",
            "created_at",
            "updated_at",
            "status",
            "startup_name",
            "investor_name",
        ]
```

---

## 3. `backend/profiles/serializers.py`

–î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞.

```python
from rest_framework import serializers
from .models import InvestorProfile
from projects.serializers import ProjectSerializer

class InvestorProfileSerializer(serializers.ModelSerializer):
    # üëá –í–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
    saved_projects = ProjectSerializer(many=True, read_only=True)

    class Meta:
        model = InvestorProfile
        fields = ["id", "company_name", "saved_projects"]
```

---

## 4. `backend/projects/views.py`

(–Ø —Ç–µ–±–µ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª, –Ω–æ –ø—Ä–∏–≤–æ–∂—É –ø–æ–ª–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç.)

```python
from rest_framework import status, viewsets
from rest_framework.decorators import action
from rest_framework.permissions import IsAuthenticated
from rest_framework.response import Response

from .models import StartupProject
from .serializers import ProjectSerializer
from profiles.models import InvestorProfile


class ProjectViewSet(viewsets.ModelViewSet):
    """
    ViewSet for listing, retrieving, and following projects.
    """

    queryset = StartupProject.objects.all()
    serializer_class = ProjectSerializer
    permission_classes = [IsAuthenticated]

    @action(detail=True, methods=["post"], url_path="follow")
    def follow_project(self, request, pk=None):
        """Investor saves project."""
        try:
            investor_profile = InvestorProfile.objects.get(user=request.user)
            project = self.get_object()
            investor_profile.saved_projects.add(project)
            return Response(
                {"message": f"Project {project.id} has been saved."},
                status=status.HTTP_201_CREATED,
            )
        except InvestorProfile.DoesNotExist:
            return Response(
                {"error": "You must be an investor to save projects."},
                status=status.HTTP_400_BAD_REQUEST,
            )

    @action(detail=True, methods=["post"], url_path="unfollow")
    def unfollow_project(self, request, pk=None):
        """Investor removes project from saved."""
        try:
            investor_profile = InvestorProfile.objects.get(user=request.user)
            project = self.get_object()
            investor_profile.saved_projects.remove(project)
            return Response(
                {"message": f"Project {project.id} removed from saved."},
                status=status.HTTP_200_OK,
            )
        except InvestorProfile.DoesNotExist:
            return Response(
                {"error": "You must be an investor to remove saved projects."},
                status=status.HTTP_400_BAD_REQUEST,
            )
```

---

## 5. `backend/profiles/views.py`

–î–æ–±–∞–≤–ª—è–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞.

```python
from rest_framework import viewsets
from rest_framework.permissions import IsAuthenticated
from rest_framework.decorators import action
from rest_framework.response import Response

from .models import InvestorProfile
from .serializers import InvestorProfileSerializer


class InvestorProfileViewSet(viewsets.ModelViewSet):
    queryset = InvestorProfile.objects.all()
    serializer_class = InvestorProfileSerializer
    permission_classes = [IsAuthenticated]

    @action(detail=False, methods=["get"], url_path="me")
    def me(self, request):
        """Get current investor profile with saved projects."""
        try:
            investor_profile = InvestorProfile.objects.get(user=request.user)
            serializer = InvestorProfileSerializer(investor_profile)
            return Response(serializer.data)
        except InvestorProfile.DoesNotExist:
            return Response(
                {"error": "You are not registered as an investor."},
                status=400,
            )
```

---

## 6. `backend/profiles/urls.py`

–ü–æ–¥–∫–ª—é—á–∞–µ–º `InvestorProfileViewSet`.

```python
from django.urls import include, path
from rest_framework.routers import DefaultRouter
from .views import InvestorProfileViewSet

router = DefaultRouter()
router.register(r"investors", InvestorProfileViewSet, basename="investor")

urlpatterns = [
    path("", include(router.urls)),
]
```

---

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ Postman

1. **–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω)**
   –õ–æ–≥–∏–Ω–∏—à—å—Å—è –∏ –≤—Å—Ç–∞–≤–ª—è–µ—à—å `Authorization: Bearer <token>`.

2. **–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤**

   ```
   GET http://127.0.0.1:8000/api/projects/
   ```

3. **–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–µ–∫—Ç**

   ```
   POST http://127.0.0.1:8000/api/projects/1/follow/
   ```

4. **–£–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç**

   ```
   POST http://127.0.0.1:8000/api/projects/1/unfollow/
   ```

5. **–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã**

   ```
   GET http://127.0.0.1:8000/api/investors/me/
   ```

üëâ –í –æ—Ç–≤–µ—Ç —Ç—ã –ø–æ–ª—É—á–∏—à—å JSON –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫–æ–≥–æ –≤–∏–¥–∞:

```json
{
  "id": 3,
  "company_name": "My Investor Inc",
  "saved_projects": [
    {
      "id": 1,
      "subject": "Project Alpha",
      "idea": "AI for healthcare",
      "investment_needed": 50000,
      "status": "Open",
      "startup_name": "HealthTech",
      "investor_name": null
    }
  ]
}
```

–û—Ç–ª–∏—á–Ω–æ üëå –¢–æ–≥–¥–∞ —è —Å–¥–µ–ª–∞—é –¥–ª—è —Ç–µ–±—è **–ø–æ–ª–Ω—ã–π diff –ø–æ —Ñ–∞–π–ª–∞–º** –≤ —Å—Ç–∏–ª–µ:

* ‚úÇÔ∏è —Å—Ç–∞—Ä—ã–π –∫–æ–¥
* ‚ûï –Ω–æ–≤—ã–π –∫–æ–¥

–∏ –¥–∞–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –∑–∞—á–µ–º –∏–º–µ–Ω–Ω–æ —ç—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ.
–¢–∞–∫ —Ç—ã —Å–º–æ–∂–µ—à—å –∞–∫–∫—É—Ä–∞—Ç–Ω–æ ¬´–ø—Ä–∏–∫–ª–µ–∏—Ç—å¬ª –≤—Å—ë –≤ —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç.

---

# üîÑ Diff –ø–æ —Ñ–∞–π–ª–∞–º

---

## 1. `backend/profiles/models.py`

### –ë—ã–ª–æ (—É–ø—Ä–æ—â—ë–Ω–Ω–æ):

```python
from django.db import models
from django.conf import settings

class InvestorProfile(models.Model):
    user = models.OneToOneField(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    company_name = models.CharField(max_length=255)

    def __str__(self):
        return self.company_name
```

### –°—Ç–∞–ª–æ:

```python
from django.db import models
from django.conf import settings
from projects.models import StartupProject   # ‚ûï –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç—ã

class InvestorProfile(models.Model):
    user = models.OneToOneField(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    company_name = models.CharField(max_length=255)

    # ‚ûï —Å–≤—è–∑—å ¬´—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞¬ª
    saved_projects = models.ManyToManyField(
        StartupProject,
        related_name="saved_by_investors",
        blank=True
    )

    def __str__(self):
        return self.company_name
```

üí° –ó–¥–µ—Å—å –º—ã –¥–æ–±–∞–≤–∏–ª–∏ `saved_projects`, —á—Ç–æ–±—ã —Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Å—Ç–∞—Ä—Ç–∞–ø—ã.

---

## 2. `backend/projects/serializers.py`

### –ë—ã–ª–æ:

```python
from rest_framework import serializers
from .models import StartupProject

class ProjectSerializer(serializers.ModelSerializer):
    status = serializers.CharField(source="status.status", read_only=True)
    startup_name = serializers.CharField(source="startup.company_name", read_only=True)
    investor_name = serializers.CharField(
        source="investor.company_name", read_only=True, default=None
    )

    class Meta:
        model = StartupProject
        fields = [
            "id",
            "subject",
            "idea",
            "description",
            "website",
            "investment_needed",
            "views_count",
            "created_at",
            "updated_at",
            "status",
            "startup_name",
            "investor_name",
        ]
```

### –°—Ç–∞–ª–æ:

```python
from rest_framework import serializers
from .models import StartupProject

class ProjectSerializer(serializers.ModelSerializer):
    status = serializers.CharField(source="status.status", read_only=True)
    startup_name = serializers.CharField(source="startup.company_name", read_only=True)
    investor_name = serializers.CharField(
        source="investor.company_name", read_only=True, default=None
    )

    class Meta:
        model = StartupProject
        fields = [
            "id",
            "subject",
            "idea",
            "description",
            "website",
            "investment_needed",
            "views_count",
            "created_at",
            "updated_at",
            "status",
            "startup_name",
            "investor_name",
        ]
```

‚ö†Ô∏è –ó–¥–µ—Å—å –∏–∑–º–µ–Ω–µ–Ω–∏–π **–Ω–µ—Ç**. –ü—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å.
(–ò—Å–ø–æ–ª—å–∑—É–µ–º —ç—Ç–æ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.)

---

## 3. `backend/profiles/serializers.py`

### –ë—ã–ª–æ (–¥–æ–ø—É—Å—Ç–∏–º, —É —Ç–µ–±—è –ø—É—Å—Ç–æ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä):

```python
from rest_framework import serializers
from .models import InvestorProfile

class InvestorProfileSerializer(serializers.ModelSerializer):
    class Meta:
        model = InvestorProfile
        fields = ["id", "company_name"]
```

### –°—Ç–∞–ª–æ:

```python
from rest_framework import serializers
from .models import InvestorProfile
from projects.serializers import ProjectSerializer   # ‚ûï –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã

class InvestorProfileSerializer(serializers.ModelSerializer):
    # ‚ûï –≤—ã–≤–æ–¥–∏–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
    saved_projects = ProjectSerializer(many=True, read_only=True)

    class Meta:
        model = InvestorProfile
        fields = ["id", "company_name", "saved_projects"]
```

üí° –¢–µ–ø–µ—Ä—å —É –ø—Ä–æ—Ñ–∏–ª—è –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.

---

## 4. `backend/projects/views.py`

### –ë—ã–ª–æ (–∫—É—Å–æ–∫ –±–µ–∑ follow/unfollow):

```python
from rest_framework import viewsets
from rest_framework.permissions import IsAuthenticated

from .models import StartupProject
from .serializers import ProjectSerializer

class ProjectViewSet(viewsets.ModelViewSet):
    queryset = StartupProject.objects.all()
    serializer_class = ProjectSerializer
    permission_classes = [IsAuthenticated]
```

### –°—Ç–∞–ª–æ (–ø–æ–ª–Ω–æ—Å—Ç—å—é):

```python
from rest_framework import status, viewsets
from rest_framework.decorators import action
from rest_framework.permissions import IsAuthenticated
from rest_framework.response import Response

from .models import StartupProject
from .serializers import ProjectSerializer
from profiles.models import InvestorProfile   # ‚ûï –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞


class ProjectViewSet(viewsets.ModelViewSet):
    """
    ViewSet for listing, retrieving, and following projects.
    """

    queryset = StartupProject.objects.all()
    serializer_class = ProjectSerializer
    permission_classes = [IsAuthenticated]

    @action(detail=True, methods=["post"], url_path="follow")
    def follow_project(self, request, pk=None):
        """Investor saves project."""
        try:
            investor_profile = InvestorProfile.objects.get(user=request.user)
            project = self.get_object()
            investor_profile.saved_projects.add(project)  # ‚ûï —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            return Response(
                {"message": f"Project {project.id} has been saved."},
                status=status.HTTP_201_CREATED,
            )
        except InvestorProfile.DoesNotExist:
            return Response(
                {"error": "You must be an investor to save projects."},
                status=status.HTTP_400_BAD_REQUEST,
            )

    @action(detail=True, methods=["post"], url_path="unfollow")
    def unfollow_project(self, request, pk=None):
        """Investor removes project from saved."""
        try:
            investor_profile = InvestorProfile.objects.get(user=request.user)
            project = self.get_object()
            investor_profile.saved_projects.remove(project)  # ‚ûï —É–±–∏—Ä–∞–µ–º
            return Response(
                {"message": f"Project {project.id} removed from saved."},
                status=status.HTTP_200_OK,
            )
        except InvestorProfile.DoesNotExist:
            return Response(
                {"error": "You must be an investor to remove saved projects."},
                status=status.HTTP_400_BAD_REQUEST,
            )
```

---

## 5. `backend/profiles/views.py`





–û—Ç–ª–∏—á–Ω–æ, –¥–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º –≤–µ—Å—å —Ñ–∞–π–ª `backend/projects/views.py` –ø–æ—à–∞–≥–æ–≤–æ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ –∏ –ø—Ä–æ—Å—Ç–æ, —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º **–∫–∞–∫, —á—Ç–æ –∏ –ø–æ—á–µ–º—É**, –∏ –ø–æ—Ç–æ–º —Ä–∞–∑–±–µ—Ä—ë–º, –∫—É–¥–∞ –∏ –∫–∞–∫ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –∏ –∫–∞–∫ –∏—Ö –ø–æ–ª—É—á–∏—Ç—å. –í –∫–æ–Ω—Ü–µ –æ–±—Å—É–¥–∏–º –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è Postman.

---

## 1Ô∏è‚É£ –ò–º–ø–æ—Ä—Ç—ã

```python
from django.db import transaction
from rest_framework import status, viewsets
from rest_framework.decorators import action
from rest_framework.permissions import IsAuthenticated, BasePermission
from rest_framework.response import Response
from django.db.models import F

from .serializers import ProjectSerializer
from .models import StartupProject
from profiles.models import InvestorProfile
```

**–†–∞–∑–±–æ—Ä:**

* `transaction` ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞—Ç–æ–º–∞—Ä–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ë–î, —á—Ç–æ–±—ã `add()` –∏–ª–∏ `remove()` –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–ª–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å –≤–æ–æ–±—â–µ. –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥—ë—Ç –Ω–µ —Ç–∞–∫.
* `status` ‚Äî –Ω–∞–±–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö HTTP-—Å—Ç–∞—Ç—É—Å–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 200, 201, 400, 404), —á—Ç–æ–±—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–¥—ã –∫–ª–∏–µ–Ω—Ç—É.
* `viewsets` ‚Äî DRF ViewSet –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ API-–æ–ø–µ—Ä–∞—Ü–∏–π (list, retrieve, create, update, delete) –¥–ª—è –æ–¥–Ω–æ–π –º–æ–¥–µ–ª–∏ –≤ –æ–¥–Ω–æ–º –∫–ª–∞—Å—Å–µ.
* `action` ‚Äî –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä DRF, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π endpoint –≤ ViewSet, –Ω–∞–ø—Ä–∏–º–µ—Ä `/follow` –∏ `/unfollow`.
* `IsAuthenticated` ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π permission DRF, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ª–æ–≥–∏–Ω–µ–Ω.
* `BasePermission` ‚Äî –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ permission.
* `Response` ‚Äî –æ–±—ä–µ–∫—Ç –æ—Ç–≤–µ—Ç–∞ DRF, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å JSON —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ —Å—Ç–∞—Ç—É—Å–æ–º.
* `F` ‚Äî –æ–±—ä–µ–∫—Ç Django –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—è –≤ –ë–î –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á—ë—Ç—á–∏–∫ `views_count`).
* `ProjectSerializer` ‚Äî —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è –º–æ–¥–µ–ª–∏ `StartupProject`, –Ω—É–∂–µ–Ω –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
* `StartupProject` –∏ `InvestorProfile` ‚Äî –º–æ–¥–µ–ª–∏ –∏–∑ —Ç–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º.

---

## 2Ô∏è‚É£ Custom Permission: `IsInvestor`

```python
class IsInvestor(BasePermission):
    def has_permission(self, request, view):
        return hasattr(request.user, 'investorprofile')
```

**–†–∞–∑–±–æ—Ä:**

* –°–æ–∑–¥–∞—ë–º —Å–≤–æ—ë –ø—Ä–∞–≤–∏–ª–æ –¥–æ—Å—Ç—É–ø–∞: —Ç–æ–ª—å–∫–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `follow` –∏ `unfollow`.
* `request.user` ‚Äî –æ–±—ä–µ–∫—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (User).
* `hasattr(request.user, 'investorprofile')` –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–≤—è–∑–∞–Ω–Ω—ã–π `InvestorProfile`.
* –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç `True` ‚Üí –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω, `False` ‚Üí –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω (403).

‚úÖ **–ü–æ—á–µ–º—É —Ç–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ:**
–≠—Ç–æ –ª—ë–≥–∫–∏–π –∏ —á–∏—Å—Ç—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–¥–µ–ª–∏—Ç—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –æ—Ç —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤. –ù–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —ç—Ç–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–æ–≤ ‚Äî permission —Å–∞–º –±–ª–æ–∫–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –Ω–∞ —É—Ä–æ–≤–Ω–µ ViewSet.

---

## 3Ô∏è‚É£ ProjectViewSet

```python
class ProjectViewSet(viewsets.ModelViewSet):
    """ViewSet for listing, retrieving, and subscribing to projects."""

    permission_classes = [IsAuthenticated, IsInvestor]
    queryset = StartupProject.objects.all()
    serializer_class = ProjectSerializer
```

**–†–∞–∑–±–æ—Ä:**

* –ù–∞—Å–ª–µ–¥—É–µ–º `ModelViewSet` ‚Äî –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ CRUD-–º–µ—Ç–æ–¥—ã.
* `permission_classes` ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ª–æ–≥–∏–Ω–µ–Ω **–∏** –∏–Ω–≤–µ—Å—Ç–æ—Ä.
* `queryset` ‚Äî –±–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–∑ –ë–î. –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (`list`, `retrieve`) –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å—Å—è –∫ –Ω–µ–º—É.
* `serializer_class` ‚Äî —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–∏ –≤ JSON.

---

## 4Ô∏è‚É£ –ú–µ—Ç–æ–¥ `list`

```python
def list(self, request, *args, **kwargs):
    queryset = self.get_queryset().order_by("-created_at")
    serializer = self.get_serializer(queryset, many=True)
    return Response(serializer.data)
```

**–†–∞–∑–±–æ—Ä:**

* `self.get_queryset()` ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç queryset, –∫–æ—Ç–æ—Ä—ã–π –º—ã —É–∫–∞–∑–∞–ª–∏ (`StartupProject.objects.all()`).
* `.order_by("-created_at")` ‚Äî —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è, –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –±—É–¥—É—Ç –ø–µ—Ä–≤—ã–º–∏.
* `self.get_serializer(queryset, many=True)` ‚Äî —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤.
* `Response(serializer.data)` ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º JSON —Å–æ –≤—Å–µ–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏.

‚úÖ **–ü–æ—á–µ–º—É —Ç–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ:** —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–¥–∞—á–∏ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ DRF.

---

## 5Ô∏è‚É£ –ú–µ—Ç–æ–¥ `retrieve`

```python
def retrieve(self, request, *args, **kwargs):
    project = self.get_object()
```

* `self.get_object()` ‚Äî –ø–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –ø–æ `pk` –∏–∑ URL.

```python
    StartupProject.objects.filter(pk=project.pk).update(
        views_count=F("views_count") + 1
    )
```

* –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ **–≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ SQL**, –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.

```python
    project.refresh_from_db(fields=["views_count"])
    serializer = self.get_serializer(project)
    return Response(serializer.data)
```

* –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –≤ –ø–∞–º—è—Ç–∏, —á—Ç–æ–±—ã —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏–ª –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ `views_count`.
* –í–æ–∑–≤—Ä–∞—â–∞–µ–º JSON —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–µ–∫—Ç–µ.

---

## 6Ô∏è‚É£ –ú–µ—Ç–æ–¥ `follow` (—Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–µ–∫—Ç –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–º)

```python
@action(detail=True, methods=["post"], url_path="follow")
def follow(self, request, pk=None):
    investor_profile = request.user.investorprofile
    project = self.get_object()
```

* `@action(detail=True)` ‚Äî —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ URL –±—É–¥–µ—Ç `/projects/<id>/follow/`.
* –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞.
* –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å.

```python
if investor_profile.saved_projects.filter(pk=project.pk).exists():
    serializer = ProjectSerializer(project)
    return Response(
        {"message": "Project is already saved.", "project": serializer.data},
        status=status.HTTP_200_OK,
    )
```

* –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, **–Ω–µ –¥—É–±–ª–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å**.

```python
with transaction.atomic():  # <-- ATOMIC TRANSACTION START
    investor_profile.saved_projects.add(project)
# <-- ATOMIC TRANSACTION END
```

* –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ `transaction.atomic()`, —á—Ç–æ–±—ã –ø—Ä–∏ –æ—à–∏–±–∫–µ –≤—Å—ë –æ—Ç–∫–∞—Ç–∏–ª–æ—Å—å.
* `add()` —Å–æ–∑–¥–∞—ë—Ç –∑–∞–ø–∏—Å—å –≤ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ `SavedProject`.

```python
serializer = ProjectSerializer(project)
return Response(
    {"message": f"Project {project.id} has been saved to your profile.",
     "project": serializer.data},
    status=status.HTTP_201_CREATED,
)
```

* –í–æ–∑–≤—Ä–∞—â–∞–µ–º JSON —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞.

‚úÖ **–ö—É–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**

* –í –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—É—é —Ç–∞–±–ª–∏—Ü—É `SavedProject`.
* –°—Ç–æ–ª–±—Ü—ã: `investor_id`, `project_id`, `saved_at`.
* –ß–µ—Ä–µ–∑ `ManyToManyField` `saved_projects` –º—ã –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã:

```python
investor_profile.saved_projects.all()
```

---

## 7Ô∏è‚É£ –ú–µ—Ç–æ–¥ `unfollow` (—É–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç)

```python
@action(detail=True, methods=["post"], url_path="unfollow")
def unfollow(self, request, pk=None):
    investor_profile = request.user.investorprofile
    project = self.get_object()
```

* –í—Å—ë –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ `follow`.

```python
with transaction.atomic():  # <-- ATOMIC TRANSACTION START
    investor_profile.saved_projects.remove(project)
# <-- ATOMIC TRANSACTION END
```

* `remove()` —É–¥–∞–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã `SavedProject`.

```python
serializer = ProjectSerializer(project)
return Response(
    {"message": f"Project {project.id} has been removed from your saved list.",
     "project": serializer.data},
    status=status.HTTP_200_OK,
)
```

* –í–æ–∑–≤—Ä–∞—â–∞–µ–º JSON —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞.

‚úÖ **–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤:**

```python
investor_profile.saved_projects.all()  # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç queryset –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
```

---

## 8Ô∏è‚É£ URL / –º–∞—Ä—à—Ä—É—Ç

–¢–∞–∫ –∫–∞–∫ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º **ViewSet —Å action**, –º–∞—Ä—à—Ä—É—Ç—ã –±—É–¥—É—Ç —Ç–∞–∫–∏–µ:

–ï—Å–ª–∏ –≤ `urls.py` —Ç—ã –ø–æ–¥–∫–ª—é—á–∏–ª ViewSet —á–µ—Ä–µ–∑ `DefaultRouter`:

```python
from rest_framework.routers import DefaultRouter
from .views import ProjectViewSet

router = DefaultRouter()
router.register(r'projects', ProjectViewSet, basename='project')

urlpatterns = router.urls
```

–¢–æ —Ç–æ–≥–¥–∞ **–º–∞—Ä—à—Ä—É—Ç—ã –±—É–¥—É—Ç:**

| Endpoint                   | –ú–µ—Ç–æ–¥ | –ß—Ç–æ –¥–µ–ª–∞–µ—Ç                                 |
| -------------------------- | ----- | ------------------------------------------ |
| `/projects/`               | GET   | –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ (`list`)              |
| `/projects/<id>/`          | GET   | –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ (`retrieve`)      |
| `/projects/<id>/follow/`   | POST  | –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞ (`follow`)  |
| `/projects/<id>/unfollow/` | POST  | –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö (`unfollow`) |

–í **Postman**:

* –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω—É–∂–Ω–∞ (JWT –∏–ª–∏ —Å–µ—Å—Å–∏—è, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–≤–æ–µ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏).
* –û—Ç–ø—Ä–∞–≤–ª—è–µ—à—å `POST` –Ω–∞ `/projects/3/follow/` ‚Üí –ø—Ä–æ–µ–∫—Ç —Å `id=3` —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è.
* –û—Ç–ø—Ä–∞–≤–ª—è–µ—à—å `POST` –Ω–∞ `/projects/3/unfollow/` ‚Üí –ø—Ä–æ–µ–∫—Ç —Å `id=3` —É–¥–∞–ª–∏—Ç—Å—è.

---

–û—Ç–ª–∏—á–Ω–æ, –¥–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º —ç—Ç–æ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.

---

## 1Ô∏è‚É£ –ß—Ç–æ —Ç–∞–∫–æ–µ –∞—Ç–æ–º–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

**–ê—Ç–æ–º–∞—Ä–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è** (atomic operation) –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö ‚Äî —ç—Ç–æ –æ–ø–µ—Ä–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è **–∫–∞–∫ –µ–¥–∏–Ω–æ–µ —Ü–µ–ª–æ–µ**. –¢–æ –µ—Å—Ç—å:

* **–í—Å—ë —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ** ‚Üí –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
* **–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫** ‚Üí **–Ω–∏—á–µ–≥–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è**, –±–∞–∑–∞ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.

–ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è: **‚Äú–≤—Å—ë –∏–ª–∏ –Ω–∏—á–µ–≥–æ‚Äù**.

–ü—Ä–∏–º–µ—Ä –∏–∑ –∂–∏–∑–Ω–∏:

* –¢—ã –ø–µ—Ä–µ–≤–æ–¥–∏—à—å –¥–µ–Ω—å–≥–∏ —á–µ—Ä–µ–∑ –±–∞–Ω–∫.
* –° –∫–∞—Ä—Ç—ã —Å–ø–∏—Å–∞–ª–æ—Å—å 1000 –≥—Ä–Ω ‚Üí –Ω–∞ –∫–∞—Ä—Ç—É –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø—Ä–∏—à–ª–∏ 1000 –≥—Ä–Ω.
* –ï—Å–ª–∏ –¥–µ–Ω—å–≥–∏ –Ω–µ –¥–æ—à–ª–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—é, —Å–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–∂–µ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ.
* –î–µ–Ω—å–≥–∏ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª–∏—Å—å ‚Äî —ç—Ç–æ –∞—Ç–æ–º–∞—Ä–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è.

---

## 2Ô∏è‚É£ –ö–∞–∫ –æ–Ω–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ Django

–í Django –µ—Å—Ç—å `transaction.atomic()`:

```python
from django.db import transaction

with transaction.atomic():
    investor_profile.saved_projects.add(project)
```

–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:

1. Django –Ω–∞—á–∏–Ω–∞–µ—Ç **‚Äú—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é‚Äù** —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
2. –í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É `add()` ‚Äî —Å–æ–∑–¥–∞—ë—Ç –∑–∞–ø–∏—Å—å –≤ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ `SavedProject`.
3. –ï—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç ‚Üí —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è **–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è** (`commit`) –∏ –∑–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.
4. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞—Ä—É—à–µ–Ω `UniqueConstraint`) ‚Üí —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è **–æ—Ç–∫–∞—Ç—ã–≤–∞–µ—Ç—Å—è** (`rollback`), –Ω–∏—á–µ–≥–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.

---

## 3Ô∏è‚É£ –ü–æ—á–µ–º—É –∞—Ç–æ–º–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ª—É—á—à–µ, —á–µ–º try‚Ä¶except

–¢–≤–æ–π —Å—Ç–∞—Ä—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –≤—ã–≥–ª—è–¥–µ–ª —Ç–∞–∫:

```python
try:
    investor_profile.saved_projects.add(project)
except:
    return Response({"error": "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫"}, status=400)
```

–ü—Ä–æ–±–ª–µ–º—ã:

1. **try‚Ä¶except –ª–æ–≤–∏—Ç –æ—à–∏–±–∫–∏, –Ω–æ –Ω–µ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ—Ç —á–∞—Å—Ç–∏—á–Ω–æ –≤–Ω–µ—Å—ë–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è**.

   * –ï—Å–ª–∏ –∫–æ–¥ —Å–ª–æ–∂–Ω—ã–π –∏ –≤ –æ–¥–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–µ–π—Å—Ç–≤–∏–π —Å –±–∞–∑–æ–π, —á–∞—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–æ–∂–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å—Å—è, –∞ —á–∞—Å—Ç—å –Ω–µ—Ç ‚Üí –±–∞–∑–∞ —Å—Ç–∞–Ω–µ—Ç –Ω–µ–∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–π.
2. **–ù—É–∂–µ–Ω ‚Äú—Ä—É—á–Ω–æ–π‚Äù –∫–æ–Ω—Ç—Ä–æ–ª—å**. –¢—ã –¥–æ–ª–∂–µ–Ω —Å–∞–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ.
3. **–ù–µ—è–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫**. –î–∞–∂–µ –µ—Å–ª–∏ `add()` –±—Ä–æ—Å–∏—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.

–ü–ª—é—Å—ã `transaction.atomic()`:

* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–∞—Ç –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ.
* –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö **–Ω–µ –±—É–¥–µ—Ç –≤ –Ω–µ–∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏**.
* –ß—ë—Ç–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –±–ª–æ–∫ –∫–æ–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞—Ç–æ–º–∞—Ä–Ω—ã–º.

‚úÖ **–í—ã–≤–æ–¥:** atomic ‚Äî —ç—Ç–æ –Ω–∞–¥—ë–∂–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ, –æ—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

---

–ê–≥–∞, –¥–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º —ç—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é, —á—Ç–æ–±—ã —Å—Ç–∞–ª–æ –ø–æ–Ω—è—Ç–Ω–æ, **–æ—Ç–∫—É–¥–∞ –±–µ—Ä—É—Ç—Å—è –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã —É –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞**.

---

## 1Ô∏è‚É£ –ö–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤

–í —Ç–≤–æ—ë–º –∫–æ–¥–µ –≤ `InvestorProfile` –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞:

```python
saved_projects = models.ManyToManyField(
    'projects.StartupProject',
    through='projects.SavedProject',
)
```

–ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç:

1. `InvestorProfile` –∏ `StartupProject` —Å–≤—è–∑–∞–Ω—ã **–º–Ω–æ–≥–∏–µ –∫–æ –º–Ω–æ–≥–∏–º** —á–µ—Ä–µ–∑ —Ç–∞–±–ª–∏—Ü—É `SavedProject`.
2. –¢–∞–±–ª–∏—Ü–∞ `SavedProject` —Ö—Ä–∞–Ω–∏—Ç:

   * `investor` ‚Üí –∫–∞–∫–æ–π –∏–Ω–≤–µ—Å—Ç–æ—Ä —Å–æ—Ö—Ä–∞–Ω–∏–ª –ø—Ä–æ–µ–∫—Ç
   * `project` ‚Üí –∫–∞–∫–æ–π –ø—Ä–æ–µ–∫—Ç –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω
   * `saved_at` ‚Üí –¥–∞—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

–¢–æ –µ—Å—Ç—å –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–º, **–∫–∞–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª –∏–Ω–≤–µ—Å—Ç–æ—Ä**, —Ñ–∏–∑–∏—á–µ—Å–∫–∏ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü–µ `SavedProject`.

---

## 2Ô∏è‚É£ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤

Django –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç **–º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è `ManyToManyField`**.
–í —Ç–≤–æ—ë–º —Å–ª—É—á–∞–µ:

```python
investor_profile.saved_projects
```

* –≠—Ç–æ –æ–±—ä–µ–∫—Ç `RelatedManager`.
* –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∫ —Å–≤—è–∑–∞–Ω–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–∞–º.

–ù–∞–ø—Ä–∏–º–µ—Ä:

```python
investor_profile = InvestorProfile.objects.get(user=request.user)
saved_projects = investor_profile.saved_projects.all()
```

* `saved_projects` ‚Äî queryset —Å–æ –≤—Å–µ–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ —ç—Ç–æ—Ç –∏–Ω–≤–µ—Å—Ç–æ—Ä —Å–æ—Ö—Ä–∞–Ω–∏–ª.
* –ú–æ–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å, —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ `ProjectSerializer`:

```python
from .serializers import ProjectSerializer

serializer = ProjectSerializer(saved_projects, many=True)
return Response(serializer.data)
```

‚úÖ **–í—ã–≤–æ–¥:**

* –ú—ã –Ω–µ –¥–æ–±–∞–≤–ª—è–ª–∏ –Ω–æ–≤—ã–π –∫–æ–¥ –¥–ª—è ‚Äú–ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤‚Äù, –ø–æ—Ç–æ–º—É —á—Ç–æ Django —Å–∞–º —É–º–µ–µ—Ç —á–µ—Ä–µ–∑ `ManyToManyField`.
* –¢–∞–±–ª–∏—Ü–∞ `SavedProject` ‚Äî **—Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ**, –∞ `investor_profile.saved_projects.all()` ‚Äî **–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤**.

---

## 3Ô∏è‚É£ –ö–∞–∫ —ç—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –Ω–∞—à–∏–º `follow` endpoint

–ö–æ–≥–¥–∞ –º—ã –≤—ã–∑—ã–≤–∞–µ–º:

```python
investor_profile.saved_projects.add(project)
```

* Django —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ `SavedProject`.
* –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ `investor_profile.saved_projects.all()` **—Å—Ä–∞–∑—É –≤–∫–ª—é—á–∞–µ—Ç —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç**.

–ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, `remove(project)` —É–¥–∞–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –∏–∑ `SavedProject`, –∏ –ø—Ä–æ–µ–∫—Ç –±–æ–ª—å—à–µ –Ω–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ `all()`.

---


## 6. `backend/profiles/urls.py`

### –ë—ã–ª–æ:

```python
from django.urls import include, path
from rest_framework.routers import DefaultRouter
from .views import InvestorProfileViewSet

router = DefaultRouter()
router.register(r"investors", InvestorProfileViewSet)

urlpatterns = [
    path("", include(router.urls)),
]
```

### –°—Ç–∞–ª–æ (–¥–æ–±–∞–≤–∏–ª–∏ `basename` –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏):

```python
from django.urls import include, path
from rest_framework.routers import DefaultRouter
from .views import InvestorProfileViewSet

router = DefaultRouter()
router.register(r"investors", InvestorProfileViewSet, basename="investor")

urlpatterns = [
    path("", include(router.urls)),
]
```

–û–ë–™–Ø–°–ù–ï–ù–ò–ï –ö–û–î–ê:
–£ –º–µ–Ω—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∫–æ–¥—É, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –Ω–∞–ø–∏—Å–∞–ª.
1. –í —ç—Ç–æ–º –∫–æ–¥–µ:
class IsInvestor(BasePermission):
    def has_permission(self, request, view):
        return hasattr(request.user, 'investorprofile')
–ö–∞–∫ –∏ –æ—Ç–∫—É–¥–∞ –≤ request –±–µ—Ä—ë—Ç—Å—è "investorprofile", –Ω–∞–ª–∏—á–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è? –ö–∞–∫ —ç—Ç–æ—Ç –∞—Ç—Ä–∏–±—É—Ç –ø–æ–ø–∞–¥–∞–µ—Ç –≤ request?

üîπ –í–æ–ø—Ä–æ—Å 1
class IsInvestor(BasePermission):
    def has_permission(self, request, view):
        return hasattr(request.user, 'investorprofile')


üëâ request.user ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ Django.
Django (–∏ DRF) –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç –µ–≥–æ –≤ request, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ JWT, —Å–µ—Å—Å–∏—é, —Ç–æ–∫–µ–Ω –∏ —Ç.–¥.).

–£ —Ç–µ–±—è –µ—Å—Ç—å –º–æ–¥–µ–ª—å CustomUser (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å).

–ï—Å—Ç—å –º–æ–¥–µ–ª—å InvestorProfile, –∫–æ—Ç–æ—Ä–∞—è —Å–≤—è–∑–∞–Ω–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ OneToOneField.

class InvestorProfile(models.Model):
    user = models.OneToOneField(CustomUser, on_delete=models.CASCADE)
    ...


–ë–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–æ–π —Å–≤—è–∑–∏ Django –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç "–æ–±—Ä–∞—Ç–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç": request.user.investorprofile.

–¢–æ –µ—Å—Ç—å:

–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Üí –∏–Ω–≤–µ—Å—Ç–æ—Ä, —Ç–æ —É –Ω–µ–≥–æ –µ—Å—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–π InvestorProfile.

–ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –∞—Ç—Ä–∏–±—É—Ç–∞ investorprofile –Ω–µ –±—É–¥–µ—Ç.

–ò–º–µ–Ω–Ω–æ —ç—Ç–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ hasattr.

‚úÖ –ü–æ–ª—É—á–∞–µ—Ç—Å—è, —á—Ç–æ investorprofile –≤ request.user –±–µ—Ä—ë—Ç—Å—è –∏–∑ ORM-—Å–≤—è–∑–∏ OneToOne.

2. –í —ç—Ç–æ–º –∫–æ–¥–µ:
def list(self, request, *args, **kwargs):
        queryset = self.get_queryset().order_by("-created_at")
        serializer = self.get_serializer(queryset, many=True)
        return Response(serializer.data)
–ß—Ç–æ —Ç–∞–∫–æ–µ et_queryset? –û—Ç–∫—É–¥–∞ –æ–Ω –±–µ—Ä—ë—Ç –¥–∞–Ω–Ω—ã–µ? –ò–∑ self? –ü—Ä–∏ –≤—ã–∑–æ–≤–µ list –º—ã –¥–æ–ª–∂–Ω—ã —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å? Request? –ê —á—Ç–æ —Ç–∞–∫–æ–µ —Ç–æ–≥–¥–∞ self?

üîπ –í–æ–ø—Ä–æ—Å 2
def list(self, request, *args, **kwargs):
    queryset = self.get_queryset().order_by("-created_at")
    serializer = self.get_serializer(queryset, many=True)
    return Response(serializer.data)


list ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥ ViewSet-–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –º—ã –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å GET /projects/ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤).

self ‚Äî —ç—Ç–æ —Ç–µ–∫—É—â–∏–π –æ–±—ä–µ–∫—Ç ViewSet.
–ö–æ–≥–¥–∞ DRF –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å, –æ–Ω —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç —Ç–≤–æ–µ–≥–æ ViewSet –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —É –Ω–µ–≥–æ –Ω—É–∂–Ω—ã–π –º–µ—Ç–æ–¥ (list, retrieve, create –∏ —Ç.–¥.).

get_queryset() ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥ DRF, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ã—á–Ω–æ —Ç—ã –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—à—å –≤ ViewSet.
–ù–∞–ø—Ä–∏–º–µ—Ä:

def get_queryset(self):
    return StartupProject.objects.all()


–ó–¥–µ—Å—å –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã.

request ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π DRF –ø–µ—Ä–µ–¥–∞—ë—Ç –≤ –º–µ—Ç–æ–¥ (list(self, request, ...)).

üëâ –¢–æ –µ—Å—Ç—å –ø—Ä–∏ –≤—ã–∑–æ–≤–µ list —Ç–µ–±–µ –Ω–∏—á–µ–≥–æ –≤—Ä—É—á–Ω—É—é –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –Ω–µ –Ω–∞–¥–æ ‚Äî DRF –¥–µ–ª–∞–µ—Ç –≤—Å—ë —Å–∞–º:

–°–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç ViewSet ‚Üí —ç—Ç–æ –∏ –µ—Å—Ç—å self.

–ü–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å –≤ request.

–í—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ list.

3. –í —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ investor_profile = request.user.investorprofile –æ—Ç–∫—É–¥–∞ –±–µ—Ä—ë—Ç—Å—è investorprofile? –û–ø—è—Ç—å –∏–∑ –∑–∞–ø—Ä–æ—Å–∞? –ê –≤ –∑–∞–ø—Ä–æ—Å–µ –æ—Ç–∫—É–¥–∞ –±–µ—Ä—ë—Ç—Å—è —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ?

üîπ –í–æ–ø—Ä–æ—Å 3
investor_profile = request.user.investorprofile


–≠—Ç–æ —Ç–æ—Ç –∂–µ –º–µ—Ö–∞–Ω–∏–∑–º, —á—Ç–æ –∏ –≤ –≤–æ–ø—Ä–æ—Å–µ 1:

request.user ‚Äî —ç—Ç–æ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–æ–±—ä–µ–∫—Ç CustomUser).

–ß–µ—Ä–µ–∑ OneToOneField —É –Ω–µ–≥–æ –µ—Å—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç InvestorProfile.

–ü–æ—ç—Ç–æ–º—É –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–µ–º—É –∫–∞–∫ –∫ –∞—Ç—Ä–∏–±—É—Ç—É: request.user.investorprofile.

‚ö° –í–∞–∂–Ω–æ: investorprofile –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ —Å–∞–º–æ–º HTTP-–∑–∞–ø—Ä–æ—Å–µ. –≠—Ç–æ –Ω–µ JSON-–ø–æ–ª–µ –∏ –Ω–µ –ø–∞—Ä–∞–º–µ—Ç—Ä.
–ï–≥–æ "–¥–æ—Å—Ç–∞—ë—Ç" Django ORM –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –ë–î –ø–æ —Å–≤—è–∑–∏ User ‚Üí InvestorProfile.


4. –ù–µ –ø–æ–Ω–∏–º–∞—é –ª–æ–≥–∏–∫—É —ç—Ç–æ –∫–æ–¥–∞:
if investor_profile.saved_projects.filter(pk=project.pk).exists():
            serializer = ProjectSerializer(project)
            return Response(
                {"message": "Project is already saved.", "project": serializer.data},
                status=status.HTTP_200_OK,
            )
–ü–æ —ç—Ç–æ–º—É –∫–æ–¥—É –ø–æ–ª—É—á–∞–µ—Ç—Å—è, —á—Ç–æ –µ—Å–ª–∏ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (exists) –ø—Ä–æ–µ–∫—Ç —Å pk –≤ saved_projects, —Ç–æ –≤ serializer –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–º—É –ø—Ä–æ–µ–∫—Ç—É? –¢.–µ. —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω, —á—Ç–æ–±—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ?

üîπ –í–æ–ø—Ä–æ—Å 4
if investor_profile.saved_projects.filter(pk=project.pk).exists():
    serializer = ProjectSerializer(project)
    return Response(
        {"message": "Project is already saved.", "project": serializer.data},
        status=status.HTTP_200_OK,
    )


üëâ –õ–æ–≥–∏–∫–∞ –∑–¥–µ—Å—å –ø—Ä–æ—Å—Ç–∞—è:

saved_projects ‚Äî —ç—Ç–æ ManyToManyField, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã, —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —ç—Ç–∏–º –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–º.

.filter(pk=project.pk).exists() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –≤ —Å–ø–∏—Å–∫–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö.

–ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç —É–∂–µ –µ—Å—Ç—å ‚Üí

–º—ã —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –µ–≥–æ (serializer = ProjectSerializer(project))

–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ "Project is already saved" + —Å–∞–º –ø—Ä–æ–µ–∫—Ç (–≤ JSON).

‚úÖ –î–∞, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤, —á—Ç–æ–±—ã –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ø—Ä–æ–µ–∫—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–ª—Å—è –¥–≤–∞–∂–¥—ã.

5. –í–æ—Ç —ç—Ç–æ—Ç –∫–æ–¥:
with transaction.atomic():
            investor_profile.saved_projects.add(project)
–≠—Ç–æ–≥–æ –∫–æ–¥–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã –≤ —Ç–∞–±–ª–∏—Ü–µ SavedProject –≤ –ë–î –±—ã–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Ö—Ä–∞–Ω–∏–ª –ø—Ä–æ–µ–∫—Ç, –∏ –ø—Ä–æ –ø—Ä–æ–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω —Å–æ—Ö—Ä–∞–Ω–∏–ª? –ê –∫–∞–∫ —Ç–∞–∫ –≤—Å—ë —ç—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è? –û—Ç–∫—É–¥–∞ —ç—Ç–∞ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ —ç—Ç–æ–º –∫–æ–¥–µ?

üîπ –í–æ–ø—Ä–æ—Å 5
with transaction.atomic():
    investor_profile.saved_projects.add(project)


üëâ –ß—Ç–æ –∑–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:

investor_profile.saved_projects ‚Äî —ç—Ç–æ ManyToManyField.
Django –≤–Ω—É—Ç—Ä–∏ —Å–æ–∑–¥–∞—ë—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—É—é —Ç–∞–±–ª–∏—Ü—É (SavedProject), –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç —Å–≤—è–∑–∏ –≤–∏–¥–∞:

investor_profile_id | project_id
------------------- | ----------
       1            |     5
       1            |     7
       2            |     5


–¢–æ –µ—Å—Ç—å –∫—Ç–æ –∫–∞–∫–æ–π –ø—Ä–æ–µ–∫—Ç —Å–æ—Ö—Ä–∞–Ω–∏–ª.

–ö–æ–≥–¥–∞ —Ç—ã –≤—ã–∑—ã–≤–∞–µ—à—å .add(project):

Django –±–µ—Ä—ë—Ç investor_profile.id –∏ project.id.

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —ç—Ç—É –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—É—é —Ç–∞–±–ª–∏—Ü—É.

transaction.atomic() –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥—ë—Ç –Ω–µ —Ç–∞–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É–ø–∞–¥—ë—Ç –ë–î), —Ç–æ –∑–∞–ø–∏—Å—å –Ω–µ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–∞ –Ω–∞–ø–æ–ª–æ–≤–∏–Ω—É ‚Äî —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ª–∏–±–æ –≤—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –ª–∏–±–æ –≤—Å—è –æ—Ç–∫–∞—Ç–∏—Ç—Å—è.


---

# üöÄ –ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å

1. –°–¥–µ–ª–∞–π –º–∏–≥—Ä–∞—Ü–∏–∏:

   ```bash
   python manage.py makemigrations
   python manage.py migrate
   ```

2. –í Postman –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π:

* **–°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤**

  ```
  GET /api/projects/
  ```
* **–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–µ–∫—Ç**

  ```
  POST /api/projects/1/follow/
  ```
* **–£–¥–∞–ª–∏—Ç—å –∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö**

  ```
  POST /api/projects/1/unfollow/
  ```
* **–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ**

  ```
  GET /api/investors/me/
  ```

---

–û—Ç–ª–∏—á–Ω–æ üôå –¢–æ–≥–¥–∞ —Å–¥–µ–ª–∞—é –¥–ª—è —Ç–µ–±—è **—Ñ–∏–Ω–∞–ª—å–Ω—É—é —à–ø–∞—Ä–≥–∞–ª–∫—É –ø–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º** ‚Äî –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã:

---

# üìå –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã API (Projects + Investors)

| URL                            | –ú–µ—Ç–æ–¥  | –ö—Ç–æ –º–æ–∂–µ—Ç    | –û–ø–∏—Å–∞–Ω–∏–µ                                                |
| ------------------------------ | ------ | ------------ | ------------------------------------------------------- |
| `/api/projects/`               | `GET`  | –í—Å–µ –∞–≤—Ç–æ—Ä–∏–∑. | –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç–∞—Ä—Ç–∞–ø-–ø—Ä–æ–µ–∫—Ç–æ–≤                   |
| `/api/projects/{id}/`          | `GET`  | –í—Å–µ –∞–≤—Ç–æ—Ä–∏–∑. | –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞                     |
| `/api/projects/{id}/follow/`   | `POST` | –ò–Ω–≤–µ—Å—Ç–æ—Ä     | –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ ¬´—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ¬ª                         |
| `/api/projects/{id}/unfollow/` | `POST` | –ò–Ω–≤–µ—Å—Ç–æ—Ä     | –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∏–∑ ¬´—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö¬ª                         |
| `/api/investors/`              | `GET`  | –í—Å–µ –∞–≤—Ç–æ—Ä–∏–∑. | –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤                         |
| `/api/investors/{id}/`         | `GET`  | –í—Å–µ –∞–≤—Ç–æ—Ä–∏–∑. | –î–µ—Ç–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞                            |
| `/api/investors/me/`           | `GET`  | –ò–Ω–≤–µ—Å—Ç–æ—Ä     | –ü–æ–ª—É—á–∏—Ç—å **—Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å** + —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ |

---

# üîë –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è Postman

### 1. –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤

```
GET /api/projects/
Authorization: Bearer <token>
```

### 2. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ ¬´–∏–∑–±—Ä–∞–Ω–Ω–æ–µ¬ª

```
POST /api/projects/1/follow/
Authorization: Bearer <token>
```

**–û—Ç–≤–µ—Ç:**

```json
{
  "message": "Project 1 has been saved."
}
```

### 3. –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∏–∑ ¬´–∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ¬ª

```
POST /api/projects/1/unfollow/
Authorization: Bearer <token>
```

**–û—Ç–≤–µ—Ç:**

```json
{
  "message": "Project 1 removed from saved."
}
```

### 4. –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã

```
GET /api/investors/me/
Authorization: Bearer <token>
```

**–û—Ç–≤–µ—Ç (–ø—Ä–∏–º–µ—Ä):**

```json
{
  "id": 2,
  "company_name": "BigMoney Ventures",
  "saved_projects": [
    {
      "id": 1,
      "subject": "AI Startup",
      "idea": "AI for healthcare",
      "description": "Using AI to improve diagnosis",
      "website": "https://ai-startup.com",
      "investment_needed": 1000000,
      "views_count": 34,
      "created_at": "2025-08-25T08:12:30Z",
      "updated_at": "2025-08-25T08:12:30Z",
      "status": "Open",
      "startup_name": "AI Labs",
      "investor_name": null
    }
  ]
}
```

---

üî• –û—Ç–ª–∏—á–Ω–æ, —Ç–æ–≥–¥–∞ —Å–æ–±–µ—Ä—É –¥–ª—è —Ç–µ–±—è **—á–µ–∫-–ª–∏—Å—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è 42** –≤ Postman. –û–Ω –ø–æ–º–æ–∂–µ—Ç –ø–æ—à–∞–≥–æ–≤–æ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç.

---

# ‚úÖ –ß–µ–∫-–ª–∏—Å—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ (–∑–∞–¥–∞–Ω–∏–µ ‚Ññ42)

---

## 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è

* –ü–æ–ª—É—á–∏ `JWT-—Ç–æ–∫–µ–Ω` (–∏–ª–∏ —Ç–æ—Ç —Ç–∏–ø —Ç–æ–∫–µ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π —É —Ç–µ–±—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è).
  –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤–µ–∑–¥–µ —Å—Ç–æ–∏—Ç `IsAuthenticated`.

–ü—Ä–∏–º–µ—Ä (–µ—Å–ª–∏ JWT):

```
POST /api/auth/token/
{
  "email": "investor@example.com",
  "password": "password123"
}
```

–ö–æ–ø–∏—Ä—É–π `access` —Ç–æ–∫–µ–Ω –∏ –≤—Å—Ç–∞–≤–ª—è–π –≤ Postman ‚Üí Headers:

```
Authorization: Bearer <—Ç–æ–∫–µ–Ω>
```

---

## 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤

```
GET /api/projects/
Authorization: Bearer <—Ç–æ–∫–µ–Ω>
```

üëâ –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤–∏–¥–∏—à—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –ø–æ–ª—è–º–∏ (`id`, `subject`, `idea`, `status`, `startup_name`, –∏ —Ç.–¥.).

---

## 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞

```
GET /api/projects/1/
Authorization: Bearer <—Ç–æ–∫–µ–Ω>
```

üëâ –î–æ–ª–∂–µ–Ω –ø—Ä–∏–π—Ç–∏ –ø–æ–ª–Ω—ã–π JSON –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.

---

## 4. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–µ–∫—Ç (follow)

```
POST /api/projects/1/follow/
Authorization: Bearer <—Ç–æ–∫–µ–Ω>
```

üëâ –û—Ç–≤–µ—Ç:

```json
{"message": "Project 1 has been saved."}
```

---

## 5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞

```
GET /api/investors/me/
Authorization: Bearer <—Ç–æ–∫–µ–Ω>
```

üëâ –í –ø–æ–ª–µ `saved_projects` –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –ø—Ä–æ–µ–∫—Ç —Å `id=1`.

---

## 6. –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∏–∑ ¬´—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö¬ª (unfollow)

```
POST /api/projects/1/unfollow/
Authorization: Bearer <—Ç–æ–∫–µ–Ω>
```

üëâ –û—Ç–≤–µ—Ç:

```json
{"message": "Project 1 removed from saved."}
```

---

## 7. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –∏—Å—á–µ–∑ –∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö

```
GET /api/investors/me/
Authorization: Bearer <—Ç–æ–∫–µ–Ω>
```

üëâ –í `saved_projects` –±–æ–ª—å—à–µ **–Ω–µ—Ç** –ø—Ä–æ–µ–∫—Ç–∞ —Å `id=1`.

---

# üéØ –ò—Ç–æ–≥

–ï—Å–ª–∏ –≤—Å—ë –ø—Ä–æ—à–ª–æ –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ:

1. –¢—ã –≤–∏–¥–∏—à—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤.
2. –ú–æ–∂–µ—à—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–µ–∫—Ç.
3. –í `/me/` –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç.
4. –ü–æ—Å–ª–µ `unfollow` –æ–Ω –∏—Å—á–µ–∑–∞–µ—Ç.

---

–•–æ—á–µ—à—å, —è —Å–æ–±–µ—Ä—É —ç—Ç–æ—Ç —á–µ–∫-–ª–∏—Å—Ç –µ—â—ë –∏ –≤ **–≥–æ—Ç–æ–≤—ã–π Postman Collection (JSON-—Ñ–∞–π–ª)**, —á—Ç–æ–±—ã —Ç—ã –ø—Ä–æ—Å—Ç–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª –∏ —Å—Ä–∞–∑—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª –±–µ–∑ —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞?
