# ‚úÖ –ß–∞—Å—Ç—å 1: –ú–æ–¥–µ–ª–∏ ‚Äî `UserProfile` –∏ `UserRole`

```python
# backend/users/models.py

from django.db import models
from django.contrib.auth.models import AbstractBaseUser, PermissionsMixin, BaseUserManager

class UserRole(models.Model):
    role = models.CharField(max_length=50, unique=True)

    def __str__(self):
        return self.role


class UserProfileManager(BaseUserManager):
    def create_user(self, email, password, **extra_fields):
	–ú–æ–∂–Ω–æ –ª–∏ —É–±—Ä–∞—Ç—å password=None –∏–∑ create_user(...)?
	–î–∞, —Ç—ã –º–æ–∂–µ—à—å —É–±—Ä–∞—Ç—å =None, –∏ —Ç–æ–≥–¥–∞ –ø–∞—Ä–æ–ª—å —Å—Ç–∞–Ω–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º:
	def create_user(self, email, password, **extra_fields):
	–¢–µ–ø–µ—Ä—å, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –≤—ã–∑–æ–≤–µ—Ç:
	UserProfile.objects.create_user(email='test@example.com')
	‚Äî Python –≤—ã–±—Ä–æ—Å–∏—Ç TypeError: missing required positional argument: 'password'.
	–≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –∂—ë—Å—Ç–∫–æ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	–ù–æ –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω: –µ—Å–ª–∏ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å createsuperuser, –æ–Ω —Ç–æ–∂–µ –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å password, –∏–Ω–∞—á–µ —É–ø–∞–¥—ë—Ç.
	
        if not email:
            raise ValueError("Email is required")
        email = self.normalize_email(email)
		—ç—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –≤ BaseUserManager.
		–û–Ω:
			- –ü—Ä–∏–≤–æ–¥–∏—Ç email –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
			- –£–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
			- –î–µ–ª–∞–µ—Ç email –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è
		–≠—Ç–æ –≤–∞–∂–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ UserProfile.email ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ, –∏ User@Example.com –∏ user@example.com –¥–æ–ª–∂–Ω—ã —Å—á–∏—Ç–∞—Ç—å—Å—è –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ.

        user = self.model(email=email, **extra_fields)
		–≠—Ç–æ –∫–ª—é—á–µ–≤–æ–π –º–æ–º–µ–Ω—Ç:
			- self.model ‚Äî —ç—Ç–æ –º–æ–¥–µ–ª—å, –∫ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–∏–≤—è–∑–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ ‚Äî UserProfile.
			- Django —Å–∞–º –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç self.model = UserProfile –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
			- extra_fields ‚Äî —ç—Ç–æ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –ø–µ—Ä–µ–¥–∞–ª: username, first_name, last_name, phone, role –∏ —Ç.–¥.
			- **extra_fields ‚Äî —ç—Ç–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Å–ª–æ–≤–∞—Ä—è –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –º–æ–¥–µ–ª–∏.
		–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≥–∏–±–∫–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ª—é–±—ã–µ –ø–æ–ª—è, –Ω–µ –ø–µ—Ä–µ—á–∏—Å–ª—è—è –∏—Ö –≤—Ä—É—á–Ω—É—é.

        user.set_password(password)  # —Ö—ç—à–∏—Ä—É–µ—Ç –ø–∞—Ä–æ–ª—å
		–≠—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –∏–∑ AbstractBaseUser.
		–û–Ω:
			- –•—ç—à–∏—Ä—É–µ—Ç –ø–∞—Ä–æ–ª—å —Å –ø–æ–º–æ—â—å—é –∞–ª–≥–æ—Ä–∏—Ç–º–∞ Django (PBKDF2 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
			- –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ö—ç—à –≤ –ø–æ–ª–µ password
		–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–π –ø–∞—Ä–æ–ª—å –Ω–∞–ø—Ä—è–º—É—é ‚Äî —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ set_password.

        user.save(using=self._db)
		–≠—Ç–æ —Å–ø–æ—Å–æ–± —É–∫–∞–∑–∞—Ç—å, –≤ –∫–∞–∫—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—ä–µ–∫—Ç, –µ—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–∞–∑.
			- self._db ‚Äî —ç—Ç–æ –∏–º—è –±–∞–∑—ã, –∫–æ—Ç–æ—Ä—É—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'default')
			- –í –æ–±—ã—á–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –ø—Ä–æ—Å—Ç–æ user.save(), –Ω–æ using=self._db ‚Äî —ç—Ç–æ best practice –ø—Ä–∏ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–∞—Ö

        return user
		
		–°—É—Ç—å: Django —Ç—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã —É –∫–∞—Å—Ç–æ–º–Ω–æ–π –º–æ–¥–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª –º–µ–Ω–µ–¥–∂–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∞–≤–∏–ª—å–Ω–æ.
			- BaseUserManager ‚Äî —ç—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã create_user() –∏ create_superuser().
			- –ú—ã –Ω–∞—Å–ª–µ–¥—É–µ–º—Å—è –æ—Ç –Ω–µ–≥–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –ª–æ–≥–∏–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, normalize_email) –∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥ –Ω–∞—à—É –º–æ–¥–µ–ª—å.
			–ë–µ–∑ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ Django –Ω–µ —Å–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ createsuperuser.

	
	# TODO: –ø–æ–∫–∞ —É–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –º–µ—Ç–æ–¥
    def create_superuser(self, email, password, **extra_fields):
        extra_fields.setdefault('is_staff', True)
        extra_fields.setdefault('is_superuser', True)
        return self.create_user(email, password, **extra_fields)


class UserProfile(AbstractBaseUser, PermissionsMixin):
		AbstractBaseUser:
		- –î–∞—ë—Ç –ø–æ–ª—è: password, last_login
		- –î–∞—ë—Ç –º–µ—Ç–æ–¥—ã: set_password(), check_password()
		PermissionsMixin:
		- –î–∞—ë—Ç –ø–æ–ª—è: is_superuser, groups, user_permissions
		- –î–∞—ë—Ç –º–µ—Ç–æ–¥—ã: has_perm(), has_module_perms()
		–í–º–µ—Å—Ç–µ –æ–Ω–∏ –¥–∞—é—Ç –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.

    username = models.CharField(max_length=150, unique=True)
    email = models.EmailField(max_length=255, unique=True)
    first_name = models.CharField(max_length=150)
    last_name = models.CharField(max_length=150)
    phone = models.CharField(max_length=20, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    last_login = models.DateTimeField(null=True, blank=True)
    role = models.ForeignKey(UserRole, on_delete=models.SET_NULL, null=True)
		- Django –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–≤—è–∑—ã–≤–∞–µ—Ç –ø–æ –ø–µ—Ä–≤–∏—á–Ω–æ–º—É –∫–ª—é—á—É ‚Äî UserRole.id
		- PostgreSQL —Å–æ–∑–¥–∞—ë—Ç –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á: role_id ‚Üí UserRole.id
		- –¢—ã –º–æ–∂–µ—à—å —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å to_field='role', –Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî id
		Django —Å–∞–º —Å–æ–∑–¥–∞—ë—Ç role_id –≤ —Ç–∞–±–ª–∏—Ü–µ UserProfile, –∏ —Å–≤—è–∑—ã–≤–∞–µ—Ç —Å UserRole.id
		
    is_active = models.BooleanField(default=True)
    is_staff = models.BooleanField(default=False)
	–≠—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ø–æ–ª–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç:
		- –ú–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–π—Ç–∏ –≤ –∞–¥–º–∏–Ω–∫—É Django
		- –ï—Å–ª–∏ is_staff=True ‚Äî –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω
		–≠—Ç–æ –Ω–µ —Å–≤—è–∑–∞–Ω–æ —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –≤ API, –Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏.

    objects = UserProfileManager()
	–≠—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç Django:
		‚Äú–ò—Å–ø–æ–ª—å–∑—É–π UserProfileManager –∫–∞–∫ –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —ç—Ç–æ–π –º–æ–¥–µ–ª–∏‚Äù.
		- –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–∏—Å–∞—Ç—å:
		UserProfile.objects.create_user(...)
		UserProfile.objects.create_superuser(...)

		–ë–µ–∑ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ Django –Ω–µ –±—É–¥–µ—Ç –∑–Ω–∞—Ç—å, –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

    USERNAME_FIELD = 'email'
		- –£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –ª–æ–≥–∏–Ω –±—É–¥–µ—Ç –ø–æ email, –∞ –Ω–µ –ø–æ username
		- –≠—Ç–æ –ø–æ–ª–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

    REQUIRED_FIELDS = ['username', 'first_name', 'last_name']
		- –£–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫–∏–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		- Django —Å–ø—Ä–æ—Å–∏—Ç –∏—Ö –ø—Ä–∏ createsuperuser
		–≠—Ç–æ –Ω—É–∂–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ email —É–∂–µ —É–∫–∞–∑–∞–Ω –∫–∞–∫ USERNAME_FIELD, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ ‚Äî –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ.

    def __str__(self):
        return self.email
```

---

## üìò –ü–æ—è—Å–Ω–µ–Ω–∏–µ –∫ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ

- `AbstractBaseUser` ‚Äî –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –±–µ–∑ username, –Ω–æ —Å –ø–∞—Ä–æ–ª–µ–º –∏ last_login.
- `PermissionsMixin` ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è `is_superuser`, `groups`, `user_permissions`.
- `UserProfileManager` ‚Äî –∫–∞—Å—Ç–æ–º–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä, —á—Ç–æ–±—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
- `set_password()` ‚Äî —Ö—ç—à–∏—Ä—É–µ—Ç –ø–∞—Ä–æ–ª—å, –Ω–µ —Ö—Ä–∞–Ω–∏–º –µ–≥–æ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ.
- `USERNAME_FIELD = 'email'` ‚Äî –ª–æ–≥–∏–Ω –±—É–¥–µ—Ç –ø–æ email.
- `role = ForeignKey(UserRole)` ‚Äî —Å–≤—è–∑—å —Å —Ç–∞–±–ª–∏—Ü–µ–π —Ä–æ–ª–µ–π.
- `is_staff`, `is_active` ‚Äî –Ω—É–∂–Ω—ã –¥–ª—è –∞–¥–º–∏–Ω–∫–∏ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.

---

# ‚úÖ –ß–∞—Å—Ç—å 2: –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

```python
# backend/users/serializers.py

from rest_framework import serializers
from django.contrib.auth.password_validation import validate_password
from .models import UserProfile, UserRole

class UserRegistrationSerializer(serializers.ModelSerializer):
    password = serializers.CharField(write_only=True)

    class Meta:
        model = UserProfile
        fields = [
            'username',
            'email',
            'password',
            'first_name',
            'last_name',
            'phone',
            'role'
        ]
	
	–î–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏ Django –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –≤ setting.py –±—ã–ª–æ:
	AUTH_PASSWORD_VALIDATORS = [
		{
			'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
		},
		{
			'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
			'OPTIONS': {'min_length': 8}
		},
		{
			'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
		},
		{
			'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
		},
	]
	def validate_password(self, value):
        # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã Django
        validate_password(value)
        return value

	def validate_email(self, value):
        if UserProfile.objects.filter(email=value).exists():
            raise serializers.ValidationError("Email already in use.")
        return value

	def validate_username(self, value):
        if UserProfile.objects.filter(username=value).exists():
            raise serializers.ValidationError("Username already taken.")
        return value

    def create(self, validated_data):
        password = validated_data.pop('password')
        user = UserProfile(**validated_data)
        user.set_password(password)  # –•—ç—à–∏—Ä—É–µ—Ç –ø–∞—Ä–æ–ª—å
        user.save()
        return user
		–ú–µ—Ç–æ–¥ create(self, validated_data) –≤ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–µ –ø–µ—Ä–µ–¥–∞—ë—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –≤ –º–æ–¥–µ–ª—å, –∏ Django –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—è –∏–∑ validated_data —Å –ø–æ–ª—è–º–∏ –º–æ–¥–µ–ª–∏ UserProfile.
		–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
		user = UserProfile(**validated_data)
		- validated_data ‚Äî —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–æ–ª—å–∫–æ —Ç–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ:
			- –±—ã–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ fields —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
			- –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é
		- Django –≤—ã–∑—ã–≤–∞–µ—Ç UserProfile.__init__() –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞:
		UserProfile(
			username='konstantin42',
			email='konstantin@example.com',
			first_name='–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω',
			last_name='–ò–≤–∞–Ω–æ–≤',
			phone='+380123456789',
			role=<UserRole: –∏–Ω–≤–µ—Å—Ç–æ—Ä>
		)
		–í—Å–µ –ø–æ–ª—è, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ fields, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ validated_data, –µ—Å–ª–∏ –æ–Ω–∏ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é.
		üîß –ü–æ—á–µ–º—É —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ?
		- –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä —Å–∞–º —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ –Ω–µ –ø–æ–ø–∞–¥—ë—Ç
		- –ï—Å–ª–∏ –ø–æ–ª–µ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –º–æ–¥–µ–ª—å ‚Äî Django –≤—ã–±—Ä–æ—Å–∏—Ç TypeError
		- –ï—Å–ª–∏ –ø–æ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî Django –∏—Å–ø–æ–ª—å–∑—É–µ—Ç default –∏–ª–∏ null, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –≤ –º–æ–¥–µ–ª–∏

		‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: UserProfile.objects.create(...)
		–¢—ã –º–æ–≥ –±—ã –Ω–∞–ø–∏—Å–∞—Ç—å:
		user = UserProfile.objects.create(**validated_data)
		–ù–æ —Ç–æ–≥–¥–∞:
		- Django —Å—Ä–∞–∑—É —Å–æ—Ö—Ä–∞–Ω–∏—Ç –æ–±—ä–µ–∫—Ç –≤ –ë–î
		- –ê —Ç—ã –Ω–µ —É—Å–ø–µ–µ—à—å –≤—ã–∑–≤–∞—Ç—å set_password() –¥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
		–ü–æ—ç—Ç–æ–º—É –º—ã –¥–µ–ª–∞–µ–º:
		user = UserProfile(**validated_data)  # —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç, –Ω–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
		user.set_password(password)           # —Ö—ç—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
		user.save()                           # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä—É—á–Ω—É—é
		–≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –ø–∞—Ä–æ–ª—å –±—É–¥–µ—Ç —Ö—ç—à–∏—Ä–æ–≤–∞–Ω –¥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.
---

## üìò –ü–æ—è—Å–Ω–µ–Ω–∏–µ –∫ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä—É

- `write_only=True` ‚Äî –ø–æ–ª—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –æ—Ç–≤–µ—Ç–µ.
- `validate()` ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π.
- `create()` ‚Äî —Å–æ–∑–¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ `create_user`, —Å —Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º.
- `company_name`, `representative_type`, `business_entity_type` ‚Äî –ø–æ–∫–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è, –Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ª–æ–≥–∏–∫–∏/–≤–∞–ª–∏–¥–∞—Ü–∏–∏.

---

# ‚úÖ –ß–∞—Å—Ç—å 3: API-—ç–Ω–¥–ø–æ–∏–Ω—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

```python
# backend/users/views.py

from rest_framework import status
from rest_framework.response import Response
from rest_framework.views import APIView
from .serializers import UserRegistrationSerializer

class UserRegistrationView(APIView):
    def post(self, request):
        serializer = UserRegistrationSerializer(data=request.data)
        if serializer.is_valid():
		–≠—Ç–æ –º–µ—Ç–æ–¥ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞ Serializer. –û–Ω:
			- –≤—ã–∑—ã–≤–∞–µ—Ç validate_<field>() –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è
			- –≤—ã–∑—ã–≤–∞–µ—Ç validate() –¥–ª—è –æ–±—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
			- —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ serializer.validated_data

            user = serializer.save()
            return Response({"message": "User registered successfully"}, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
```

---

# ‚úÖ –ß–∞—Å—Ç—å 4: URL-–º–∞—Ä—à—Ä—É—Ç

```python
# backend/users/urls.py

from django.urls import path
from .views import UserRegistrationView

urlpatterns = [
    path('signup/', UserRegistrationView.as_view(), name='user-signup'),
]
```

–ò –ø–æ–¥–∫–ª—é—á–∏ `users.urls` –≤ `backend/config/urls.py`:

```python
path('api/users/', include('users.urls')),
```

---

# ‚úÖ –ß–∞—Å—Ç—å 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ JWT

```python
# backend/config/settings.py

INSTALLED_APPS += [
    'rest_framework',
    'rest_framework_simplejwt',
    'users',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ]
}

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
}
```

---

# ‚úÖ –ß–∞—Å—Ç—å 6: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–π –º–æ–¥–µ–ª–∏

```python
# backend/config/settings.py

AUTH_USER_MODEL = 'users.UserProfile'
—É–∫–∞–∑–∞—Ç—å —ç—Ç–æ –≤ settings.py, –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏, –¥–æ –ª—é–±—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –º–æ–¥–µ–ª–µ–π –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤.
–≠—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ: –µ—Å–ª–∏ —Ç—ã –Ω–µ —É–∫–∞–∂–µ—à—å —ç—Ç–æ –¥–æ –º–∏–≥—Ä–∞—Ü–∏–π, Django —Å–æ–∑–¥–∞—Å—Ç auth.User –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∏ –ø–æ—Ç–æ–º –±—É–¥–µ—Ç —Å–ª–æ–∂–Ω–æ –ø–µ—Ä–µ–µ—Ö–∞—Ç—å.
```

---

## üß™ –§–∏–Ω–∞–ª—å–Ω—ã–µ —à–∞–≥–∏

1. –°–æ–∑–¥–∞–π –º–∏–≥—Ä–∞—Ü–∏–∏:

```bash
python manage.py makemigrations users
python manage.py migrate
```

2. –ü—Ä–æ–≤–µ—Ä—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:

```http
POST /api/users/signup/
Content-Type: application/json

{
  "username": "konstantin42",
  "email": "konstantin@example.com",
  "password": "StrongPass123!",
  "confirm_password": "StrongPass123!",
  "first_name": "–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω",
  "last_name": "–ò–≤–∞–Ω–æ–≤",
  "phone": "+380123456789",
  "company_name": "UA Startups",
  "representative_type": "Founder",
  "business_entity_type": "LLC"
}