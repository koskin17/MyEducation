–û—Ç–ª–∏—á–Ω–æ, –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω ‚Äî –¥–∞–≤–∞–π –Ω–∞—á–Ω—ë–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è **[Authorization] Update the authorization process via WebSockets**, —Å—Ç—Ä–æ–≥–æ –ø–æ —ç—Ç–∞–ø–∞–º. –ú—ã –±—É–¥–µ–º –¥–≤–∏–≥–∞—Ç—å—Å—è –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–µ Django-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏: —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å—é.

---

## üß≠ –¶–µ–ª—å

> ‚úÖ –û–±–µ—Å–ø–µ—á–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é WebSocket-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ JWT, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–π –≤ URL:  
> `ws://localhost:8000/ws/chat/?token=<JWT_ACCESS_TOKEN>`

---

## üìå –≠—Ç–∞–ø 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞

### üîç –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ Django Channels —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω

–¢—ã –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ –¥—Ä—É–≥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª –∑–∞–¥–∞–Ω–∏–µ ‚Äú[Chat] Setup Django Channels‚Äù. –î–∞–≤–∞–π —É–±–µ–¥–∏–º—Å—è:

1. –í `settings.py` –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:
   ```python
   INSTALLED_APPS = [
       ...
       'channels',
   ]

   ASGI_APPLICATION = 'config.asgi.application'
   ```

2. –í –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–∞–π–ª `asgi.py`, –Ω–∞–ø—Ä–∏–º–µ—Ä:
   ```python
   from channels.routing import ProtocolTypeRouter, URLRouter
   from django.core.asgi import get_asgi_application
   from chat.routing import websocket_urlpatterns

   application = ProtocolTypeRouter({
       "http": get_asgi_application(),
       "websocket": URLRouter(websocket_urlpatterns),
   })
   ```

3. –í `chat/routing.py` –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å WebSocket –º–∞—Ä—à—Ä—É—Ç:
   ```python
   from django.urls import path
   from chat.consumers import ChatConsumer

   websocket_urlpatterns = [
       path("ws/chat/", ChatConsumer.as_asgi()),
   ]
   ```

> ‚úÖ –ï—Å–ª–∏ –≤—Å—ë —ç—Ç–æ –µ—Å—Ç—å ‚Äî –º—ã –≥–æ—Ç–æ–≤—ã –≤–Ω–µ–¥—Ä—è—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.

---

## üß© –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞—ë–º middleware –¥–ª—è JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

–°–æ–∑–¥–∞–π —Ñ–∞–π–ª `users/middleware.py` –∏ –¥–æ–±–∞–≤—å —Ç—É–¥–∞:

```python
# users/middleware.py
from urllib.parse import parse_qs
from rest_framework_simplejwt.tokens import AccessToken
from django.contrib.auth import get_user_model
from channels.db import database_sync_to_async

User = get_user_model()

class JWTAuthMiddleware:
    def __init__(self, inner):
        self.inner = inner

    def __call__(self, scope):
        return JWTAuthMiddlewareInstance(scope, self)

class JWTAuthMiddlewareInstance:
    def __init__(self, scope, middleware):
        self.scope = scope
        self.middleware = middleware

    async def __call__(self, receive, send):
        query_string = self.scope.get("query_string", b"").decode()
        query_params = parse_qs(query_string)
        token_list = query_params.get("token")

        if token_list:
            token = token_list[0]
            try:
                access_token = AccessToken(token)
                user_id = access_token["user_id"]
                user = await database_sync_to_async(User.objects.get)(id=user_id)
                self.scope["user"] = user
            except Exception:
                self.scope["user"] = None
        else:
            self.scope["user"] = None

        inner = self.middleware.inner
        return await inner(self.scope, receive, send)
```

> üîê –≠—Ç–æ—Ç –∫–æ–¥ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç JWT —Ç–æ–∫–µ–Ω –∏–∑ URL –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç `scope['user']`, –µ—Å–ª–∏ –æ–Ω –≤–∞–ª–∏–¥–µ–Ω.

---

## ‚öôÔ∏è –≠—Ç–∞–ø 3: –ü–æ–¥–∫–ª—é—á–∞–µ–º middleware –≤ `asgi.py`

–û—Ç–∫—Ä–æ–π `config/asgi.py` –∏ –∑–∞–º–µ–Ω–∏:

```python
from users.middleware import JWTAuthMiddleware

application = ProtocolTypeRouter({
    "http": get_asgi_application(),
    "websocket": JWTAuthMiddleware(
        URLRouter(websocket_urlpatterns)
    ),
})
```

> ‚úÖ –¢–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–π WebSocket-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ JWT-–ø—Ä–æ–≤–µ—Ä–∫—É.

---

## üß† –≠—Ç–∞–ø 4: –û–±–Ω–æ–≤–ª—è–µ–º consumer

–û—Ç–∫—Ä–æ–π `chat/consumers.py` –∏ –¥–æ–±–∞–≤—å –ø—Ä–æ–≤–µ—Ä–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:

```python
from channels.generic.websocket import AsyncWebsocketConsumer
from django.contrib.auth.models import AnonymousUser

class ChatConsumer(AsyncWebsocketConsumer):
    async def connect(self):
        user = self.scope.get("user", AnonymousUser())
        if not user or not user.is_authenticated:
            await self.close()
            return

        await self.accept()
```

> üîí –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è.

---

## üß™ –≠—Ç–∞–ø 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

1. –ü–æ–ª—É—á–∏ `access` —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ `/login`
2. –ü–æ–¥–∫–ª—é—á–∏—Å—å —á–µ—Ä–µ–∑ WebSocket:
   ```javascript
   const socket = new WebSocket("ws://localhost:8000/ws/chat/?token=" + accessToken);
   ```
3. –ü—Ä–æ–≤–µ—Ä—å:
   - ‚úÖ –í–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω ‚Üí —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
   - ‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ ‚Üí —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ
   - ‚ùå –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω ‚Üí —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ

---

## ‚úÖ –≠—Ç–∞–ø 6: –ó–∞–≤–µ—Ä—à–∞–µ–º

- –î–æ–±–∞–≤—å middleware –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
- –ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π README –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR:
  > ‚Äú–î–æ–±–∞–≤–ª–µ–Ω–∞ JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è WebSocket. –¢–æ–∫–µ–Ω –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —á–µ—Ä–µ–∑ URL. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ `users/middleware.py`. –¢–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è.‚Äù

---

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è middleware, –∏–ª–∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –µ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞. –ì–æ—Ç–æ–≤ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ!
