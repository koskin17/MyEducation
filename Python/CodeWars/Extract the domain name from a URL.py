# Write a function that when given a URL as a string parses out just the domain name and returns it as a string. For example:

# * url = "http://github.com/carbonfive/raygun" -> domain name = "github"
# * url = "http://www.zombie-bites.com"         -> domain name = "zombie-bites"
# * url = "https://www.cnet.com"                -> domain name = cnet"

## ‚úÖ –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è
# * üîß —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è `re` (—Ä–µ–≥—É–ª—è—Ä–Ω—ñ –≤–∏—Ä–∞–∑–∏) ‚Äî –ø—Ä–æ—Å—Ç–æ, –≥–Ω—É—á–∫–æ

import re

def domain_name(url):
    return re.search(r'(?:https?://)?(?:www\.)?([^\.]+)', url).group(1)

### üß™ –ü–æ—è—Å–Ω–µ–Ω–Ω—è:

# | –ß–∞—Å—Ç–∏–Ω–∞ —à–∞–±–ª–æ–Ω—É  | –©–æ —Ä–æ–±–∏—Ç—å                               |
# | ---------------- | --------------------------------------- |
# | `(?:https?://)?` | –ù–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–π `http://` –∞–±–æ `https://` |
# | `(?:www\.)?`     | –ù–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–π `www.`                   |
# | `([^\.]+)`       | –ì—Ä—É–ø–∞ ‚Äî –∑–∞—Ö–æ–ø–ª—é—î **—ñ–º‚Äô—è –¥–æ–º–µ–Ω—É**        |

# üëâ `.group(1)` ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î —Å–∞–º–µ –¥–æ–º–µ–Ω

domain_name("http://google.com") #"google")
domain_name("http://google.co.jp") #"google")
domain_name("https://123.net") #"123")
domain_name("https://hyphen-site.org") #"hyphen-site")
domain_name("http://codewars.com") #"codewars")
domain_name("www.xakep.ru") #"xakep")
domain_name("https://youtube.com") #"youtube")
domain_name("http://www.codewars.com/kata/") #"codewars")
domain_name("icann.org") #"icann")