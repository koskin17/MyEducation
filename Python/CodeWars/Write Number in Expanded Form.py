# Write Number in Expanded Form
# You will be given a number and you will need to return it as a string in Expanded Form. For example:

#    12 --> "10 + 2"
#    45 --> "40 + 5"
# 70304 --> "70000 + 300 + 4"
# NOTE: All numbers will be whole numbers greater than 0.

# –¶—è –∑–∞–¥–∞—á–∞ ‚Äî –∫–ª–∞—Å–∏—á–Ω–∞ –∑–∞–¥–∞—á–∞ –Ω–∞ **–ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —á–∏—Å–ª–∞ –≤ —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç—É (expanded) —Ñ–æ—Ä–º—É**, —Ç–æ–±—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω–æ—ó —Ü–∏—Ñ—Ä–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —ó—ó –ø–æ–∑–∏—Ü—ñ—ó –≤ —á–∏—Å–ª—ñ.
# ## üéØ –ü—Ä–∏–∫–ª–∞–¥:
# –ß–∏—Å–ª–æ `70304` –º–∏ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –Ω–∞:
# ```
# 70000 + 300 + 4
# ```

# –ë–æ:
# * 7 ‚Äî —Å—Ç–æ—ó—Ç—å —É –¥–µ—Å—è—Ç–∫–∞—Ö —Ç–∏—Å—è—á ‚Üí 70000
# * 0 ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
# * 3 ‚Äî —Å–æ—Ç–Ω—ñ ‚Üí 300
# * 0 ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
# * 4 ‚Äî –æ–¥–∏–Ω–∏—Ü—ñ ‚Üí 4

## ‚úÖ –ü—Ä–æ—Å—Ç–∏–π —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–±:
def expanded_form(num):
    num_str = str(num)               # –ü–µ—Ä–µ—Ç–≤–æ—Ä–∏–º–æ —á–∏—Å–ª–æ –≤ —Ä—è–¥–æ–∫
    length = len(num_str)           # –î–æ–≤–∂–∏–Ω–∞ —á–∏—Å–ª–∞
    parts = []

    for i, digit in enumerate(num_str):
        if digit != '0':
            zeros = length - i - 1   # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –Ω—É–ª—ñ–≤ –ø—ñ—Å–ª—è —Ü–∏—Ñ—Ä–∏
            parts.append(digit + '0' * zeros)

    return ' + '.join(parts)

## üß™ –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
print(expanded_form(12))      # "10 + 2"
print(expanded_form(45))      # "40 + 5"
print(expanded_form(70304))   # "70000 + 300 + 4"

# ## üì¶ –Ø–∫ –ø—Ä–∞—Ü—é—î:
# * `enumerate(num_str)` ‚Äî –ø–µ—Ä–µ–±–∏—Ä–∞—î –≤—Å—ñ —Ü–∏—Ñ—Ä–∏
# * –Ø–∫—â–æ —Ü–∏—Ñ—Ä–∞ **–Ω–µ –Ω—É–ª—å**:
#   * –î–æ–¥–∞—î–º–æ –¥–æ –Ω–µ—ó **—Å—Ç—ñ–ª—å–∫–∏ –Ω—É–ª—ñ–≤**, —Å–∫—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä –ø—ñ—Å–ª—è –Ω–µ—ó
# * –ü–æ—Ç—ñ–º –æ–±'—î–¥–Ω—É—î–º–æ —á–∞—Å—Ç–∏–Ω–∏ —á–µ—Ä–µ–∑ `" + "` ‚Üí —Ü–µ —ñ —î —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–∞ —Ñ–æ—Ä–º–∞

## üß† –Ø–∫—â–æ —Ö–æ—á–µ—à —â–µ –ø—Ä–æ—Å—Ç—ñ—à–∏–π –æ–¥–Ω–æ—Ä—è–¥–∫–æ–≤–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç:

def expanded_form(num):
    return ' + '.join(
        digit + '0' * (len(str(num)) - i - 1)
        for i, digit in enumerate(str(num)) if digit != '0'
    )